{"version":3,"file":"js/4112.9068b51f.js","mappings":"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6BACPC,KAAM,eACN6B,QAASV,EAAgB,WAE3B,CACEpB,MAAO,iCACPC,KAAM,mBACN6B,QAASV,EAAgB,eAE3B,CACErB,MAAO,gCACPC,MAAO,OACPC,KAAM,CACJ,CACIF,MAAO,gBACPC,MAAO,kCACPC,KAAM,gBAEV,CACEF,MAAO,iCACPC,MAAO,WACPC,KAAM,SAIZ,CACEF,MAAO,kCACPC,MAAO,OACP+B,KAAM,iBASZvE,KAAKwE,WAAWnC,EAAoB,UAAW,CAC7C,CACEE,MAAO,eACPE,KAAM,MACND,MAAO,gCACP8B,QAASV,EAAgB,gBAI7B5D,KAAKwE,WAAWb,EAA0B,cAAe,CACvD,CACEpB,MAAO,mBACPE,KAAM,MACND,MAAO,oCACP8B,QAASV,EAAgB,oBAM7B5D,KAAKwE,WAAWf,EAAmB,SAAU,CAC3C,CACElB,MAAO,cACPE,KAAM,MACND,MAAO,+BACP8B,QAASV,EAAgB,eAI7B5D,KAAKwE,WAAWf,EAAmB,cAAe,CAChD,CACElB,MAAO,mBACPE,KAAM,MACND,MAAO,oCACP8B,QAASV,EAAgB,oBAQ7B5D,KAAKyE,SAAS,CACZ,eAAgB,CACd,CACElC,MAAO,mCACPC,MAAO,KACPC,KAAM,OAER,CACEF,MAAO,iCACPC,MAAO,KACPC,KAAM,OAER,CACEF,MAAO,SACPC,MAAO,kCAET,CACED,MAAO,SACPC,MAAO,kCAET,CACED,MAAO,mBACPC,MAAO,uBAET,CACED,MAAO,mBACPC,MAAO,8CAET,CACED,MAAO,mBACPC,MAAO,wBAET,CACED,MAAO,4BACPC,MAAO,8BAET,CACED,MAAO,mBACPC,MAAO,oCAET,CACED,MAAO,CAAC,mBAAoB,oBAC5BC,MAAO,uBAGT,CACED,MAAO,mBACPC,MAAO,0BAET,CACED,MAAO,mBACPC,MACE,uBAEJ,CACED,MAAO,CACL,gBACA,mBACA,iBACA,mBACA,sBAEFC,MAAO,6BAET,CACED,MAAO,qBACPC,MAAO,mCAET,CACED,MAAO,gBACPC,MAAO,6EAET,CACED,MAAO,eACPC,MAAO,WAET,CACED,MAAO,eACPC,MAAO,UAET,CACED,MAAO,OACPC,MAAO,UAKbxC,KAAK0E,gBAEP,EAEAlF,EAAIa,SAAS0C,EAAsBX,GAEnCD,EAAQ,EAAuBY,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/json.js","webpack://admin/./node_modules/ace-code/src/mode/json_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/liquid.js","webpack://admin/./node_modules/ace-code/src/mode/liquid_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/json_worker\", \"JsonWorker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n\n\n    this.$id = \"ace/mode/json\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[,]/\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n","var oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HtmlMode = require(\"./html\").Mode;\nvar JavascriptMode = require(\"./javascript\").Mode;\nvar JsonMode = require(\"./json\").Mode;\nvar CssMode = require(\"./css\").Mode;\nvar LiquidHighlightRules = require(\"./liquid_highlight_rules\").LiquidHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n/* -------------------------------------------- */\n/* FOLDS                                        */\n/* -------------------------------------------- */\n\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n/* -------------------------------------------- */\n/* MODE                                         */\n/* -------------------------------------------- */\n\nvar Mode = function () {\n\n  JsonMode.call(this);\n  HtmlMode.call(this);\n  CssMode.call(this);\n  JavascriptMode.call(this);\n  this.HighlightRules = LiquidHighlightRules;\n  this.foldingRules = new FoldMode();\n\n};\n\noop.inherits(Mode, TextMode);\n\n(function () {\n\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n    this.voidElements = new HtmlMode().voidElements;\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/liquid\";\n    this.snippetFileId = \"ace/snippets/liquid\";\n\n}.call(Mode.prototype));\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\n\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = require(\"./css_highlight_rules\").CssHighlightRules;\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar JavaScriptHighlightRules =  require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nvar LiquidHighlightRules = function () {\n\n  HtmlHighlightRules.call(this);\n\n  /**\n   * Embedded Matches\n   *\n   * Handles `onMatch` tokens and correct parses the\n   * inner contents of the tag.\n   */\n  function onMatchEmbedded(name) {\n\n    const length = name.length;\n\n    return function (value) {\n\n      const idx = value.indexOf(name);\n\n      const x = [\n        {\n          type: \"meta.tag.punctuation.tag-open\",\n          value: \"{%\"\n        },\n        {\n          type: \"text\",\n          value: value.slice(2, idx)\n        },\n        {\n          type: \"keyword.tag\" + name + \".tag-name\",\n          value: value.slice(idx, idx + length)\n        },\n        {\n          type: \"text\",\n          value: value.slice(idx + length, value.indexOf(\"%}\"))\n        },\n        {\n          type: \"meta.tag.punctuation.tag-close\",\n          value: \"%}\"\n        }\n      ];\n\n      return x;\n    };\n  }\n\n\n  for (var rule in this.$rules) {\n\n    this.$rules[rule].unshift(\n      {\n        token: \"comment.block\",\n        regex: /{%-?\\s*comment\\s*-?%}/,\n        next: [\n          {\n            token: \"comment.block\",\n            regex: /{%-?\\s*endcomment\\s*-?%}/,\n            next: \"pop\"\n          },\n          {\n            defaultToken: \"comment\",\n            caseInsensitive: false\n          }\n        ]\n      },\n      {\n        token: \"comment.line\",\n        regex: /{%-?\\s*#/,\n        next: [\n          {\n            token: \"comment.line\",\n            regex: /-?%}/,\n            next: \"pop\"\n          },\n          {\n            defaultToken: \"comment\",\n            caseInsensitive: false\n          }\n        ]\n      },\n      {\n        token: 'style.embedded.start',\n        regex: /({%-?\\s*\\bstyle\\b\\s*-?%})/,\n        next: \"style-start\",\n        onMatch: onMatchEmbedded(\"style\")\n      },\n      {\n        regex: /({%-?\\s*\\bstylesheet\\b\\s*-?%})/,\n        next: \"stylesheet-start\",\n        onMatch: onMatchEmbedded(\"stylesheet\")\n      },\n      {\n        regex: /({%-?\\s*\\bschema\\b\\s*-?%})/,\n        next: \"schema-start\",\n        onMatch: onMatchEmbedded(\"schema\")\n      },\n      {\n        regex: /({%-?\\s*\\bjavascript\\b\\s*-?%})/,\n        next: \"javascript-start\",\n        onMatch: onMatchEmbedded(\"javascript\")\n      },\n      {\n        token: \"meta.tag.punctuation.tag-open\",\n        regex: /({%)/,\n        next: [\n          {\n              token: \"keyword.block\",\n              regex: /-?\\s*[a-zA-Z_$][a-zA-Z0-9_$]+\\b/,\n              next: 'liquid-start'\n          },\n          {\n            token: \"meta.tag.punctuation.tag-close\",\n            regex: /(-?)(%})/,\n            next: \"pop\"\n          }\n        ]\n      },\n      {\n        token: \"meta.tag.punctuation.ouput-open\",\n        regex: /({{)/,\n        push: \"liquid-start\"\n      }\n    );\n  }\n\n  /* -------------------------------------------- */\n  /* EMBEDDED REGIONS                             */\n  /* -------------------------------------------- */\n\n  this.embedRules(JsonHighlightRules, \"schema-\", [\n    {\n      token: \"schema-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendschema\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endschema\")\n    }\n  ]);\n\n  this.embedRules(JavaScriptHighlightRules, \"javascript-\", [\n    {\n      token: \"javascript-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendjavascript\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endjavascript\")\n    }\n  ]);\n\n\n\n  this.embedRules(CssHighlightRules, \"style-\", [\n    {\n      token: \"style-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendstyle\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endstyle\")\n    }\n  ]);\n\n  this.embedRules(CssHighlightRules, \"stylesheet-\", [\n    {\n      token: \"stylesheet-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendstylesheet\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endstylesheet\")\n    }\n  ]);\n\n  /* -------------------------------------------- */\n  /* LIQUID GRAMMARS                              */\n  /* -------------------------------------------- */\n\n  this.addRules({\n    \"liquid-start\": [\n      {\n        token: \"meta.tag.punctuation.ouput-close\",\n        regex: /}}/,\n        next: \"pop\"\n      },\n      {\n        token: \"meta.tag.punctuation.tag-close\",\n        regex: /%}/,\n        next: \"pop\"\n      },\n      {\n        token: \"string\",\n        regex: /['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']/\n      },\n      {\n        token: \"string\",\n        regex: /[\"](?:(?:\\\\.)|(?:[^'\\\\]))*?[\"]/\n      },\n      {\n        token: \"constant.numeric\",\n        regex: /0[xX][0-9a-fA-F]+\\b/\n      },\n      {\n        token: \"constant.numeric\",\n        regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\n      },\n      {\n        token: \"keyword.operator\",\n        regex: /\\*|\\-|\\+|=|!=|\\?\\|\\:/\n      },\n      {\n        token: \"constant.language.boolean\",\n        regex: /(?:true|false|nil|empty)\\b/\n      },\n      {\n        token: \"keyword.operator\",\n        regex: /\\s+(?:and|contains|in|with)\\b\\s+/\n      },\n      {\n        token: [\"keyword.operator\", \"support.function\"],\n        regex: /(\\|\\s*)([a-zA-Z_]+)/\n\n      },\n      {\n        token: \"support.function\",\n        regex: /\\s*([a-zA-Z_]+\\b)(?=:)/\n      },\n      {\n        token: \"keyword.operator\",\n        regex:\n          /(:)\\s*(?=[a-zA-Z_])/\n      },\n      {\n        token: [\n          \"support.class\",\n          \"keyword.operator\",\n          \"support.object\",\n          \"keyword.operator\",\n          \"variable.parameter\"\n        ],\n        regex: /(\\w+)(\\.)(\\w+)(\\.)?(\\w+)?/\n      },\n      {\n        token: \"variable.parameter\",\n        regex: /\\.([a-zA-Z_$][a-zA-Z0-9_$]*\\b)$/\n      },\n      {\n        token: \"support.class\",\n        regex: /(?:additional_checkout_buttons|content_for_additional_checkout_buttons)\\b/\n      },\n      {\n        token: \"paren.lparen\",\n        regex: /[\\[\\({]/\n      },\n      {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      },\n      {\n        token: \"text\",\n        regex: /\\s+/\n      }\n    ]\n  });\n\n  this.normalizeRules();\n\n};\n\noop.inherits(LiquidHighlightRules, TextHighlightRules);\n\nexports.LiquidHighlightRules = LiquidHighlightRules;\n"],"names":["oop","require","TextMode","HighlightRules","MatchingBraceOutdent","CStyleFoldMode","WorkerClient","Mode","this","$outdent","$behaviour","$defaultBehaviour","foldingRules","inherits","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","match","checkOutdent","input","autoOutdent","doc","row","createWorker","session","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","call","prototype","exports","TextHighlightRules","JsonHighlightRules","$rules","token","regex","next","defaultToken","HtmlMode","JavascriptMode","JsonMode","CssMode","LiquidHighlightRules","FoldMode","voidElements","tokenizedLine","getTokenizer","getLineTokens","tokens","length","type","snippetFileId","CssHighlightRules","HtmlHighlightRules","JavaScriptHighlightRules","onMatchEmbedded","name","value","idx","indexOf","x","slice","rule","unshift","caseInsensitive","onMatch","push","embedRules","addRules","normalizeRules"],"sourceRoot":""}