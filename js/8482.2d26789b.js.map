{"version":3,"file":"js/8482.2d26789b.js","mappings":"2GAcA,IAAIA,EAASC,EAAAA,MAAAA,EASb,SAASC,EAAsBC,GAE3B,IAAKC,SAASC,eAAe,kBAAmB,CAC5C,IAAIC,EAAcL,EAAAA,OAAAA,YACdM,EAA4BN,EAAAA,OAAAA,EAC5BO,EAAKD,EAA0BJ,GAC/BM,EAAKL,SAASM,cAAc,OAC5BC,EAAWH,EAAGI,QAAO,SAAUC,EAAUC,GACzC,OAAOD,EAAW,0EACZC,EAAQC,QADPF,8CAEqCC,EAAQE,IAAM,eAC9D,GAAG,IAEHP,EAAGQ,GAAK,iBACRR,EAAGS,UAAY,8BAAgCP,EAAW,SAC1DL,EAAYH,EAAQM,EACxB,CACJ,CAKAU,EAAOC,QAAQC,KAAO,SAAUlB,GAC5BH,EAAOsB,UAAUpB,sBAAwB,WACrCA,EAAsBqB,KAC1B,EACApB,EAAOQ,SAASa,YAAY,CAAC,CACzBC,KAAM,wBACNC,QAAS,CACLC,IAAK,aACLC,IAAK,iBAETC,KAMI,SAAU1B,EAAQ2B,GAClB3B,EAAOD,uBACX,IAER,C,qCCnDAD,EAAA,OAAiB,IAAI8B,EAAO9B,EAAQ,OAkBpCkB,EAAOC,QAAQ,EAA4B,SAASjB,GACjC4B,EAAKC,SAApB,IACIC,EAAc,GACdC,EAAa,CAAC,EAoBlB,OAnBA/B,EAAOgC,WAAWC,UAAUC,SAAQ,SAASC,GACzC,IAAIC,EAAMD,EAAQ,qBAClB,IAAK,IAAIE,KAAKD,EAAK,CACf,IAAIvB,EAAMwB,EAAEC,QAAQ,YAAY,SAASC,GAAK,OAAOA,EAAEC,aAAe,IAClEhC,EAAW4B,EAAIC,GACdI,MAAMC,QAAQlC,KACfA,EAAW,CAACA,IAChBA,EAAS0B,SAAQ,SAAStB,GACA,iBAAXA,IACPA,EAAWA,EAAQU,MACnBS,EAAWnB,GACXmB,EAAWnB,GAASC,KAAO,IAAMA,GAEjCkB,EAAWnB,GAAW,CAACC,IAAKA,EAAKD,QAASA,GAC1CkB,EAAYa,KAAKZ,EAAWnB,IAEpC,GACJ,CACJ,IACOkB,CACX,C,qCC1CA,IAAIc,EAAM9C,EAAQ,OACd+C,EAAU/C,EAAQ,OACtB8C,EAAIE,gBAAgBD,EAAS,qBAAqB,GAalD7B,EAAOC,QAAQd,YAAc,SAAqBH,EAAQ+C,EAAgBC,GACtE,IAAIC,EAAShD,SAASM,cAAc,OAChC2C,GAAiB,EAErB,SAASC,EAAoBC,GACP,KAAdA,EAAEC,SACFC,GAER,CAEA,SAASA,IACAL,IACLhD,SAASsD,oBAAoB,UAAWJ,GACxCF,EAAOO,WAAWC,YAAYR,GAC1BjD,GACAA,EAAO0D,QAEXT,EAAS,KACTD,GAAYA,IAChB,CAOA,SAASW,EAAkBC,GACvBV,EAAiBU,EACbA,IACAX,EAAOY,MAAMC,cAAgB,OAC7Bf,EAAec,MAAMC,cAAgB,OAE7C,CAuBA,OArBAb,EAAOY,MAAMhB,QAAU,4FAGlB7C,EAAS,wCAA0C,IACxDiD,EAAOc,iBAAiB,SAAS,SAASX,GACjCF,GACDI,GAER,IAEArD,SAAS8D,iBAAiB,UAAWZ,GAErCJ,EAAegB,iBAAiB,SAAS,SAAUX,GAC/CA,EAAEY,iBACN,IAEAf,EAAOgB,YAAYlB,GACnB9C,SAASiE,KAAKD,YAAYhB,GACtBjD,GACAA,EAAOmE,OAEJ,CACHb,MAAOA,EACPK,kBAAmBA,EAE3B,C,oBCxFA3C,EAAOC,QAAW,w+C","sources":["webpack://admin/./node_modules/ace-code/src/ext/keybinding_menu.js","webpack://admin/./node_modules/ace-code/src/ext/menu_tools/get_editor_keyboard_shortcuts.js","webpack://admin/./node_modules/ace-code/src/ext/menu_tools/overlay_page.js","webpack://admin/./node_modules/ace-code/src/ext/menu_tools/settings_menu.css.js"],"sourcesContent":["/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Show Keyboard Shortcuts\n * @fileOverview Show Keyboard Shortcuts <br />\n * Generates a menu which displays the keyboard shortcuts.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n\"use strict\";\n\nvar Editor = require(\"../editor\").Editor;\n\n/**\n * Generates a menu which displays the keyboard shortcuts.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param {Editor} editor An instance of the ace editor.\n */\nfunction showKeyboardShortcuts(editor) {\n    // make sure the menu isn't open already.\n    if (!document.getElementById('kbshortcutmenu')) {\n        var overlayPage = require('./menu_tools/overlay_page').overlayPage;\n        var getEditorKeybordShortcuts = require('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeybordShortcuts;\n        var kb = getEditorKeybordShortcuts(editor);\n        var el = document.createElement('div');\n        var commands = kb.reduce(function (previous, current) {\n            return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">'\n                + current.command + '</span> : '\n                + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n        }, '');\n\n        el.id = 'kbshortcutmenu';\n        el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n        overlayPage(editor, el);\n    }\n}\n\n/**\n * @param {Editor} editor\n */\nmodule.exports.init = function (editor) {\n    Editor.prototype.showKeyboardShortcuts = function () {\n        showKeyboardShortcuts(this);\n    };\n    editor.commands.addCommands([{\n        name: \"showKeyboardShortcuts\",\n        bindKey: {\n            win: \"Ctrl-Alt-h\",\n            mac: \"Command-Alt-h\"\n        },\n        exec:\n            /**\n             * \n             * @param {Editor} editor\n             * @param [line]\n             */\n            function (editor, line) {\n            editor.showKeyboardShortcuts();\n        }\n    }]);\n};\n","/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Get Editor Keyboard Shortcuts\n * @fileOverview Get Editor Keyboard Shortcuts <br />\n * Gets a map of keyboard shortcuts to command names for the current platform.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n\"use strict\";\n\n/** @type{any} */var keys = require(\"../../lib/keys\");\n\n/**\n * Gets a map of keyboard shortcuts to command names for the current platform.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param {import(\"../../editor\").Editor} editor An editor instance.\n * @returns {Array} Returns an array of objects representing the keyboard\n *  shortcuts for the given editor.\n * @example\n * var getKbShortcuts = require('./get_keyboard_shortcuts');\n * console.log(getKbShortcuts(editor));\n * // [\n * //     {'command' : aCommand, 'key' : 'Control-d'},\n * //     {'command' : aCommand, 'key' : 'Control-d'}\n * // ]\n */\nmodule.exports.getEditorKeybordShortcuts = function(editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function(handler) {\n        var ckb = handler[\"commandKeyBinding\"];\n        for (var i in ckb) {\n            var key = i.replace(/(^|-)\\w/g, function(x) { return x.toUpperCase(); });\n            var commands = ckb[i];\n            if (!Array.isArray(commands))\n                commands = [commands];\n            commands.forEach(function(command) {\n                if (typeof command != \"string\")\n                    command  = command.name;\n                if (commandMap[command]) {\n                    commandMap[command].key += \"|\" + key;\n                } else {\n                    commandMap[command] = {key: key, command: command};\n                    keybindings.push(commandMap[command]);\n                }         \n            });\n        }\n    });\n    return keybindings;\n};\n","/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Overlay Page\n * @fileOverview Overlay Page <br />\n * Generates an overlay for displaying menus. The overlay is an absolutely\n *  positioned div.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n'use strict';\nvar dom = require(\"../../lib/dom\");\nvar cssText = require(\"./settings_menu.css\");\ndom.importCssString(cssText, \"settings_menu.css\", false);\n\n/**\n * Generates an overlay for displaying menus. The overlay is an absolutely\n *  positioned div.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param editor\n * @param {HTMLElement} contentElement Any element which may be presented inside\n *  a div.\n * @param [callback]\n */\nmodule.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n\n    function documentEscListener(e) {\n        if (e.keyCode === 27) {\n            close();\n        }\n    }\n\n    function close() {\n        if (!closer) return;\n        document.removeEventListener('keydown', documentEscListener);\n        closer.parentNode.removeChild(closer);\n        if (editor) {\n            editor.focus();\n        }\n        closer = null;\n        callback && callback();\n    }\n\n     /**\n     * Defines whether overlay is closed when user clicks outside of it.\n     * \n     * @param {Boolean} ignore      If set to true overlay stays open when focus moves to another part of the editor.\n     */\n    function setIgnoreFocusOut(ignore) {\n        ignoreFocusOut = ignore;\n        if (ignore) {\n            closer.style.pointerEvents = \"none\";\n            contentElement.style.pointerEvents = \"auto\";\n        }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' +\n        'position: fixed; top:0; bottom:0; left:0; right:0;' +\n        'z-index: 9990; ' +\n        (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function(e) {\n        if (!ignoreFocusOut) {\n            close();\n        }\n    });\n    // click closer if esc key is pressed\n    document.addEventListener('keydown', documentEscListener);\n\n    contentElement.addEventListener('click', function (e) {\n        e.stopPropagation();\n    });\n\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n        editor.blur();\n    }\n    return {\n        close: close,\n        setIgnoreFocusOut: setIgnoreFocusOut\n    };\n};\n","module.exports = `#ace_settingsmenu, #kbshortcutmenu {\n    background-color: #F7F7F7;\n    color: black;\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\n    padding: 1em 0.5em 2em 1em;\n    overflow: auto;\n    position: absolute;\n    margin: 0;\n    bottom: 0;\n    right: 0;\n    top: 0;\n    z-index: 9991;\n    cursor: default;\n}\n\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\n    background-color: rgba(255, 255, 255, 0.6);\n    color: black;\n}\n\n.ace_optionsMenuEntry:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n    transition: all 0.3s\n}\n\n.ace_closeButton {\n    background: rgba(245, 146, 146, 0.5);\n    border: 1px solid #F48A8A;\n    border-radius: 50%;\n    padding: 7px;\n    position: absolute;\n    right: -8px;\n    top: -8px;\n    z-index: 100000;\n}\n.ace_closeButton{\n    background: rgba(245, 146, 146, 0.9);\n}\n.ace_optionsMenuKey {\n    color: darkslateblue;\n    font-weight: bold;\n}\n.ace_optionsMenuCommand {\n    color: darkcyan;\n    font-weight: normal;\n}\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\n    vertical-align: middle;\n}\n\n.ace_optionsMenuEntry button[ace_selected_button=true] {\n    background: #e7e7e7;\n    box-shadow: 1px 0px 2px 0px #adadad inset;\n    border-color: #adadad;\n}\n.ace_optionsMenuEntry button {\n    background: white;\n    border: 1px solid lightgray;\n    margin: 0px;\n}\n.ace_optionsMenuEntry button:hover{\n    background: #f0f0f0;\n}`;\n"],"names":["Editor","require","showKeyboardShortcuts","editor","document","getElementById","overlayPage","getEditorKeybordShortcuts","kb","el","createElement","commands","reduce","previous","current","command","key","id","innerHTML","module","exports","init","prototype","this","addCommands","name","bindKey","win","mac","exec","line","keys","KEY_MODS","keybindings","commandMap","keyBinding","$handlers","forEach","handler","ckb","i","replace","x","toUpperCase","Array","isArray","push","dom","cssText","importCssString","contentElement","callback","closer","ignoreFocusOut","documentEscListener","e","keyCode","close","removeEventListener","parentNode","removeChild","focus","setIgnoreFocusOut","ignore","style","pointerEvents","addEventListener","stopPropagation","appendChild","body","blur"],"sourceRoot":""}