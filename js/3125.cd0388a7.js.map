{"version":3,"file":"js/3125.cd0388a7.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/sass_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/slim_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/stylus_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/typescript_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/vue.js","webpack://admin/./node_modules/ace-code/src/mode/vue_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar ScssHighlightRules = require(\"./scss_highlight_rules\").ScssHighlightRules;\n\nvar SassHighlightRules = function() {\n    ScssHighlightRules.call(this);\n    var start = this.$rules.start;\n    if (start[1].token == \"comment\") {\n        start.splice(1, 1, {\n            onMatch: function(value, currentState, stack) {\n                stack.unshift(this.next, -1, value.length - 2, currentState);\n                return \"comment\";\n            },\n            regex: /^\\s*\\/\\*/,\n            next: \"comment\"\n        }, {\n            token: \"error.invalid\",\n            regex: \"/\\\\*|[{;}]\"\n        }, {\n            token: \"support.type\",\n            regex: /^\\s*:[\\w\\-]+\\s/\n        });\n        \n        this.$rules.comment = [\n            {regex: /^\\s*/, onMatch: function(value, currentState, stack) {\n                if (stack[1] === -1)\n                    stack[1] = Math.max(stack[2], value.length - 1);\n                if (value.length <= stack[1]) {\n                    /*shift3x*/stack.shift();stack.shift();stack.shift();\n                    this.next = stack.shift();\n                    return \"text\";\n                } else {\n                    this.next = \"\";\n                    return \"comment\";\n                }\n            }, next: \"start\"},\n            {defaultToken: \"comment\"}\n        ];\n    }\n};\n\noop.inherits(SassHighlightRules, ScssHighlightRules);\n\nexports.SassHighlightRules = SassHighlightRules;\n","\"use strict\";\n\nvar modes = require(\"../config\").$modes;\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar SlimHighlightRules = function() {\n\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"keyword\",\n                regex: /^(\\s*)(\\w+):\\s*/,\n                onMatch: function(value, state, stack, line) {\n                    var indent = /^\\s*/.exec(line)[0];\n                    var m = value.match(/^(\\s*)(\\w+):/);\n                    var language = m[2];\n                    if (!/^(javascript|ruby|coffee|markdown|css|scss|sass|less)$/.test(language))\n                        language = \"\";\n                    stack.unshift(\"language-embed\", [], [indent, language], state);\n                    return this.token;\n                },\n                stateName: \"language-embed\",\n                next: [{\n                    token: \"string\",\n                    regex: /^(\\s*)/,\n                    onMatch: function(value, state, stack, line) {\n                        var indent = stack[2][0];\n                        if (indent.length >= value.length) {\n                            stack.splice(0, 3);\n                            this.next = stack.shift();\n                            return this.token;\n                        }\n                        this.next = \"\";\n                        return [{type: \"text\", value: indent}];\n                    },\n                    next: \"\"\n                }, {\n                    token: \"string\",\n                    regex: /.+/,\n                    onMatch: function(value, state, stack, line) {\n                        var indent = stack[2][0];\n                        var language = stack[2][1];\n                        var embedState = stack[1];\n                        \n                        if (modes[language]) {\n                            var data = modes[language].getTokenizer().getLineTokens(line.slice(indent.length), embedState.slice(0));\n                            stack[1] = data.state;\n                            return data.tokens;\n                        }\n                        return this.token;\n                    }\n                }]\n            },\n            {\n                token: 'constant.begin.javascript.filter.slim',\n                regex: '^(\\\\s*)():$'\n            }, {\n                token: 'constant.begin..filter.slim',\n                regex: '^(\\\\s*)(ruby):$'\n            }, {\n                token: 'constant.begin.coffeescript.filter.slim',\n                regex: '^(\\\\s*)():$'\n            }, {\n                token: 'constant.begin..filter.slim',\n                regex: '^(\\\\s*)(markdown):$'\n            }, {\n                token: 'constant.begin.css.filter.slim',\n                regex: '^(\\\\s*)():$'\n            }, {\n                token: 'constant.begin.scss.filter.slim',\n                regex: '^(\\\\s*)():$'\n            }, {\n                token: 'constant.begin..filter.slim',\n                regex: '^(\\\\s*)(sass):$'\n            }, {\n                token: 'constant.begin..filter.slim',\n                regex: '^(\\\\s*)(less):$'\n            }, {\n                token: 'constant.begin..filter.slim',\n                regex: '^(\\\\s*)(erb):$'\n            }, {\n                token: 'keyword.html.tags.slim',\n                regex: '^(\\\\s*)((:?\\\\*(\\\\w)+)|doctype html|abbr|acronym|address|applet|area|article|aside|audio|base|basefont|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dialog|dfn|dir|div|dl|dt|embed|fieldset|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|link|li|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|source|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video|xmp|b|u|s|em|a)(?:([.#](\\\\w|\\\\.)+)+\\\\s?)?\\\\b'\n\n            }, {\n                token: 'keyword.slim',\n                regex: '^(\\\\s*)(?:([.#](\\\\w|\\\\.)+)+\\\\s?)'\n            }, {\n                token: \"string\",\n                regex: /^(\\s*)('|\\||\\/|(\\/!))\\s*/,\n                onMatch: function(val, state, stack, line) {\n                    var indent = /^\\s*/.exec(line)[0];\n                    if (stack.length < 1) {\n                        stack.push(this.next);\n                    }\n                    else {\n                        stack[0] = \"mlString\";\n                    }\n\n                    if (stack.length < 2) {\n                        stack.push(indent.length);\n                    }\n                    else {\n                        stack[1] = indent.length;\n                    }\n                    return this.token;\n                },\n                next: \"mlString\"\n            }, {\n                token: 'keyword.control.slim',\n                regex: '^(\\\\s*)(\\\\-|==|=)',\n                push: [{\n                    token: 'control.end.slim',\n                    regex: '$',\n                    next: \"pop\"\n                }, {\n                    include: \"rubyline\"\n                }, {\n                    include: \"misc\"\n                }]\n\n            }, {\n                token: 'paren',\n                regex: '\\\\(',\n                push: [{\n                    token: 'paren',\n                    regex: '\\\\)',\n                    next: \"pop\"\n                }, {\n                    include: \"misc\"\n                }]\n\n            }, {\n                token: 'paren',\n                regex: '\\\\[',\n                push: [{\n                    token: 'paren',\n                    regex: '\\\\]',\n                    next: \"pop\"\n                }, {\n                    include: \"misc\"\n                }]\n            }, {\n                include: \"misc\"\n            }\n        ],\n        \"mlString\": [{\n            token: \"indent\",\n            regex: /^\\s*/,\n            onMatch: function(val, state, stack) {\n                var curIndent = stack[1];\n\n                if (curIndent >= val.length) {\n                    this.next = \"start\";\n                    stack.splice(0);\n                }\n                else {\n                    this.next = \"mlString\";\n                }\n                return this.token;\n            },\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rubyline\": [{\n            token: \"keyword.operator.ruby.embedded.slim\",\n            regex: \"(==|=)(<>|><|<'|'<|<|>)?|-\"\n        }, {\n            token: \"list.ruby.operators.slim\",\n            regex: \"(\\\\b)(for|in|do|if|else|elsif|unless|while|yield|not|and|or)\\\\b\"\n        }, {\n            token: \"string\",\n            regex: \"['](.)*?[']\"\n        }, {\n            token: \"string\",\n            regex: \"[\\\"](.)*?[\\\"]\"\n        }],\n        \"misc\": [{\n            token: 'class.variable.slim',\n            regex: '\\\\@([a-zA-Z_][a-zA-Z0-9_]*)\\\\b'\n        }, {\n            token: \"list.meta.slim\",\n            regex: \"(\\\\b)(true|false|nil)(\\\\b)\"\n        }, {\n            token: 'keyword.operator.equals.slim',\n            regex: '='\n        }, {\n            token: \"string\",\n            regex: \"['](.)*?[']\"\n        }, {\n            token: \"string\",\n            regex: \"[\\\"](.)*?[\\\"]\"\n        }]\n    };\n    this.normalizeRules();\n};\n\n\noop.inherits(SlimHighlightRules, TextHighlightRules);\n\nexports.SlimHighlightRules = SlimHighlightRules;\n","/*\n  THIS FILE WAS AUTOGENERATED BY Stylus.tmlanguage (UUID: 60519324-6A3A-4382-9E0B-546993A3869A) */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = require(\"./css_highlight_rules\");\n\nvar StylusHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.type\": CssHighlightRules.supportType,\n        \"support.function\": CssHighlightRules.supportFunction,\n        \"support.constant\": CssHighlightRules.supportConstant,\n        \"support.constant.color\": CssHighlightRules.supportConstantColor,\n        \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\n    }, \"text\", true);\n\n    this.$rules = {\n    start: [\n        {\n            token : \"comment\",\n            regex : /\\/\\/.*$/\n        },\n        {\n            token : \"comment\", // multi line comment\n            regex : /\\/\\*/,\n            next : \"comment\"\n        },\n        {\n            token: [\"entity.name.function.stylus\", \"text\"],\n            regex: \"^([-a-zA-Z_][-\\\\w]*)?(\\\\()\"\n        },\n        {\n            token: [\"entity.other.attribute-name.class.stylus\"],\n            regex: \"\\\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*\"\n        },\n        {\n            token: [\"entity.language.stylus\"],\n            regex: \"^ *&\"\n        },\n        {\n            token: [\"variable.language.stylus\"],\n            regex: \"(arguments)\"\n        },\n        {\n            token: [\"keyword.stylus\"],\n            regex: \"@[-\\\\w]+\"\n        },\n        {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n            regex : CssHighlightRules.pseudoElements\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n            regex : CssHighlightRules.pseudoClasses\n        }, \n        {\n            token: [\"entity.name.tag.stylus\"],\n            regex: \"(?:\\\\b)(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)(?:\\\\b)\"\n        },\n        {\n            token: \"constant.numeric\",  // hex6 color\n            regex: \"#[a-fA-F0-9]{6}\"\n        }, \n        {\n            token: \"constant.numeric\", // hex3 color\n            regex: \"#[a-fA-F0-9]{3}\"\n        }, \n        {\n            token: [\"punctuation.definition.entity.stylus\", \"entity.other.attribute-name.id.stylus\"],\n            regex: \"(#)([a-zA-Z][a-zA-Z0-9_-]*)\"\n        },\n        {\n            token: \"meta.vendor-prefix.stylus\",\n            regex: \"-webkit-|-moz\\\\-|-ms-|-o-\"\n        },\n        {\n            token: \"keyword.control.stylus\",\n            regex: \"(?:!important|for|in|return|true|false|null|if|else|unless|return)\\\\b\"\n        },\n        {\n            token: \"keyword.operator.stylus\",\n            regex: \"!|~|\\\\+|-|(?:\\\\*)?\\\\*|\\\\/|%|(?:\\\\.)\\\\.\\\\.|<|>|(?:=|:|\\\\?|\\\\+|-|\\\\*|\\\\/|%|<|>)?=|!=\"\n        },\n        {\n            token: \"keyword.operator.stylus\",\n            regex: \"(?:in|is(?:nt)?|not)\\\\b\"\n        },\n        {\n            token : \"string\",\n            regex : \"'(?=.)\",\n            next  : \"qstring\"\n        }, {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        }, \n        {\n            token : \"constant.numeric\",\n            regex : CssHighlightRules.numRe\n        }, \n        {\n            token : \"keyword\",\n            regex : \"(?:ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\\\\b\"\n        }, \n        {\n            token : keywordMapper,\n            regex : \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n        }\n    ],\n    \"comment\" : [\n        {\n            token : \"comment\", // closing comment\n            regex : \"\\\\*\\\\/\",\n            next : \"start\"\n        }, {\n            defaultToken : \"comment\"\n        }\n    ],\n    \"qqstring\" : [\n        {\n            token : \"string\",\n            regex : '[^\"\\\\\\\\]+'\n        }, \n        {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, \n        {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        }\n    ],\n    \"qstring\" : [\n        {\n            token : \"string\",\n            regex : \"[^'\\\\\\\\]+\"\n        }, \n        {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qstring\"\n        }, \n        {\n            token : \"string\",\n            regex : \"'|$\",\n            next  : \"start\"\n        }\n    ]\n};\n\n};\n\noop.inherits(StylusHighlightRules, TextHighlightRules);\n\nexports.StylusHighlightRules = StylusHighlightRules;\n","/*\n  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: 21e323af-f665-4161-96e7-5087d262557e) */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nvar TypeScriptHighlightRules = function (options) {\n\n    var tsRules = [\n        // Match stuff like: function name: return type)\n        {\n            token: [\"storage.type\", \"text\", \"entity.name.function.ts\"],\n            regex: \"(function)(\\\\s+)([a-zA-Z0-9\\$_\\u00a1-\\uffff][a-zA-Z0-9\\d\\$_\\u00a1-\\uffff]*)\"\n        },\n        {\n            token: \"keyword\",\n            regex: \"(?:\\\\b(constructor|declare|interface|as|AS|public|private|extends|export|super|readonly|module|namespace|abstract|implements)\\\\b)\"\n        },\n        {\n            token: [\"keyword\", \"storage.type.variable.ts\"],\n            regex: \"(class|type)(\\\\s+[a-zA-Z0-9_?.$][\\\\w?.$]*)\"\n         },\n        {\n            token: \"keyword\",\n            regex: \"\\\\b(?:super|export|import|keyof|infer)\\\\b\"\n        }, \n        {\n            token: [\"storage.type.variable.ts\"],\n            regex: \"(?:\\\\b(this\\\\.|string\\\\b|bool\\\\b|boolean\\\\b|number\\\\b|true\\\\b|false\\\\b|undefined\\\\b|any\\\\b|null\\\\b|(?:unique )?symbol\\\\b|object\\\\b|never\\\\b|enum\\\\b))\"\n        }\n    ];\n\n    var JSRules = new JavaScriptHighlightRules({jsx: (options && options.jsx) == true}).getRules();\n    \n    JSRules.no_regex = tsRules.concat(JSRules.no_regex);\n    this.$rules = JSRules;\n};\n\noop.inherits(TypeScriptHighlightRules, JavaScriptHighlightRules);\n\nexports.TypeScriptHighlightRules = TypeScriptHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nconst {FoldMode: HtmlFoldMode} = require(\"./folding/html\");\nconst lang = require(\"../lib/lang\");\nconst {XmlBehaviour} = require(\"./behaviour/xml\");\nconst {HtmlCompletions} = require(\"./html_completions\");\nvar HTMLMode = require(\"./html\").Mode;\nvar VueHighlightRules = require(\"./vue_highlight_rules\").VueHighlightRules;\n\nvar voidElements = [\n    \"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"menuitem\", \"param\", \"source\",\n    \"track\", \"wbr\"\n];\nvar optionalEndTags = [\"li\", \"dt\", \"dd\", \"p\", \"rt\", \"rp\", \"optgroup\", \"option\", \"colgroup\", \"td\", \"th\"];\nvar Mode = function () {\n    this.HighlightRules = VueHighlightRules;\n    this.foldingRules = new HtmlFoldMode(this.voidElements, lang.arrayToMap(optionalEndTags));\n    this.$behaviour = new XmlBehaviour();\n    this.$completer = new HtmlCompletions();\n};\noop.inherits(Mode, HTMLMode);\n\n(function () {\n    this.blockComment = {\n        start: \"<!--\",\n        end: \"-->\"\n    };\n    this.voidElements = lang.arrayToMap(voidElements);\n\n    this.getCompletions = function (state, session, pos, prefix) {\n        return this.$completer.getCompletions(state, session, pos, prefix);\n    };\n\n    this.$id = \"ace/mode/vue\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar {CssHighlightRules} = require(\"./css_highlight_rules\");\nvar {TypeScriptHighlightRules} = require(\"./typescript_highlight_rules\");\nvar {CoffeeHighlightRules} = require(\"./coffee_highlight_rules\");\nvar {HtmlHighlightRules} = require(\"./html_highlight_rules\");\nvar {JavaScriptHighlightRules} = require(\"./javascript_highlight_rules\");\nvar {StylusHighlightRules} = require(\"./stylus_highlight_rules\");\nvar {SassHighlightRules} = require(\"./sass_highlight_rules\");\nvar {ScssHighlightRules} = require(\"./scss_highlight_rules\");\nvar {LessHighlightRules} = require(\"./less_highlight_rules\");\nvar {Tokenizer} = require(\"../tokenizer\");\nvar {SlimHighlightRules} = require(\"./slim_highlight_rules\");\nvar {JadeHighlightRules} = require(\"./jade_highlight_rules\");\n\nvar JavaScriptMode = require(\"./javascript\").Mode;\n\nvar VueHighlightRules = function (options) {\n\n    /**\n     * @param {{new(): Ace.HighlightRules}|Ace.HighlightRulesMap} HighlightRules\n     * @param {string} tag\n     * @param {string} value\n     * @param {string} [attribute]\n     */\n    this.embedLangRules = function (HighlightRules, tag, value, attribute) {\n        var condition = attribute ? \"(?=[^>]*\" + attribute + \"\\\\s*=\\\\s*['\\\"]\" + value + \"['\\\"]))\" : \"(?=\\\\s|>|$))\";\n        this.$rules.start.unshift({\n            token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex: \"(<)(\" + tag + condition,\n            next: [\n                {\n                    token: \"meta.tag.punctuation.tag-close.\" + tag + \".xml\",\n                    regex: \"/?>\",\n                    next: value + \"-start\"\n                }, {include: \"attributes\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include: \"attributes\"}, {\n                token: \"meta.tag.punctuation.tag-close.xml\",\n                regex: \"/?>\",\n                next: \"start\",\n                onMatch: function (value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n                }\n            }\n        ];\n\n        this.embedRules(HighlightRules, value + \"-\", [\n            {\n                token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n                regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n                next: tag + \"-end\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"<\\\\!\\\\[CDATA\\\\[\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"\\\\]\\\\]>\"\n            }\n        ]);\n    };\n\n    var vueRules = [\n        {\n            include: \"vue-interpolations\"\n        }\n    ];\n\n    var VueRules = new HtmlHighlightRules().getRules();\n    VueRules.start = vueRules.concat(VueRules.start);\n    VueRules[\"vue-interpolations\"] = [\n        {\n            token: \"punctuation\",\n            regex: /\\{\\{\\{?/,\n            next: \"js-interpolation-start\"\n        }\n    ];\n\n    var self = this;\n    VueRules.tag_stuff.unshift({//vue-directives \n        token: \"string\",\n        regex: /(?:\\b(v-)|(:|@))(\\[?[a-zA-Z\\-.]+\\]?)(?:(\\:\\[?[a-zA-Z\\-]+\\]?))?((?:\\.[a-zA-Z\\-]+)*)(\\s*)(=)(\\s*)([\"'])/,\n        onMatch: function (value, currentState, stack) {\n            var quote = value[value.length - 1];\n            stack.unshift(quote, currentState);\n\n            var values = new RegExp(this.regex).exec(value);\n            if (!values) return \"text\";\n            var tokens = [];\n            var types = [\n                \"entity.other.attribute-name.xml\", \"punctuation.separator.key-value.xml\",\n                \"entity.other.attribute-name.xml\", \"entity.other.attribute-name.xml\", \"entity.other.attribute-name.xml\",\n                \"text\", \"punctuation.separator.key-value.xml\", \"text\", \"string\"\n            ];\n            for (var i = 0, l = types.length; i < l; i++) {\n                if (values[i + 1]) tokens[tokens.length] = {\n                    type: types[i],\n                    value: values[i + 1]\n                };\n            }\n            return tokens;\n        },\n        next: [\n            {\n                token: \"string\",\n                regex: /$/,\n                next: \"tag_stuff\"\n            }, {\n                token: \"string\",\n                regex: /.*/,\n                onMatch: function (value, currentState, stack, line) {\n                    var quote = stack[0];\n                    var parts = value.split(quote);\n                    let text = parts[0];\n                    this.next = \"\";\n                    if (parts.length > 1) {\n                        stack.shift();\n                        var nextState = stack.shift();\n                        var currentData = new Tokenizer(self.$rules).getLineTokens(\n                            parts.slice(1).join(quote), nextState);\n                        currentData.tokens.unshift({\n                            type: \"string\",\n                            value: quote\n                        });\n                        this.next = Array.isArray(currentData.state) ? currentData.state[currentData.state.length - 1]\n                            : currentData.state;\n                    }\n                    var data = new JavaScriptMode().getTokenizer().getLineTokens(text, \"start\");\n                    var tokens = data.tokens;\n                    if (currentData) {\n                        tokens.push(...currentData.tokens);\n                    }\n                    return tokens;\n                }\n            }\n        ]\n    }, {\n        token: \"string\",\n        regex: '\"',\n        next: [\n            {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"tag_stuff\"\n            }, {\n                include: \"vue-interpolations\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    }, {\n        token: \"string\",\n        regex: \"'\",\n        next: [\n            {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"tag_stuff\"\n            }, {\n                include: \"vue-interpolations\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    });\n    this.$rules = VueRules;\n\n    this.embedRules(JavaScriptHighlightRules, \"js-interpolation-\", [\n        {\n            token: \"punctuation\",\n            regex: /\\}\\}\\}?/,\n            next: \"start\"\n        }\n    ]);\n\n    this.embedLangRules(CssHighlightRules, \"style\", \"css\");\n    this.embedLangRules(StylusHighlightRules, \"style\", \"stylus\", \"lang\");\n    //TODO: postcss is missing: this.embedLangRules(StylusHighlightRules, \"style\", \"lang\", \"postcss\");\n    this.embedLangRules(SassHighlightRules, \"style\", \"sass\", \"lang\");\n    this.embedLangRules(ScssHighlightRules, \"style\", \"scss\", \"lang\");\n    this.embedLangRules(LessHighlightRules, \"style\", \"less\", \"lang\");\n    this.embedLangRules(TypeScriptHighlightRules, \"script\", \"ts\", \"lang\");\n    this.embedLangRules(CoffeeHighlightRules, \"script\", \"coffee\", \"lang\");\n    //TODO: this.embedLangRules(CoffeeHighlightRules, \"script\", \"livescript\", \"lang\");\n    this.embedLangRules(SlimHighlightRules, \"template\", \"slm\", \"lang\");\n    this.embedLangRules(JadeHighlightRules, \"template\", \"jade\", \"lang\");\n    //TODO: this.embedLangRules(Pug, \"template\", \"pug\", \"lang\");\n    this.embedLangRules(StylusHighlightRules, \"template\", \"stylus\", \"lang\");\n    \n    this.normalizeRules();\n};\n\noop.inherits(VueHighlightRules, HtmlHighlightRules);\n\nexports.VueHighlightRules = VueHighlightRules;\n"],"names":["oop","require","ScssHighlightRules","SassHighlightRules","call","this","start","$rules","token","splice","onMatch","value","currentState","stack","unshift","next","length","regex","comment","Math","max","shift","defaultToken","inherits","exports","modes","TextHighlightRules","SlimHighlightRules","state","line","indent","exec","m","match","language","test","stateName","type","embedState","data","getTokenizer","getLineTokens","slice","tokens","val","push","include","curIndent","normalizeRules","CssHighlightRules","StylusHighlightRules","keywordMapper","createKeywordMapper","supportType","supportFunction","supportConstant","supportConstantColor","supportConstantFonts","pseudoElements","pseudoClasses","numRe","JavaScriptHighlightRules","TypeScriptHighlightRules","options","tsRules","JSRules","jsx","getRules","no_regex","concat","FoldMode","HtmlFoldMode","lang","XmlBehaviour","HtmlCompletions","HTMLMode","VueHighlightRules","voidElements","optionalEndTags","Mode","HighlightRules","foldingRules","arrayToMap","$behaviour","$completer","blockComment","end","getCompletions","session","pos","prefix","$id","prototype","CoffeeHighlightRules","HtmlHighlightRules","LessHighlightRules","Tokenizer","JadeHighlightRules","JavaScriptMode","embedLangRules","tag","attribute","condition","embedRules","vueRules","VueRules","self","tag_stuff","quote","values","RegExp","types","i","l","parts","split","text","nextState","currentData","join","Array","isArray"],"sourceRoot":""}