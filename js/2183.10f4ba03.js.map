{"version":3,"file":"js/2183.10f4ba03.js","mappings":"2GAEA,IAAIA,EAAMC,EAAQ,OACdC,EAAWD,EAAAA,OAAAA,KACXE,EAAuBF,EAAAA,OAAAA,EAEvBG,EAAO,WACPC,KAAKC,eAAiBH,EACtBE,KAAKE,WAAaF,KAAKG,iBAC3B,EACAR,EAAIS,SAASL,EAAMF,GAEnB,WACIG,KAAKK,iBAAmB,KACxBL,KAAKM,IAAM,iBACd,EAAEC,KAAKR,EAAKS,WAEbC,EAAQV,KAAOA,C,wBCff,IAAIJ,EAAMC,EAAQ,OACdc,EAAqBd,EAAAA,OAAAA,EAErBE,EAAuB,WACvB,IAAIa,EAAW,+VAOXC,EAAmB,qBAEnBC,EAAoB,OAEpBC,EAAmB,aAEnBC,EAAoB,iBAEpBC,EAAgBhB,KAAKiB,oBAAoB,CACzC,oBAAqBJ,EACrB,4BAA6BC,EAC7B,oBAAqBC,EACrB,mBAAoBH,EACpB,QAAWD,GACZ,cAAc,GAEbO,EAAe,4IAEnBlB,KAAKmB,OAAS,CACV,MAAS,CAAC,CACFC,MAAQ,sBACRC,MAAQ,MACRC,KAAM,2BACP,CACCF,MAAQ,sBACRC,MAAQ,MACRC,KAAM,+BACP,CACCF,MAAQ,uBACRC,MAAQ,kJACT,CACCD,MAAQ,2BACRC,MAAQ,QACT,CACCD,MAAQ,qBACRC,MAAQ,kJACT,CACCD,MAAQ,mBACRC,MAAQ,sFACT,CACCD,MAAQ,mBACRC,MAAQ,8EACT,CACCD,MAAQ,eACRC,MAAQ,kBACT,CACCD,MAAQ,eACRC,MAAQ,kBACT,CACCD,MAAQ,mBACRC,MAAQ,yBACT,CACCD,MAAQ,mBACRC,MAAQ,iDACT,CACCD,MAAQ,SAAUG,GACd,IAAIC,EAASR,EAAcO,GAI3B,MAHe,eAAXC,GAA2BD,IAAMA,EAAEE,gBACnCD,EAAU,oBAEPA,CACX,EACAH,MAAQ,0BACT,CACCD,MAAQ,OACRC,MAAQ,QAGhB,wBAA4B,CAAC,CACrBD,MAAQ,SACRC,MAAQ,KACRC,KAAO,SACR,CACCF,MAAQ,SACRC,MAAQH,IAGhB,8BAAgC,CAAC,CACzBE,MAAQ,sBACRC,MAAQ,KACRC,KAAO,SACR,CACCF,MAAQ,sBACRC,MAAQH,IAGxB,EAEAvB,EAAIS,SAASN,EAAsBY,GAEnCD,EAAQ,EAAuBX,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/eiffel.js","webpack://admin/./node_modules/ace-code/src/mode/eiffel_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar EiffelHighlightRules = require(\"./eiffel_highlight_rules\").EiffelHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = EiffelHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/eiffel\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar EiffelHighlightRules = function() {\n    var keywords = \"across|agent|alias|all|attached|as|assign|attribute|check|\" +\n        \"class|convert|create|debug|deferred|detachable|do|else|elseif|end|\" +\n        \"ensure|expanded|export|external|feature|from|frozen|if|inherit|\" +\n        \"inspect|invariant|like|local|loop|not|note|obsolete|old|once|\" +\n        \"Precursor|redefine|rename|require|rescue|retry|select|separate|\" +\n        \"some|then|undefine|until|variant|when\";\n\n    var operatorKeywords = \"and|implies|or|xor\";\n\n    var languageConstants = \"Void\";\n\n    var booleanConstants = \"True|False\";\n\n    var languageVariables = \"Current|Result\";\n\n    var keywordMapper = this.createKeywordMapper({\n        \"constant.language\": languageConstants,\n        \"constant.language.boolean\": booleanConstants,\n        \"variable.language\": languageVariables,\n        \"keyword.operator\": operatorKeywords,\n        \"keyword\": keywords\n    }, \"identifier\", true);\n\n    var simpleString = /(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;\n\n    this.$rules = {\n        \"start\": [{\n                token : \"string.quoted.other\", // Aligned-verbatim-strings (verbatim option not supported)\n                regex : /\"\\[/,\n                next: \"aligned_verbatim_string\"\n            }, {\n                token : \"string.quoted.other\", // Non-aligned-verbatim-strings (verbatim option not supported)\n                regex : /\"\\{/,\n                next: \"non-aligned_verbatim_string\"\n            }, {\n                token : \"string.quoted.double\",\n                regex : /\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/\n            }, {\n                token : \"comment.line.double-dash\",\n                regex : /--.*/\n            }, {\n                token : \"constant.character\",\n                regex : /'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/\n            }, {\n                token : \"constant.numeric\", // hexa | octal | bin\n                regex : /\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/\n            }, {\n                token : \"constant.numeric\",\n                regex : /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]|<<|\\|\\(/\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]|>>|\\|\\)/\n            }, {\n                token : \"keyword.operator\", // punctuation\n                regex : /:=|->|\\.(?=\\w)|[;,:?]/\n            }, {\n                token : \"keyword.operator\",\n                regex : /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n            }, {\n                token : function (v) {\n                    var result = keywordMapper(v);\n                    if (result === \"identifier\" && v === v.toUpperCase()) {\n                        result =  \"entity.name.type\";\n                    }\n                    return result;\n                },\n                regex : /[a-zA-Z][a-zA-Z\\d_]*\\b/\n            }, {\n                token : \"text\",\n                regex : /\\s+/\n            }\n        ],\n        \"aligned_verbatim_string\" : [{\n                token : \"string\",\n                regex : /]\"/,\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : simpleString\n            }\n        ],\n        \"non-aligned_verbatim_string\" : [{\n                token : \"string.quoted.other\",\n                regex : /}\"/,\n                next : \"start\"\n            }, {\n                token : \"string.quoted.other\",\n                regex : simpleString\n            }\n        ]};\n};\n\noop.inherits(EiffelHighlightRules, TextHighlightRules);\n\nexports.EiffelHighlightRules = EiffelHighlightRules;\n"],"names":["oop","require","TextMode","EiffelHighlightRules","Mode","this","HighlightRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","$id","call","prototype","exports","TextHighlightRules","keywords","operatorKeywords","languageConstants","booleanConstants","languageVariables","keywordMapper","createKeywordMapper","simpleString","$rules","token","regex","next","v","result","toUpperCase"],"sourceRoot":""}