{"version":3,"file":"js/2254.6b0d9066.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/abap.js","webpack://admin/./node_modules/ace-code/src/mode/abap_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/folding/coffee.js"],"sourcesContent":["\"use strict\";\n\nvar Rules = require(\"./abap_highlight_rules\").AbapHighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar TextMode = require(\"./text\").Mode;\nvar oop = require(\"../lib/oop\");\n\nfunction Mode() {\n    this.HighlightRules = Rules;\n    this.foldingRules = new FoldMode();\n}\n\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.lineCommentStart = '\"';\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        return indent;\n    };    \n    \n    this.$id = \"ace/mode/abap\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","/*\n * based on\n * \" Vim ABAP syntax file\n * \"    Language: SAP - ABAP/R4\n * \"    Revision: 2.1\n * \"  Maintainer: Marius Piedallu van Wyk <lailoken@gmail.com>\n * \" Last Change: 2012 Oct 23\n */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar AbapHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": \n            \"ADD ALIAS ALIASES ASCENDING ASSERT ASSIGN ASSIGNING AT BACK\" +\n            \" CALL CASE CATCH CHECK CLASS CLEAR CLOSE CNT COLLECT COMMIT COMMUNICATION COMPUTE CONCATENATE CONDENSE CONSTANTS CONTINUE CONTROLS CONVERT CREATE CURRENCY\" +\n            \" DATA DEFINE DEFINITION DEFERRED DELETE DESCENDING DESCRIBE DETAIL DIVIDE DO\" +\n            \" ELSE ELSEIF ENDAT ENDCASE ENDCLASS ENDDO ENDEXEC ENDFORM ENDFUNCTION ENDIF ENDIFEND ENDINTERFACE ENDLOOP ENDMETHOD ENDMODULE ENDON ENDPROVIDE ENDSELECT ENDTRY ENDWHILE EVENT EVENTS EXEC EXIT EXPORT EXPORTING EXTRACT\" +\n            \" FETCH FIELDS FORM FORMAT FREE FROM FUNCTION\" +\n            \" GENERATE GET\" +\n            \" HIDE\" +\n            \" IF IMPORT IMPORTING INDEX INFOTYPES INITIALIZATION INTERFACE INTERFACES INPUT INSERT IMPLEMENTATION\" +\n            \" LEAVE LIKE LINE LOAD LOCAL LOOP\" +\n            \" MESSAGE METHOD METHODS MODIFY MODULE MOVE MULTIPLY\" +\n            \" ON OVERLAY OPTIONAL OTHERS\" +\n            \" PACK PARAMETERS PERFORM POSITION PROGRAM PROVIDE PUT\" +\n            \" RAISE RANGES READ RECEIVE RECEIVING REDEFINITION REFERENCE REFRESH REJECT REPLACE REPORT RESERVE RESTORE RETURN RETURNING ROLLBACK\" +\n            \" SCAN SCROLL SEARCH SELECT SET SHIFT SKIP SORT SORTED SPLIT STANDARD STATICS STEP STOP SUBMIT SUBTRACT SUM SUMMARY SUPPRESS\" +\n            \" TABLES TIMES TRANSFER TRANSLATE TRY TYPE TYPES\" +\n            \" UNASSIGN ULINE UNPACK UPDATE\" +\n            \" WHEN WHILE WINDOW WRITE\" +\n            \" OCCURS STRUCTURE OBJECT PROPERTY\" +\n            \" CASTING APPEND RAISING VALUE COLOR\" +\n            \" CHANGING EXCEPTION EXCEPTIONS DEFAULT CHECKBOX COMMENT\" +\n            \" ID NUMBER FOR TITLE OUTPUT\" +\n            \" WITH EXIT USING\" +\n            \" INTO WHERE GROUP BY HAVING ORDER BY SINGLE\" +\n            \" APPENDING CORRESPONDING FIELDS OF TABLE\" +\n            \" LEFT RIGHT OUTER INNER JOIN AS CLIENT SPECIFIED BYPASSING BUFFER UP TO ROWS CONNECTING\" +\n            \" EQ NE LT LE GT GE NOT AND OR XOR IN LIKE BETWEEN\",\n        \"constant.language\": \n            \"TRUE FALSE NULL SPACE\",\n        \"support.type\": \n            \"c n i p f d t x string xstring decfloat16 decfloat34\",\n        \"keyword.operator\":\n            \"abs sign ceil floor trunc frac acos asin atan cos sin tan\" +\n            \" abapOperator cosh sinh tanh exp log log10 sqrt\" +\n            \" strlen xstrlen charlen numofchar dbmaxlen lines\" \n    }, \"text\", true, \" \");\n\n    var compoundKeywords = \"WITH\\\\W+(?:HEADER\\\\W+LINE|FRAME|KEY)|NO\\\\W+STANDARD\\\\W+PAGE\\\\W+HEADING|\"+\n        \"EXIT\\\\W+FROM\\\\W+STEP\\\\W+LOOP|BEGIN\\\\W+OF\\\\W+(?:BLOCK|LINE)|BEGIN\\\\W+OF|\"+\n        \"END\\\\W+OF\\\\W+(?:BLOCK|LINE)|END\\\\W+OF|NO\\\\W+INTERVALS|\"+\n        \"RESPECTING\\\\W+BLANKS|SEPARATED\\\\W+BY|USING\\\\W+(?:EDIT\\\\W+MASK)|\"+\n        \"WHERE\\\\W+(?:LINE)|RADIOBUTTON\\\\W+GROUP|REF\\\\W+TO|\"+\n        \"(?:PUBLIC|PRIVATE|PROTECTED)(?:\\\\W+SECTION)?|DELETING\\\\W+(?:TRAILING|LEADING)\"+\n        \"(?:ALL\\\\W+OCCURRENCES)|(?:FIRST|LAST)\\\\W+OCCURRENCE|INHERITING\\\\W+FROM|\"+\n        \"LINE-COUNT|ADD-CORRESPONDING|AUTHORITY-CHECK|BREAK-POINT|CLASS-DATA|CLASS-METHODS|\"+\n        \"CLASS-METHOD|DIVIDE-CORRESPONDING|EDITOR-CALL|END-OF-DEFINITION|END-OF-PAGE|END-OF-SELECTION|\"+\n        \"FIELD-GROUPS|FIELD-SYMBOLS|FUNCTION-POOL|MOVE-CORRESPONDING|MULTIPLY-CORRESPONDING|NEW-LINE|\"+\n        \"NEW-PAGE|NEW-SECTION|PRINT-CONTROL|RP-PROVIDE-FROM-LAST|SELECT-OPTIONS|SELECTION-SCREEN|\"+\n        \"START-OF-SELECTION|SUBTRACT-CORRESPONDING|SYNTAX-CHECK|SYNTAX-TRACE|TOP-OF-PAGE|TYPE-POOL|\"+\n        \"TYPE-POOLS|LINE-SIZE|LINE-COUNT|MESSAGE-ID|DISPLAY-MODE|READ(?:-ONLY)?|\"+\n        \"IS\\\\W+(?:NOT\\\\W+)?(?:ASSIGNED|BOUND|INITIAL|SUPPLIED)\";\n     \n    this.$rules = {\n        \"start\" : [\n            {token : \"string\", regex : \"`\", next  : \"string\"},\n            {token : \"string\", regex : \"'\", next  : \"qstring\"},\n            {token : \"doc.comment\", regex : /^\\*.+/},\n            {token : \"comment\",  regex : /\".+$/},\n            {token : \"invalid\", regex: \"\\\\.{2,}\"},\n            {token : \"keyword.operator\", regex: /\\W[\\-+%=<>*]\\W|\\*\\*|[~:,\\.&$]|->*?|=>/},\n            {token : \"paren.lparen\", regex : \"[\\\\[({]\"},\n            {token : \"paren.rparen\", regex : \"[\\\\])}]\"},\n            {token : \"constant.numeric\", regex: \"[+-]?\\\\d+\\\\b\"},\n            {token : \"variable.parameter\", regex : /sy|pa?\\d\\d\\d\\d\\|t\\d\\d\\d\\.|innnn/}, \n            {token : \"keyword\", regex : compoundKeywords}, \n            {token : \"variable.parameter\", regex : /\\w+-\\w[\\-\\w]*/},\n            {token : keywordMapper, regex : \"\\\\b\\\\w+\\\\b\"},\n            {caseInsensitive: true}\n        ],\n        \"qstring\" : [\n            {token : \"constant.language.escape\",   regex : \"''\"},\n            {token : \"string\", regex : \"'\",     next  : \"start\"},\n            {defaultToken : \"string\"}\n        ],\n        \"string\" : [\n            {token : \"constant.language.escape\",   regex : \"``\"},\n            {token : \"string\", regex : \"`\",     next  : \"start\"},\n            {defaultToken : \"string\"}\n        ]\n    };\n};\noop.inherits(AbapHighlightRules, TextHighlightRules);\n\nexports.AbapHighlightRules = AbapHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.commentBlock = function(session, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        range = this.commentBlock(session, row);\n        if (range)\n            return range;\n    };\n\n    // must return \"\" if there's no fold, to enable caching\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n\n        // documentation comments\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n"],"names":["Rules","require","FoldMode","TextMode","oop","Mode","this","HighlightRules","foldingRules","inherits","lineCommentStart","getNextLineIndent","state","line","tab","indent","$getIndent","$id","call","prototype","exports","TextHighlightRules","AbapHighlightRules","keywordMapper","createKeywordMapper","compoundKeywords","$rules","token","regex","next","caseInsensitive","defaultToken","BaseFoldMode","Range","commentBlock","session","row","re","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidgetRange","foldStyle","range","indentationBlock","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets"],"sourceRoot":""}