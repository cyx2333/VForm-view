{"version":3,"file":"js/1290.c742566f.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/ext/code_lens.js"],"sourcesContent":["\"use strict\";\n/**\n * @typedef {import(\"../edit_session\").EditSession} EditSession\n * @typedef {import(\"../virtual_renderer\").VirtualRenderer & {$textLayer: import(\"../layer/text\").Text &{$lenses: any}}} VirtualRenderer\n */\n\nvar event = require(\"../lib/event\");\nvar lang = require(\"../lib/lang\");\nvar dom = require(\"../lib/dom\");\n\n/**\n * @param {VirtualRenderer} renderer\n */\nfunction clearLensElements(renderer) {\n    var textLayer = renderer.$textLayer;\n    var lensElements = textLayer.$lenses;\n    if (lensElements)\n        lensElements.forEach(function(el) {el.remove(); });\n    textLayer.$lenses = null;\n}\n\n/**\n * @param {number} changes\n * @param {VirtualRenderer} renderer\n */\nfunction renderWidgets(changes, renderer) {\n    var changed = changes & renderer.CHANGE_LINES\n        || changes & renderer.CHANGE_FULL\n        || changes & renderer.CHANGE_SCROLL\n        || changes & renderer.CHANGE_TEXT;\n    if (!changed)\n        return;\n\n    var session = renderer.session;\n    var lineWidgets = renderer.session.lineWidgets;\n    var textLayer = renderer.$textLayer;\n    var lensElements = textLayer.$lenses;\n    if (!lineWidgets) {\n        if (lensElements)\n            clearLensElements(renderer);\n        return;\n    }\n\n    var textCells = renderer.$textLayer.$lines.cells;\n    var config = renderer.layerConfig;\n    var padding = renderer.$padding;\n\n    if (!lensElements)\n        lensElements = textLayer.$lenses = [];\n\n\n    var index = 0;\n    for (var i = 0; i < textCells.length; i++) {\n        var row = textCells[i].row;\n        var widget = lineWidgets[row];\n        var lenses = widget && widget.lenses;\n\n        if (!lenses || !lenses.length) continue;\n\n        var lensContainer = lensElements[index];\n        if (!lensContainer) {\n            lensContainer = lensElements[index]\n                = dom.buildDom([\"div\", {class: \"ace_codeLens\"}], renderer.container);\n        }\n        lensContainer.style.height = config.lineHeight + \"px\";\n        index++;\n\n        for (var j = 0; j < lenses.length; j++) {\n            var el = lensContainer.childNodes[2 * j];\n            if (!el) {\n                if (j != 0) lensContainer.appendChild(dom.createTextNode(\"\\xa0|\\xa0\"));\n                el = dom.buildDom([\"a\"], lensContainer);\n            }\n            el.textContent = lenses[j].title;\n            el.lensCommand = lenses[j];\n        }\n        while (lensContainer.childNodes.length > 2 * j - 1)\n            lensContainer.lastChild.remove();\n\n        var top = renderer.$cursorLayer.getPixelPosition({\n            row: row,\n            column: 0\n        }, true).top - config.lineHeight * widget.rowsAbove - config.offset;\n        lensContainer.style.top = top + \"px\";\n\n        var left = renderer.gutterWidth;\n        var indent = session.getLine(row).search(/\\S|$/);\n        if (indent == -1)\n            indent = 0;\n        left += indent * config.characterWidth;\n        lensContainer.style.paddingLeft = padding + left + \"px\";\n    }\n    while (index < lensElements.length)\n        lensElements.pop().remove();\n}\n\n/**\n * @param {EditSession} session\n */\nfunction clearCodeLensWidgets(session) {\n    if (!session.lineWidgets) return;\n    var widgetManager = session.widgetManager;\n    session.lineWidgets.forEach(function(widget) {\n        if (widget && widget.lenses)\n            widgetManager.removeLineWidget(widget);\n    });\n}\n\n/**\n *\n * @param {EditSession} session\n * @param {import(\"../../ace-internal\").Ace.CodeLense[]} lenses\n * @return {number}\n */\nexports.setLenses = function(session, lenses) {\n    var firstRow = Number.MAX_VALUE;\n\n    clearCodeLensWidgets(session);\n    lenses && lenses.forEach(function(lens) {\n        var row = lens.start.row;\n        var column = lens.start.column;\n        var widget = session.lineWidgets && session.lineWidgets[row];\n        if (!widget || !widget.lenses) {\n            widget = session.widgetManager.$registerLineWidget({\n                rowCount: 1,\n                rowsAbove: 1,\n                row: row,\n                column: column,\n                lenses: []\n            });\n        }\n        widget.lenses.push(lens.command);\n        if (row < firstRow)\n            firstRow = row;\n    });\n    session._emit(\"changeFold\", {data: {start: {row: firstRow}}});\n    return firstRow;\n};\n\n/**\n * @param {import(\"../editor\").Editor} editor\n */\nfunction attachToEditor(editor) {\n    editor.codeLensProviders = [];\n    editor.renderer.on(\"afterRender\", renderWidgets);\n    if (!editor.$codeLensClickHandler) {\n        editor.$codeLensClickHandler = function(e) {\n            var command = e.target.lensCommand;\n            if (!command) return;\n            editor.execCommand(command.id, command.arguments);\n            editor._emit(\"codeLensClick\", e);\n        };\n        event.addListener(editor.container, \"click\", editor.$codeLensClickHandler, editor);\n    }\n    editor.$updateLenses = function() {\n        var session = editor.session;\n        if (!session) return;\n\n        var providersToWaitNum = editor.codeLensProviders.length;\n        var lenses = [];\n        editor.codeLensProviders.forEach(function(provider) {\n            provider.provideCodeLenses(session, function(err, payload) {\n                if (err) return;\n                payload.forEach(function(lens) {\n                    lenses.push(lens);\n                });\n                providersToWaitNum--;\n                if (providersToWaitNum == 0) {\n                    applyLenses();\n                }\n            });\n        });\n\n        function applyLenses() {\n            var cursor = session.selection.cursor;\n            var oldRow = session.documentToScreenRow(cursor);\n            var scrollTop = session.getScrollTop();\n            var firstRow = exports.setLenses(session, lenses);\n\n            var lastDelta = session.$undoManager && session.$undoManager.$lastDelta;\n            if (lastDelta && lastDelta.action == \"remove\" && lastDelta.lines.length > 1)\n                return;\n            var row = session.documentToScreenRow(cursor);\n            var lineHeight = editor.renderer.layerConfig.lineHeight;\n            var top = session.getScrollTop() + (row - oldRow) * lineHeight;\n            // special case for the lens on line 0, because it can't be scrolled into view with keyboard\n            if (firstRow == 0 && scrollTop < lineHeight /4 && scrollTop > -lineHeight/4) {\n                top = -lineHeight;\n            }\n            session.setScrollTop(top);\n        }\n    };\n    var updateLenses = lang.delayedCall(editor.$updateLenses);\n    editor.$updateLensesOnInput = function() {\n        updateLenses.delay(250);\n    };\n    editor.on(\"input\", editor.$updateLensesOnInput);\n}\n\n/**\n * @param {import(\"../editor\").Editor} editor\n */\nfunction detachFromEditor(editor) {\n    editor.off(\"input\", editor.$updateLensesOnInput);\n    editor.renderer.off(\"afterRender\", renderWidgets);\n    if (editor.$codeLensClickHandler)\n        editor.container.removeEventListener(\"click\", editor.$codeLensClickHandler);\n}\n\n/**\n * @param {import(\"../editor\").Editor} editor\n * @param {import(\"../../ace-internal\").Ace.CodeLenseProvider} codeLensProvider\n */\nexports.registerCodeLensProvider = function(editor, codeLensProvider) {\n    editor.setOption(\"enableCodeLens\", true);\n    editor.codeLensProviders.push(codeLensProvider);\n    editor.$updateLensesOnInput();\n};\n\n/**\n * @param {EditSession} session\n */\nexports.clear = function(session) {\n    exports.setLenses(session, null);\n};\n\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    enableCodeLens: {\n        set: function(val) {\n            if (val) {\n                attachToEditor(this);\n            } else {\n                detachFromEditor(this);\n            }\n        }\n    }\n});\n\ndom.importCssString(`\n.ace_codeLens {\n    position: absolute;\n    color: #aaa;\n    font-size: 88%;\n    background: inherit;\n    width: 100%;\n    display: flex;\n    align-items: flex-end;\n    pointer-events: none;\n}\n.ace_codeLens > a {\n    cursor: pointer;\n    pointer-events: auto;\n}\n.ace_codeLens > a:hover {\n    color: #0000ff;\n    text-decoration: underline;\n}\n.ace_dark > .ace_codeLens > a:hover {\n    color: #4e94ce;\n}\n`, \"codelense.css\", false);\n"],"names":["require","event","lang","dom","clearLensElements","renderer","textLayer","$textLayer","lensElements","$lenses","forEach","el","remove","renderWidgets","changes","changed","CHANGE_LINES","CHANGE_FULL","CHANGE_SCROLL","CHANGE_TEXT","session","lineWidgets","textCells","$lines","cells","config","layerConfig","padding","$padding","index","i","length","row","widget","lenses","lensContainer","buildDom","class","container","style","height","lineHeight","j","childNodes","appendChild","createTextNode","textContent","title","lensCommand","lastChild","top","$cursorLayer","getPixelPosition","column","rowsAbove","offset","left","gutterWidth","indent","getLine","search","characterWidth","paddingLeft","pop","clearCodeLensWidgets","widgetManager","removeLineWidget","attachToEditor","editor","codeLensProviders","on","$codeLensClickHandler","e","command","target","execCommand","id","arguments","_emit","addListener","$updateLenses","providersToWaitNum","provider","provideCodeLenses","err","payload","lens","push","applyLenses","cursor","selection","oldRow","documentToScreenRow","scrollTop","getScrollTop","firstRow","exports","setLenses","lastDelta","$undoManager","$lastDelta","action","lines","setScrollTop","updateLenses","delayedCall","$updateLensesOnInput","delay","detachFromEditor","off","removeEventListener","Number","MAX_VALUE","start","$registerLineWidget","rowCount","data","registerCodeLensProvider","codeLensProvider","setOption","clear","Editor","prototype","enableCodeLens","set","val","this","importCssString"],"sourceRoot":""}