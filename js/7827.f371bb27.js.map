{"version":3,"file":"js/7827.f371bb27.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/csharp.js","webpack://admin/./node_modules/ace-code/src/mode/csharp_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/doc_comment_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/folding/csharp.js","webpack://admin/./node_modules/ace-code/src/mode/folding/cstyle.js","webpack://admin/./node_modules/ace-code/src/mode/matching_brace_outdent.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar CSharpHighlightRules = require(\"./csharp_highlight_rules\").CSharpHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/csharp\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = CSharpHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n  \n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n  \n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n    \n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n  \n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n  \n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.createWorker = function(session) {\n        return null;\n    };\n\n    this.$id = \"ace/mode/csharp\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar CSharpHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": \"abstract|async|await|event|new|struct|as|explicit|null|switch|base|extern|object|this|bool|false|operator|throw|break|finally|out|true|byte|fixed|override|try|case|float|params|typeof|catch|for|private|uint|char|foreach|protected|ulong|checked|goto|public|unchecked|class|if|readonly|unsafe|const|implicit|ref|ushort|continue|in|return|using|decimal|int|sbyte|virtual|default|interface|sealed|volatile|delegate|internal|partial|short|void|do|is|sizeof|while|double|lock|stackalloc|else|long|static|enum|namespace|string|var|dynamic\",\n        \"constant.language\": \"null|true|false\"\n    }, \"identifier\");\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // character\n                regex : /'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))?'/\n            }, {\n                token : \"string\", start : '\"', end : '\"|$', next: [\n                    {token: \"constant.language.escape\", regex: /\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},\n                    {token: \"invalid\", regex: /\\\\./}\n                ]\n            }, {\n                token : \"string\", start : '@\"', end : '\"', next:[\n                    {token: \"constant.language.escape\", regex: '\"\"'}\n                ]\n            }, {\n                token : \"string\", start : /\\$\"/, end : '\"|$', next: [\n                    {token: \"constant.language.escape\", regex: /\\\\(:?$)|{{/},\n                    {token: \"constant.language.escape\", regex: /\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},\n                    {token: \"invalid\", regex: /\\\\./}\n                ]\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"keyword\",\n                regex : \"^\\\\s*#(if|else|elif|endif|define|undef|warning|error|line|region|endregion|pragma)\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.normalizeRules();\n};\n\noop.inherits(CSharpHighlightRules, TextHighlightRules);\n\nexports.CSharpHighlightRules = CSharpHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            }, DocCommentHighlightRules.getTagRule(), {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar CFoldMode = require(\"./cstyle\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, CFoldMode);\n\n(function() {\n    this.usingRe = /^\\s*using \\S/;\n\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\n    this.getFoldWidgetBase = this.getFoldWidget;\n    \n    this.getFoldWidget = function(session, foldStyle, row) {\n        var fw = this.getFoldWidgetBase(session, foldStyle, row);\n        if (!fw) {\n            var line = session.getLine(row);\n            if (/^\\s*#region\\b/.test(line)) \n                return \"start\";\n            var usingRe = this.usingRe;\n            if (usingRe.test(line)) {\n                var prev = session.getLine(row - 1);\n                var next = session.getLine(row + 1);\n                if (!usingRe.test(prev) && usingRe.test(next))\n                    return \"start\";\n            }\n        }\n        return fw;\n    };\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.getFoldWidgetRangeBase(session, foldStyle, row);\n        if (range)\n            return range;\n\n        var line = session.getLine(row);\n        if (this.usingRe.test(line))\n            return this.getUsingStatementBlock(session, line, row);\n            \n        if (/^\\s*#region\\b/.test(line))\n            return this.getRegionBlock(session, line, row);\n    };\n    \n    this.getUsingStatementBlock = function(session, line, row) {\n        var startColumn = line.match(this.usingRe)[0].length - 1;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            if (/^\\s*$/.test(line))\n                continue;\n            if (!this.usingRe.test(line))\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    \n    this.getRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*#(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n\n            if (!depth)\n                break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    \n    //prevent naming conflict with any modes that inherit from cstyle and override this (like csharp)\n    this._getFoldWidgetBase = this.getFoldWidget;\n    \n    /**\n     * Gets fold widget with some non-standard extras:\n     *\n     * @example lineCommentRegionStart\n     *      //#region [optional description]\n     *\n     * @example blockCommentRegionStart\n     *      /*#region [optional description] *[/]\n     *\n     * @example tripleStarFoldingSection\n     *      /*** this folds even though 1 line because it has 3 stars ***[/]\n     * \n     * @note the pound symbol for region tags is optional\n     */\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            // No widget for single line block comment unless region or triple star\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    \n    /**\n     * gets comment region block with end region assumed to be start of comment in any cstyle mode or SQL mode (--) which inherits from this.\n     * There may optionally be a pound symbol before the region/endregion statement\n     */\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n"],"names":["oop","require","TextMode","CSharpHighlightRules","MatchingBraceOutdent","CStyleFoldMode","Mode","this","HighlightRules","$outdent","$behaviour","$defaultBehaviour","foldingRules","inherits","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","length","type","match","checkOutdent","input","autoOutdent","doc","row","createWorker","session","$id","call","prototype","exports","DocCommentHighlightRules","TextHighlightRules","keywordMapper","createKeywordMapper","$rules","token","regex","getStartRule","next","defaultToken","embedRules","getEndRule","normalizeRules","getTagRule","caseInsensitive","Range","CFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","usingRe","getFoldWidgetRangeBase","getFoldWidgetRange","getFoldWidgetBase","getFoldWidget","foldStyle","fw","getLine","test","prev","range","getUsingStatementBlock","getRegionBlock","startColumn","maxRow","getLength","startRow","endRow","endColumn","search","re","depth","m","exec","BaseFoldMode","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","subRange","column","openBracePos","findMatchingBracket"],"sourceRoot":""}