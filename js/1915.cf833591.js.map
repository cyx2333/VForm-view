{"version":3,"file":"js/1915.cf833591.js","mappings":"2GAEA,IAAIA,EAAMC,EAAQ,OACdC,EAAeD,EAAAA,OAAAA,SACfE,EAAQF,EAAAA,OAAAA,EAERG,EAAWC,EAAQ,EAAW,WAAY,EAC9CL,EAAIM,SAASF,EAAUF,GAEvB,WAEIK,KAAKC,mBAAqB,SAASC,EAASC,EAAWC,GACnD,IAAIC,EAAQL,KAAKM,iBAAiBJ,EAASE,GAC3C,GAAIC,EACA,OAAOA,EAEX,IAAIE,EAAK,KACLC,EAAON,EAAQO,QAAQL,GACvBM,EAAaF,EAAKG,OAAOJ,GAC7B,IAAmB,GAAfG,GAAwC,MAApBF,EAAKE,GAA7B,CAGA,IAAIE,EAAcJ,EAAKK,OACnBC,EAASZ,EAAQa,YACjBC,EAAWZ,EACXa,EAASb,EAEb,QAASA,EAAMU,EAAQ,CACnBN,EAAON,EAAQO,QAAQL,GACvB,IAAIc,EAAQV,EAAKG,OAAOJ,GAExB,IAAc,GAAVW,EAAJ,CAGA,GAAmB,MAAfV,EAAKU,GACL,MAEJD,EAASb,CALG,CAMhB,CAEA,GAAIa,EAASD,EAAU,CACnB,IAAIG,EAAYjB,EAAQO,QAAQQ,GAAQJ,OACxC,OAAO,IAAIjB,EAAMoB,EAAUJ,EAAaK,EAAQE,EACpD,CAvBU,CAwBd,EAGAnB,KAAKoB,cAAgB,SAASlB,EAASC,EAAWC,GAC9C,IAAII,EAAON,EAAQO,QAAQL,GACvBiB,EAASb,EAAKG,OAAO,MACrBW,EAAOpB,EAAQO,QAAQL,EAAM,GAC7BmB,EAAOrB,EAAQO,QAAQL,EAAM,GAC7BoB,EAAaD,EAAKZ,OAAO,MACzBc,EAAaH,EAAKX,OAAO,MAE7B,IAAe,GAAXU,EAEA,OADAnB,EAAQwB,YAAYtB,EAAM,IAAmB,GAAdoB,GAAmBA,EAAaC,EAAa,QAAU,GAC/E,GAIX,IAAmB,GAAfD,GACA,GAAIH,GAAUI,GAA8B,MAAhBjB,EAAKa,IAAmC,MAAhBC,EAAKD,GAGrD,OAFAnB,EAAQwB,YAAYtB,EAAM,GAAK,GAC/BF,EAAQwB,YAAYtB,EAAM,GAAK,GACxB,aAER,GAAIoB,GAAcH,GAA0B,MAAhBb,EAAKa,IAAmC,MAAhBE,EAAKF,KACd,GAA1CnB,EAAQO,QAAQL,EAAM,GAAGO,OAAO,MAGhC,OAFAT,EAAQwB,YAAYtB,EAAM,GAAK,QAC/BF,EAAQwB,YAAYtB,EAAM,GAAK,GACxB,GASf,OAJIF,EAAQwB,YAAYtB,EAAM,IADZ,GAAdoB,GAAmBA,EAAaH,EACD,QAEA,GAE/BA,EAASI,EACF,QAEA,EACf,CAEH,EAAEE,KAAK9B,EAAS+B,U,wBChFjB,IAAInC,EAAMC,EAAQ,OACdmC,EAAWnC,EAAAA,OAAAA,KACXoC,EAAyBpC,EAAAA,OAAAA,EACzBG,EAAWH,EAAAA,OAAAA,EAEXqC,EAAO,WACPF,EAASF,KAAK3B,MACdA,KAAKgC,eAAiBF,EACtB9B,KAAKiC,aAAe,IAAIpC,CAC5B,EACAJ,EAAIM,SAASgC,EAAMF,GAEnB,WACI7B,KAAKkC,iBAAmB,KACxBlC,KAAKmC,aAAe,CAACC,MAAO,KAAMC,IAAK,MACvCrC,KAAKsC,IAAM,oBACXtC,KAAKuC,cAAgB,uBACxB,EAAEZ,KAAKI,EAAKH,WAEb9B,EAAQiC,KAAOA,C,wBCzBFrC,EAAA,OAEb,IAAID,EAAMC,EAAQ,OACd8C,EAAO9C,EAAQ,MACf+C,EAAqB/C,EAAAA,OAAAA,EACrBgD,EAAqBhD,EAAAA,OAAAA,mBAErBoC,EAAyB,WACzBY,EAAmBf,KAAK3B,MAExB,IAAI2C,EAAmBH,EAAKI,WACvB,kBAAmBC,MAAM,MAG1BC,EAAmBN,EAAKI,WACvB,uHAAwHC,MAAM,MAG/HE,EAAmBP,EAAKI,WACvB,wBAAyBC,MAAM,MAGhCG,EAAWR,EAAKI,WAChB,2EAGEC,MAAM,MAuIZ,IAAK,IAAII,KAjITjD,KAAKkD,OAAOd,MAAMe,KACd,CACIC,MAAQ,UACRC,MAAQ,SACV,CACED,MAAQ,gBACRC,MAAQ,OACR/B,KAAO,cACR,CACC8B,MAAQ,gBACRC,MAAQ,gFACT,CACCD,MAAQ,SACRC,MAAQ,sCACT,CACCD,MAAQ,SACRC,MAAQ,sCACT,CACCD,MAAQ,mBACRC,MAAQ,wBACT,CACCD,MAAQ,mBACRC,MAAQ,mDACT,CACCD,MAAQ,4BACRC,MAAQ,qBACT,CACCD,MAAQ,SAASE,GACb,OAAIN,EAASO,eAAeD,GACjB,UACFX,EAAiBY,eAAeD,GAC9B,oBACFP,EAAiBQ,eAAeD,GAC9B,oBACFR,EAAiBS,eAAeD,IAAUR,EAAiBS,eAAeD,EAAME,UAAU,IACxF,mBACO,YAATF,EACE,qBAEJA,EAAMG,MAAM,gCACJ,WACJ,YACf,EAGAJ,MAAQ,8BACT,CACCD,MAAQ,mBACRC,MAAQ,4CACT,CACCD,MAAQ,SACRC,MAAQ,SACT,CACCD,MAAQ,SACRC,MAAQ,WACT,CACCD,MAAQ,OACRC,MAAQ,SAIhBrD,KAAKkD,OAAO,cAAgB,CACxB,CACIE,MAAQ,UACRC,MAAQ,cACR/B,KAAO,SACR,CACCoC,aAAc,YAItB1D,KAAKkD,OAAO,YAAc,CACtB,CACIE,MAAO,WACPC,MAAO,IACP/B,KAAM,OACP,CACC8B,MAAQ,gBACRC,MAAQ,gFACT,CACCD,MAAQ,SACRC,MAAQ,sCACT,CACCD,MAAQ,SACRC,MAAQ,sCACT,CACCD,MAAQ,mBACRC,MAAQ,wBACT,CACCD,MAAQ,mBACRC,MAAQ,mDACT,CACCD,MAAQ,4BACRC,MAAQ,qBACT,CACCD,MAAQ,SAASE,GACb,OAAIN,EAASO,eAAeD,GACjB,UACFX,EAAiBY,eAAeD,GAC9B,oBACFP,EAAiBQ,eAAeD,GAC9B,oBACFR,EAAiBS,eAAeD,IAAUR,EAAiBS,eAAeD,EAAME,UAAU,IACxF,mBACO,YAATF,EACE,qBAEJA,EAAMG,MAAM,iCACJ,WACJ,YACf,EAGAJ,MAAQ,+BACT,CACCD,MAAQ,mBACRC,MAAQ,4CACT,CACCD,MAAQ,SACRC,MAAQ,SACT,CACCD,MAAQ,SACRC,MAAQ,WACT,CACCD,MAAQ,OACRC,MAAQ,SAIFrD,KAAKkD,OACflD,KAAKkD,OAAOD,GAAGU,QAAQ,CACnBP,MAAO,WACPC,MAAO,OACPF,KAAM,aAIdnD,KAAK4D,gBACT,EAEAnE,EAAIM,SAAS+B,EAAwBW,GAErC3C,EAAQ,EAAyBgC,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/folding/velocity.js","webpack://admin/./node_modules/ace-code/src/mode/velocity.js","webpack://admin/./node_modules/ace-code/src/mode/velocity_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"##\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"##\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n    // must return \"\" if there's no fold, to enable caching\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n\n        // documentation comments\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"##\" && next[indent] == \"##\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"##\" && prev[indent] == \"##\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n","/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar HtmlMode = require(\"./html\").Mode;\nvar VelocityHighlightRules = require(\"./velocity_highlight_rules\").VelocityHighlightRules;\nvar FoldMode = require(\"./folding/velocity\").FoldMode;\n\nvar Mode = function() {\n    HtmlMode.call(this);\n    this.HighlightRules = VelocityHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, HtmlMode);\n\n(function() {\n    this.lineCommentStart = \"##\";\n    this.blockComment = {start: \"#*\", end: \"*#\"};\n    this.$id = \"ace/mode/velocity\";\n    this.snippetFileId = \"ace/snippets/velocity\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\n\nvar VelocityHighlightRules = function() {\n    HtmlHighlightRules.call(this);\n\n    var builtinConstants = lang.arrayToMap(\n        ('true|false|null').split('|')\n    );\n\n    var builtinFunctions = lang.arrayToMap(\n        (\"_DateTool|_DisplayTool|_EscapeTool|_FieldTool|_MathTool|_NumberTool|_SerializerTool|_SortTool|_StringTool|_XPathTool\").split('|')\n    );\n\n    var builtinVariables = lang.arrayToMap(\n        ('$contentRoot|$foreach').split('|')\n    );\n\n    var keywords = lang.arrayToMap(\n        (\"#set|#macro|#include|#parse|\" +\n        \"#if|#elseif|#else|#foreach|\" +\n        \"#break|#end|#stop\"\n        ).split('|')\n    );\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules.start.push(\n        {\n            token : \"comment\",\n            regex : \"##.*$\"\n        },{\n            token : \"comment.block\", // multi line comment\n            regex : \"#\\\\*\",\n            next : \"vm_comment\"\n        }, {\n            token : \"string.regexp\",\n            regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n        }, {\n            token : \"string\", // single line\n            regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n        }, {\n            token : \"string\", // single line\n            regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n        }, {\n            token : \"constant.numeric\", // hex\n            regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : \"constant.language.boolean\",\n            regex : \"(?:true|false)\\\\b\"\n        }, {\n            token : function(value) {\n                if (keywords.hasOwnProperty(value))\n                    return \"keyword\";\n                else if (builtinConstants.hasOwnProperty(value))\n                    return \"constant.language\";\n                else if (builtinVariables.hasOwnProperty(value))\n                    return \"variable.language\";\n                else if (builtinFunctions.hasOwnProperty(value) || builtinFunctions.hasOwnProperty(value.substring(1)))\n                    return \"support.function\";\n                else if (value == \"debugger\")\n                    return \"invalid.deprecated\";\n                else\n                    if(value.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*)$/))\n                        return \"variable\";\n                    return \"identifier\";\n            },\n            // TODO: Unicode escape sequences\n            // TODO: Unicode identifiers\n            regex : \"[a-zA-Z$#][a-zA-Z0-9_]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"!|&|\\\\*|\\\\-|\\\\+|=|!=|<=|>=|<|>|&&|\\\\|\\\\|\"\n        }, {\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        }\n    );\n\n    this.$rules[\"vm_comment\"] = [\n        {\n            token : \"comment\", // closing comment\n            regex : \"\\\\*#|-->\",\n            next : \"start\"\n        }, {\n            defaultToken: \"comment\"\n        }\n    ];\n\n    this.$rules[\"vm_start\"] = [\n        {\n            token: \"variable\",\n            regex: \"}\",\n            next: \"pop\"\n        }, {\n            token : \"string.regexp\",\n            regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n        }, {\n            token : \"string\", // single line\n            regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n        }, {\n            token : \"string\", // single line\n            regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n        }, {\n            token : \"constant.numeric\", // hex\n            regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : \"constant.language.boolean\",\n            regex : \"(?:true|false)\\\\b\"\n        }, {\n            token : function(value) {\n                if (keywords.hasOwnProperty(value))\n                    return \"keyword\";\n                else if (builtinConstants.hasOwnProperty(value))\n                    return \"constant.language\";\n                else if (builtinVariables.hasOwnProperty(value))\n                    return \"variable.language\";\n                else if (builtinFunctions.hasOwnProperty(value) || builtinFunctions.hasOwnProperty(value.substring(1)))\n                    return \"support.function\";\n                else if (value == \"debugger\")\n                    return \"invalid.deprecated\";\n                else\n                    if(value.match(/^(\\$[a-zA-Z_$][a-zA-Z0-9_]*)$/))\n                        return \"variable\";\n                    return \"identifier\";\n            },\n            // TODO: Unicode escape sequences\n            // TODO: Unicode identifiers\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"!|&|\\\\*|\\\\-|\\\\+|=|!=|<=|>=|<|>|&&|\\\\|\\\\|\"\n        }, {\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        }\n    ];\n\n    for (var i in this.$rules) {\n        this.$rules[i].unshift({\n            token: \"variable\",\n            regex: \"\\\\${\",\n            push: \"vm_start\"\n        });\n    }\n\n    this.normalizeRules();\n};\n\noop.inherits(VelocityHighlightRules, TextHighlightRules);\n\nexports.VelocityHighlightRules = VelocityHighlightRules;\n"],"names":["oop","require","BaseFoldMode","Range","FoldMode","exports","inherits","this","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","HtmlMode","VelocityHighlightRules","Mode","HighlightRules","foldingRules","lineCommentStart","blockComment","start","end","$id","snippetFileId","lang","TextHighlightRules","HtmlHighlightRules","builtinConstants","arrayToMap","split","builtinFunctions","builtinVariables","keywords","i","$rules","push","token","regex","value","hasOwnProperty","substring","match","defaultToken","unshift","normalizeRules"],"sourceRoot":""}