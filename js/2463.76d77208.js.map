{"version":3,"file":"js/2463.76d77208.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/ext/command_bar.js"],"sourcesContent":["/**\n * @typedef {import(\"../editor\").Editor} Editor\n * @typedef {import(\"../../ace-internal\").Ace.TooltipCommand} TooltipCommand\n */\nvar Tooltip = require(\"../tooltip\").Tooltip;\nvar EventEmitter = require(\"../lib/event_emitter\").EventEmitter;\nvar lang = require(\"../lib/lang\");\nvar dom = require(\"../lib/dom\");\nvar oop = require(\"../lib/oop\");\nvar useragent = require(\"../lib/useragent\");\n\nvar BUTTON_CLASS_NAME = 'command_bar_tooltip_button';\nvar VALUE_CLASS_NAME = 'command_bar_button_value';\nvar CAPTION_CLASS_NAME = 'command_bar_button_caption';\nvar KEYBINDING_CLASS_NAME = 'command_bar_keybinding';\nvar TOOLTIP_CLASS_NAME = 'command_bar_tooltip';\nvar MORE_OPTIONS_BUTTON_ID = 'MoreOptionsButton';\n\nvar defaultDelay = 100;\nvar defaultMaxElements = 4;\n\nvar minPosition = function (posA, posB) {\n    if (posB.row > posA.row) {\n        return posA;\n    } else if (posB.row === posA.row && posB.column > posA.column) {\n        return posA;\n    }\n    return posB;\n};\n\nvar keyDisplayMap = {\n    \"Ctrl\": { mac: \"^\"},\n    \"Option\": { mac: \"⌥\"},\n    \"Command\": { mac: \"⌘\"},\n    \"Cmd\": { mac: \"⌘\"},\n    \"Shift\": \"⇧\",\n    \"Left\": \"←\",\n    \"Right\": \"→\",\n    \"Up\": \"↑\",\n    \"Down\": \"↓\"\n};\n\n\n/**\n * Displays a command tooltip above the currently active line selection, with clickable elements.\n *\n * Internally it is a composite of two tooltips, one for the main tooltip and one for the \n * overflowing commands.\n * The commands are added sequentially in registration order.\n * When attached to an editor, it is either always shown or only when the active line is hovered\n * with mouse, depending on the alwaysShow property.\n */\nclass CommandBarTooltip {\n    /**\n     * @param {HTMLElement} parentNode\n     * @param {Partial<import(\"../../ace-internal\").Ace.CommandBarOptions>} [options]\n     */\n    constructor(parentNode, options) {\n        options = options || {};\n        this.parentNode = parentNode;\n        this.tooltip = new Tooltip(this.parentNode);\n        this.moreOptions = new Tooltip(this.parentNode);\n        this.maxElementsOnTooltip = options.maxElementsOnTooltip || defaultMaxElements;\n        this.$alwaysShow = options.alwaysShow || false;\n        this.eventListeners = {};\n        this.elements = {};\n        this.commands = {};\n\n        this.tooltipEl = dom.buildDom(['div', { class: TOOLTIP_CLASS_NAME }], this.tooltip.getElement());\n        this.moreOptionsEl = dom.buildDom(['div', { class: TOOLTIP_CLASS_NAME + \" tooltip_more_options\" }], this.moreOptions.getElement());\n\n        this.$showTooltipTimer = lang.delayedCall(this.$showTooltip.bind(this), options.showDelay || defaultDelay);\n        this.$hideTooltipTimer = lang.delayedCall(this.$hideTooltip.bind(this), options.hideDelay || defaultDelay);\n        this.$tooltipEnter = this.$tooltipEnter.bind(this);\n        this.$onMouseMove = this.$onMouseMove.bind(this);\n        this.$onChangeScroll = this.$onChangeScroll.bind(this);\n        this.$onEditorChangeSession = this.$onEditorChangeSession.bind(this);\n        this.$scheduleTooltipForHide = this.$scheduleTooltipForHide.bind(this);\n        this.$preventMouseEvent = this.$preventMouseEvent.bind(this);\n\n        for (var event of [\"mousedown\", \"mouseup\", \"click\"]) {\n            this.tooltip.getElement().addEventListener(event, this.$preventMouseEvent);\n            this.moreOptions.getElement().addEventListener(event, this.$preventMouseEvent);\n        }\n    }\n\n    /**\n     * Registers a command on the command bar tooltip.\n     * \n     * The commands are added in sequential order. If there is not enough space on the main\n     * toolbar, the remaining elements are added to the overflow menu.\n     * \n     * @param {string} id      \n     * @param {TooltipCommand} command\n     */\n    registerCommand(id, command) {\n        var registerForMainTooltip = Object.keys(this.commands).length < this.maxElementsOnTooltip;\n        if (!registerForMainTooltip && !this.elements[MORE_OPTIONS_BUTTON_ID]) {\n            this.$createCommand(MORE_OPTIONS_BUTTON_ID, {\n                name: \"···\",\n                exec: \n                /**\n                 * @this {CommandBarTooltip}\n                 */\n                function() {\n                    this.$shouldHideMoreOptions = false;\n                    this.$setMoreOptionsVisibility(!this.isMoreOptionsShown());\n                }.bind(this),\n                type: \"checkbox\",\n                getValue: function() {\n                    return this.isMoreOptionsShown();\n                }.bind(this),\n                enabled: true\n            }, true);\n        }\n        this.$createCommand(id, command, registerForMainTooltip);\n        if (this.isShown()) {\n            this.updatePosition();\n        }\n    }\n\n    isShown() {\n        return !!this.tooltip && this.tooltip.isOpen;\n    }\n\n    isMoreOptionsShown() {\n        return !!this.moreOptions && this.moreOptions.isOpen;\n    }\n\n    getAlwaysShow() {\n        return this.$alwaysShow;\n    }\n\n    /**\n     * Sets the display mode of the tooltip\n     * \n     * When true, the tooltip is always displayed while it is attached to an editor.\n     * When false, the tooltip is displayed only when the mouse hovers over the active editor line.\n     * \n     * @param {boolean} alwaysShow\n     */\n    setAlwaysShow(alwaysShow) {\n        this.$alwaysShow = alwaysShow;\n        this.$updateOnHoverHandlers(!this.$alwaysShow);\n        this._signal(\"alwaysShow\", this.$alwaysShow);\n    }\n\n    /**\n     * Attaches the clickable command bar tooltip to an editor\n     * \n     * Depending on the alwaysShow parameter it either displays the tooltip immediately,\n     * or subscribes to the necessary events to display the tooltip on hover.\n     * \n     * @param {Editor} editor\n     */\n    attach(editor) {\n        if (!editor || (this.isShown() && this.editor === editor)) {\n            return;\n        }\n\n        this.detach();\n\n        this.editor = editor;\n        this.editor.on(\"changeSession\", this.$onEditorChangeSession);\n        if (this.editor.session) {\n            this.editor.session.on(\"changeScrollLeft\", this.$onChangeScroll);\n            this.editor.session.on(\"changeScrollTop\", this.$onChangeScroll);\n        }\n\n        if (this.getAlwaysShow()) {\n            this.$showTooltip();\n        } else {\n            this.$updateOnHoverHandlers(true);\n        }\n    }\n\n    /**\n     * Updates the position of the command bar tooltip. It aligns itself above the active line in the editor.\n     */\n    updatePosition() {\n        if (!this.editor) {\n            return;\n        }\n        var renderer = this.editor.renderer;\n\n        var ranges;\n        if (this.editor.selection.getAllRanges) {\n            ranges = this.editor.selection.getAllRanges();\n        } else {\n            ranges = [this.editor.getSelectionRange()];\n        }\n        if (!ranges.length) {\n            return;\n        }\n        var minPos = minPosition(ranges[0].start, ranges[0].end);\n        for (var i = 0, range; range = ranges[i]; i++) {\n            minPos = minPosition(minPos, minPosition(range.start, range.end));\n        }\n\n        var pos = renderer.$cursorLayer.getPixelPosition(minPos, true);\n\n        var tooltipEl = this.tooltip.getElement();\n        var screenWidth = window.innerWidth;\n        var screenHeight = window.innerHeight;\n        var rect = this.editor.container.getBoundingClientRect();\n\n        pos.top += rect.top - renderer.layerConfig.offset;\n        pos.left += rect.left + renderer.gutterWidth - renderer.scrollLeft;\n\n        var cursorVisible = pos.top >= rect.top && pos.top <= rect.bottom &&\n            pos.left >= rect.left + renderer.gutterWidth && pos.left <= rect.right;\n\n        if (!cursorVisible && this.isShown()) {\n            this.$hideTooltip();\n            return;\n        } else if (cursorVisible && !this.isShown() && this.getAlwaysShow()) {\n            this.$showTooltip();\n            return;\n        }\n\n        var top = pos.top - tooltipEl.offsetHeight;\n        var left = Math.min(screenWidth - tooltipEl.offsetWidth, pos.left);\n\n        var tooltipFits = top >= 0 && top + tooltipEl.offsetHeight <= screenHeight &&\n            left >= 0 && left + tooltipEl.offsetWidth <= screenWidth;\n\n        if (!tooltipFits) {\n            this.$hideTooltip();\n            return;\n        }\n\n        this.tooltip.setPosition(left, top);\n\n        if (this.isMoreOptionsShown()) {\n            top = top + tooltipEl.offsetHeight;\n            left = this.elements[MORE_OPTIONS_BUTTON_ID].getBoundingClientRect().left;\n    \n            var moreOptionsEl = this.moreOptions.getElement();\n            var screenHeight = window.innerHeight;\n            if (top + moreOptionsEl.offsetHeight > screenHeight) {\n                top -= tooltipEl.offsetHeight + moreOptionsEl.offsetHeight;\n            }\n            if (left + moreOptionsEl.offsetWidth > screenWidth) {\n                left = screenWidth - moreOptionsEl.offsetWidth;\n            }\n            \n            this.moreOptions.setPosition(left, top);\n        }\n    }\n\n    /**\n     * Updates each command element in the tooltip. \n     * \n     * This is automatically called on certain events, but can be called manually as well.\n     */\n    update() {\n        Object.keys(this.elements).forEach(this.$updateElement.bind(this));\n    }\n\n    /**\n     * Detaches the tooltip from the editor.\n     */\n    detach() {\n        this.tooltip.hide();\n        this.moreOptions.hide();\n        this.$updateOnHoverHandlers(false);\n        if (this.editor) {\n            this.editor.off(\"changeSession\", this.$onEditorChangeSession);\n            if (this.editor.session) {\n                this.editor.session.off(\"changeScrollLeft\", this.$onChangeScroll);\n                this.editor.session.off(\"changeScrollTop\", this.$onChangeScroll);\n            }\n        }\n        this.$mouseInTooltip = false;\n        this.editor = null;\n    }\n\n    destroy() {\n        if (this.tooltip && this.moreOptions) {\n            this.detach();\n            this.tooltip.destroy();\n            this.moreOptions.destroy();\n        }\n        this.eventListeners = {};\n        this.commands = {};\n        this.elements = {};\n        this.tooltip = this.moreOptions = this.parentNode = null;\n    }\n\n    /**\n     * @param {string} id\n     * @param {TooltipCommand} command\n     * @param {boolean} forMainTooltip\n     */\n    $createCommand(id, command, forMainTooltip) {\n        var parentEl = forMainTooltip ? this.tooltipEl : this.moreOptionsEl;\n        var keyParts = [];\n        var bindKey = command.bindKey;\n        if (bindKey) {\n            if (typeof bindKey === 'object') {\n                bindKey = useragent.isMac ? bindKey.mac : bindKey.win;\n            }\n            bindKey = bindKey.split(\"|\")[0];\n            keyParts = bindKey.split(\"-\");\n            \n            keyParts = keyParts.map(function(key) {\n                if (keyDisplayMap[key]) {\n                    if (typeof keyDisplayMap[key] === 'string') {\n                        return keyDisplayMap[key];\n                    } else if (useragent.isMac && keyDisplayMap[key].mac) {\n                        return keyDisplayMap[key].mac;\n                    }\n                }\n                return key;\n            });\n        }\n\n        /**@type {any[]} */\n        var buttonNode;\n        if (forMainTooltip && command.iconCssClass) {\n            //Only support icon button for main tooltip, otherwise fall back to text button\n            buttonNode = [\n                'div',\n                {\n                     class: [\"ace_icon_svg\", command.iconCssClass].join(\" \"),\n                     \"aria-label\": command.name + \" (\" + command.bindKey + \")\"\n                }\n            ];\n        } else {\n            buttonNode = [\n                ['div', { class: VALUE_CLASS_NAME }],\n                ['div', { class: CAPTION_CLASS_NAME }, command.name]\n            ];\n            if (keyParts.length) {\n                buttonNode.push(\n                    [\n                        'div',\n                        { class: KEYBINDING_CLASS_NAME },\n                        keyParts.map(function(keyPart) {\n                            return ['div', keyPart];\n                        }) \n                    ]\n                );\n            }\n        }\n\n        // @ts-ignore\n        dom.buildDom(['div', { class: [BUTTON_CLASS_NAME, command.cssClass || \"\"].join(\" \"), ref: id }, buttonNode], parentEl, this.elements);\n        this.commands[id] = command;\n        \n        var eventListener =\n            /**\n             * @this {CommandBarTooltip}\n             */\n            function(e) {\n            if (this.editor) {\n                this.editor.focus();\n            }\n            // Internal variable to properly handle when the more options button is clicked\n            this.$shouldHideMoreOptions = this.isMoreOptionsShown();\n            if (!this.elements[id].disabled && command.exec) {\n                command.exec(this.editor);\n            }\n            if (this.$shouldHideMoreOptions) {\n                this.$setMoreOptionsVisibility(false);\n            }\n            this.update();\n            e.preventDefault();\n        }.bind(this);\n        this.eventListeners[id] = eventListener;\n        this.elements[id].addEventListener('click', eventListener.bind(this));\n        this.$updateElement(id);\n    }\n\n    /**\n     * @param {boolean} visible\n     */\n    $setMoreOptionsVisibility(visible) {\n        if (visible) {\n            this.moreOptions.setTheme(this.editor.renderer.theme);\n            this.moreOptions.setClassName(TOOLTIP_CLASS_NAME + \"_wrapper\");\n            this.moreOptions.show();\n            this.update();\n            this.updatePosition();\n        } else {\n            this.moreOptions.hide();\n        }\n    }\n\n    $onEditorChangeSession(e) {\n        if (e.oldSession) {\n            e.oldSession.off(\"changeScrollTop\", this.$onChangeScroll);\n            e.oldSession.off(\"changeScrollLeft\", this.$onChangeScroll);\n        }\n        this.detach();\n    }\n\n    $onChangeScroll() {\n        if (this.editor.renderer && (this.isShown() || this.getAlwaysShow())) {\n            this.editor.renderer.once(\"afterRender\", this.updatePosition.bind(this));\n        }\n    }\n\n    $onMouseMove(e) {\n        if (this.$mouseInTooltip) {\n            return;\n        }\n        var cursorPosition = this.editor.getCursorPosition();\n        var cursorScreenPosition = this.editor.renderer.textToScreenCoordinates(cursorPosition.row, cursorPosition.column);\n        var lineHeight = this.editor.renderer.lineHeight;\n        \n        var isInCurrentLine = e.clientY >= cursorScreenPosition.pageY && e.clientY < cursorScreenPosition.pageY + lineHeight;\n\n        if (isInCurrentLine) {\n            if (!this.isShown() && !this.$showTooltipTimer.isPending()) {\n                this.$showTooltipTimer.delay();\n            }\n            if (this.$hideTooltipTimer.isPending()) {\n                this.$hideTooltipTimer.cancel();\n            }\n        } else {\n            if (this.isShown() && !this.$hideTooltipTimer.isPending()) {\n                this.$hideTooltipTimer.delay();\n            }\n            if (this.$showTooltipTimer.isPending()) {\n                this.$showTooltipTimer.cancel();\n            }\n        }\n    }\n\n    $preventMouseEvent(e) {\n        if (this.editor) {\n            this.editor.focus();\n        }\n        e.preventDefault();\n    }\n    \n    $scheduleTooltipForHide() {\n        this.$mouseInTooltip = false;\n        this.$showTooltipTimer.cancel();\n        this.$hideTooltipTimer.delay();\n    }\n\n    $tooltipEnter() {\n        this.$mouseInTooltip = true;\n        if (this.$showTooltipTimer.isPending()) {\n            this.$showTooltipTimer.cancel();\n        }\n        if (this.$hideTooltipTimer.isPending()) {\n            this.$hideTooltipTimer.cancel();\n        }\n    }\n\n    /**\n     * @param {boolean} [enableHover]\n     */\n    $updateOnHoverHandlers(enableHover) {\n        var tooltipEl = this.tooltip.getElement();\n        var moreOptionsEl = this.moreOptions.getElement();\n        if (enableHover) {\n            if (this.editor) {\n                this.editor.on(\"mousemove\", this.$onMouseMove);\n                this.editor.renderer.getMouseEventTarget().addEventListener(\"mouseout\", this.$scheduleTooltipForHide, true);\n            }\n            tooltipEl.addEventListener('mouseenter', this.$tooltipEnter);\n            tooltipEl.addEventListener('mouseleave', this.$scheduleTooltipForHide);\n            moreOptionsEl.addEventListener('mouseenter', this.$tooltipEnter);\n            moreOptionsEl.addEventListener('mouseleave', this.$scheduleTooltipForHide);\n        } else {\n            if (this.editor) {\n                this.editor.off(\"mousemove\", this.$onMouseMove);\n                this.editor.renderer.getMouseEventTarget().removeEventListener(\"mouseout\", this.$scheduleTooltipForHide, true);\n            }\n            tooltipEl.removeEventListener('mouseenter', this.$tooltipEnter);\n            tooltipEl.removeEventListener('mouseleave', this.$scheduleTooltipForHide);\n            moreOptionsEl.removeEventListener('mouseenter', this.$tooltipEnter);\n            moreOptionsEl.removeEventListener('mouseleave', this.$scheduleTooltipForHide);\n        }\n    }\n\n    $showTooltip() {\n        if (this.isShown()) {\n            return;\n        }\n        this.tooltip.setTheme(this.editor.renderer.theme);\n        this.tooltip.setClassName(TOOLTIP_CLASS_NAME + \"_wrapper\");\n        this.tooltip.show();\n        this.update();\n        this.updatePosition();\n        this._signal(\"show\");\n    }\n    $hideTooltip() {\n        this.$mouseInTooltip = false;\n        if (!this.isShown()) {\n            return;\n        }\n        this.moreOptions.hide();\n        this.tooltip.hide();\n        this._signal(\"hide\");\n    }\n\n    /**\n     * @param {string} id\n     */\n    $updateElement(id) {\n        var command = this.commands[id];\n        if (!command) {\n            return;\n        }\n        var el = this.elements[id];\n        var commandEnabled = command.enabled;\n        \n        if (typeof commandEnabled === 'function') {\n            commandEnabled = commandEnabled(this.editor);\n        }\n\n        if (typeof command.getValue === 'function') {\n            var value = command.getValue(this.editor);\n            if (command.type === 'text') {\n                el.textContent = value;\n            } else if (command.type === 'checkbox') {\n                var domCssFn = value ? dom.addCssClass : dom.removeCssClass;\n                var isOnTooltip = el.parentElement === this.tooltipEl;\n                el.ariaChecked = value;\n                if (isOnTooltip) {\n                    domCssFn(el, \"ace_selected\");\n                } else {\n                    el = el.querySelector(\".\" + VALUE_CLASS_NAME);\n                    domCssFn(el, \"ace_checkmark\");\n                }\n            }\n        }\n\n        if (commandEnabled && el.disabled) {\n            dom.removeCssClass(el, \"ace_disabled\");\n            el.ariaDisabled = el.disabled = false;\n            el.removeAttribute(\"disabled\");\n        } else if (!commandEnabled && !el.disabled) {\n            dom.addCssClass(el, \"ace_disabled\");\n            el.ariaDisabled = el.disabled = true;\n            el.setAttribute(\"disabled\", \"\");\n        }\n    }\n}\n\noop.implement(CommandBarTooltip.prototype, EventEmitter);\n\ndom.importCssString(`\n.ace_tooltip.${TOOLTIP_CLASS_NAME}_wrapper {\n    padding: 0;\n}\n\n.ace_tooltip .${TOOLTIP_CLASS_NAME} {\n    padding: 1px 5px;\n    display: flex;\n    pointer-events: auto;\n}\n\n.ace_tooltip .${TOOLTIP_CLASS_NAME}.tooltip_more_options {\n    padding: 1px;\n    flex-direction: column;\n}\n\ndiv.${BUTTON_CLASS_NAME} {\n    display: inline-flex;\n    cursor: pointer;\n    margin: 1px;\n    border-radius: 2px;\n    padding: 2px 5px;\n    align-items: center;\n}\n\ndiv.${BUTTON_CLASS_NAME}.ace_selected,\ndiv.${BUTTON_CLASS_NAME}:hover:not(.ace_disabled) {\n    background-color: rgba(0, 0, 0, 0.1);\n}\n\ndiv.${BUTTON_CLASS_NAME}.ace_disabled {\n    color: #777;\n    pointer-events: none;\n}\n\ndiv.${BUTTON_CLASS_NAME} .ace_icon_svg {\n    height: 12px;\n    background-color: #000;\n}\n\ndiv.${BUTTON_CLASS_NAME}.ace_disabled .ace_icon_svg {\n    background-color: #777;\n}\n\n.${TOOLTIP_CLASS_NAME}.tooltip_more_options .${BUTTON_CLASS_NAME} {\n    display: flex;\n}\n\n.${TOOLTIP_CLASS_NAME}.${VALUE_CLASS_NAME} {\n    display: none;\n}\n\n.${TOOLTIP_CLASS_NAME}.tooltip_more_options .${VALUE_CLASS_NAME} {\n    display: inline-block;\n    width: 12px;\n}\n\n.${CAPTION_CLASS_NAME} {\n    display: inline-block;\n}\n\n.${KEYBINDING_CLASS_NAME} {\n    margin: 0 2px;\n    display: inline-block;\n    font-size: 8px;\n}\n\n.${TOOLTIP_CLASS_NAME}.tooltip_more_options .${KEYBINDING_CLASS_NAME} {\n    margin-left: auto;\n}\n\n.${KEYBINDING_CLASS_NAME} div {\n    display: inline-block;\n    min-width: 8px;\n    padding: 2px;\n    margin: 0 1px;\n    border-radius: 2px;\n    background-color: #ccc;\n    text-align: center;\n}\n\n.ace_dark.ace_tooltip .${TOOLTIP_CLASS_NAME} {\n    background-color: #373737;\n    color: #eee;\n}\n\n.ace_dark div.${BUTTON_CLASS_NAME}.ace_disabled {\n    color: #979797;\n}\n\n.ace_dark div.${BUTTON_CLASS_NAME}.ace_selected,\n.ace_dark div.${BUTTON_CLASS_NAME}:hover:not(.ace_disabled) {\n    background-color: rgba(255, 255, 255, 0.1);\n}\n\n.ace_dark div.${BUTTON_CLASS_NAME} .ace_icon_svg {\n    background-color: #eee;\n}\n\n.ace_dark div.${BUTTON_CLASS_NAME}.ace_disabled .ace_icon_svg {\n    background-color: #979797;\n}\n\n.ace_dark .${BUTTON_CLASS_NAME}.ace_disabled {\n    color: #979797;\n}\n\n.ace_dark .${KEYBINDING_CLASS_NAME} div {\n    background-color: #575757;\n}\n\n.ace_checkmark::before {\n    content: '✓';\n}\n`, \"commandbar.css\", false);\n\nexports.CommandBarTooltip = CommandBarTooltip;\nexports.TOOLTIP_CLASS_NAME = TOOLTIP_CLASS_NAME;\nexports.BUTTON_CLASS_NAME = BUTTON_CLASS_NAME;\n"],"names":["Tooltip","require","EventEmitter","lang","dom","oop","useragent","BUTTON_CLASS_NAME","VALUE_CLASS_NAME","CAPTION_CLASS_NAME","KEYBINDING_CLASS_NAME","TOOLTIP_CLASS_NAME","MORE_OPTIONS_BUTTON_ID","defaultDelay","defaultMaxElements","minPosition","posA","posB","row","column","keyDisplayMap","mac","CommandBarTooltip","constructor","parentNode","options","event","this","tooltip","moreOptions","maxElementsOnTooltip","$alwaysShow","alwaysShow","eventListeners","elements","commands","tooltipEl","buildDom","class","getElement","moreOptionsEl","$showTooltipTimer","delayedCall","$showTooltip","bind","showDelay","$hideTooltipTimer","$hideTooltip","hideDelay","$tooltipEnter","$onMouseMove","$onChangeScroll","$onEditorChangeSession","$scheduleTooltipForHide","$preventMouseEvent","addEventListener","registerCommand","id","command","registerForMainTooltip","Object","keys","length","$createCommand","name","exec","$shouldHideMoreOptions","$setMoreOptionsVisibility","isMoreOptionsShown","type","getValue","enabled","isShown","updatePosition","isOpen","getAlwaysShow","setAlwaysShow","$updateOnHoverHandlers","_signal","attach","editor","detach","on","session","ranges","renderer","selection","getAllRanges","getSelectionRange","range","minPos","start","end","i","pos","$cursorLayer","getPixelPosition","screenWidth","window","innerWidth","screenHeight","innerHeight","rect","container","getBoundingClientRect","top","layerConfig","offset","left","gutterWidth","scrollLeft","cursorVisible","bottom","right","offsetHeight","Math","min","offsetWidth","tooltipFits","setPosition","update","forEach","$updateElement","hide","off","$mouseInTooltip","destroy","forMainTooltip","buttonNode","parentEl","keyParts","bindKey","isMac","win","split","map","key","iconCssClass","join","push","keyPart","cssClass","ref","eventListener","e","focus","disabled","preventDefault","visible","setTheme","theme","setClassName","show","oldSession","once","cursorPosition","getCursorPosition","cursorScreenPosition","textToScreenCoordinates","lineHeight","isInCurrentLine","clientY","pageY","isPending","delay","cancel","enableHover","getMouseEventTarget","removeEventListener","el","commandEnabled","value","textContent","domCssFn","addCssClass","removeCssClass","isOnTooltip","parentElement","ariaChecked","querySelector","ariaDisabled","removeAttribute","setAttribute","implement","prototype","importCssString","exports"],"sourceRoot":""}