{"version":3,"file":"js/5012.d7bc5210.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/folding/coffee.js","webpack://admin/./node_modules/ace-code/src/mode/makefile.js","webpack://admin/./node_modules/ace-code/src/mode/makefile_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/sh_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.commentBlock = function(session, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        range = this.commentBlock(session, row);\n        if (range)\n            return range;\n    };\n\n    // must return \"\" if there's no fold, to enable caching\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n\n        // documentation comments\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n","/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MakefileHighlightRules = require(\"./makefile_highlight_rules\").MakefileHighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = MakefileHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n       \n    this.lineCommentStart = \"#\";    \n    this.$indentWithTabs = true;\n    \n    this.$id = \"ace/mode/makefile\";\n    this.snippetFileId = \"ace/snippets/makefile\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar ShHighlightFile = require(\"./sh_highlight_rules\");\n\nvar MakefileHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": ShHighlightFile.reservedKeywords,\n        \"support.function.builtin\": ShHighlightFile.languageConstructs,\n        \"invalid.deprecated\": \"debugger\"\n    }, \"string\");\n\n    this.$rules = \n        {\n    \"start\": [\n        {\n            token: \"string.interpolated.backtick.makefile\",\n            regex: \"`\",\n            next: \"shell-start\"\n        },\n        {\n            token: \"punctuation.definition.comment.makefile\",\n            regex: /#(?=.)/,\n            next: \"comment\"\n        },\n        {\n            token: [ \"keyword.control.makefile\"],\n            regex: \"^(?:\\\\s*\\\\b)(\\\\-??include|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)(?:\\\\b)\"\n        },\n        {// ^([^\\t ]+(\\s[^\\t ]+)*:(?!\\=))\\s*.*\n            token: [\"entity.name.function.makefile\", \"text\"],\n            regex: \"^([^\\\\t ]+(?:\\\\s[^\\\\t ]+)*:)(\\\\s*.*)\"\n        }\n    ],\n    \"comment\": [\n        {\n            token : \"punctuation.definition.comment.makefile\",\n            regex : /.+\\\\/\n        },\n        {\n            token : \"punctuation.definition.comment.makefile\",\n            regex : \".+\",\n            next  : \"start\"\n        }\n    ],\n    \"shell-start\": [\n        {\n            token: keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, \n        {\n            token: \"string\",\n            regex : \"\\\\w+\"\n        }, \n        {\n            token : \"string.interpolated.backtick.makefile\",\n            regex : \"`\",\n            next  : \"start\"\n        }\n    ]\n};\n\n};\n\noop.inherits(MakefileHighlightRules, TextHighlightRules);\n\nexports.MakefileHighlightRules = MakefileHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar reservedKeywords = exports.reservedKeywords = (\n        '!|{|}|case|do|done|elif|else|'+\n        'esac|fi|for|if|in|then|until|while|'+\n        '&|;|export|local|read|typeset|unset|'+\n        'elif|select|set|function|declare|readonly'\n    );\n\nvar languageConstructs = exports.languageConstructs = (\n    '[|]|alias|bg|bind|break|builtin|'+\n     'cd|command|compgen|complete|continue|'+\n     'dirs|disown|echo|enable|eval|exec|'+\n     'exit|fc|fg|getopts|hash|help|history|'+\n     'jobs|kill|let|logout|popd|printf|pushd|'+\n     'pwd|return|set|shift|shopt|source|'+\n     'suspend|test|times|trap|type|ulimit|'+\n     'umask|unalias|wait'\n);\n\nvar ShHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": reservedKeywords,\n        \"support.function.builtin\": languageConstructs,\n        \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    // var integer = \"(?:\" + decimalInteger + \")\";\n\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"(?==))\";\n\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n\n    this.$rules = {\n        \"start\" : [{\n            token : \"constant\",\n            regex : /\\\\./\n        }, {\n            token : [\"text\", \"comment\"],\n            regex : /(^|\\s)(#.*)$/\n        }, {\n            token : \"string.start\",\n            regex : '\"',\n            push : [{\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:[$`\"\\\\]|$)/\n            }, {\n                include : \"variables\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /`/ // TODO highlight `\n            }, {\n                token : \"string.end\",\n                regex : '\"',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token : \"string\",\n            regex : \"\\\\$'\",\n            push : [{\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            regex : \"<<<\",\n            token : \"keyword.operator\"\n        }, {\n            stateName: \"heredoc\",\n            regex : \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n            onMatch : function(value, currentState, stack) {\n                var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n                var tokens = value.split(this.splitRegex);\n                stack.push(next, tokens[4]);\n                return [\n                    {type:\"constant\", value: tokens[1]},\n                    {type:\"text\", value: tokens[2]},\n                    {type:\"string\", value: tokens[3]},\n                    {type:\"support.class\", value: tokens[4]},\n                    {type:\"string\", value: tokens[5]}\n                ];\n            },\n            rules: {\n                heredoc: [{\n                    onMatch:  function(value, currentState, stack) {\n                        if (value === stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack[0] || \"start\";\n                            return \"support.class\";\n                        }\n                        this.next = \"\";\n                        return \"string\";\n                    },\n                    regex: \".*$\",\n                    next: \"start\"\n                }],\n                indentedHeredoc: [{\n                    token: \"string\",\n                    regex: \"^\\t+\"\n                }, {\n                    onMatch:  function(value, currentState, stack) {\n                        if (value === stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack[0] || \"start\";\n                            return \"support.class\";\n                        }\n                        this.next = \"\";\n                        return \"string\";\n                    },\n                    regex: \".*$\",\n                    next: \"start\"\n                }]\n            }\n        }, {\n            regex : \"$\",\n            token : \"empty\",\n            next : function(currentState, stack) {\n                if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\n                    return stack[0];\n                return currentState;\n            }\n        }, {\n            token : [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n            regex : /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n        }, {\n            token : \"variable.language\",\n            regex : builtinVariable\n        }, {\n            token : \"variable\",\n            regex : variable\n        }, {\n            include : \"variables\"\n        }, {\n            token : \"support.function\",\n            regex : func\n        }, {\n            token : \"support.function\",\n            regex : fileDescriptor\n        }, {\n            token : \"string\",           // ' string\n            start : \"'\", end : \"'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : floatNumber\n        }, {\n            token : \"constant.numeric\", // integer\n            regex : integer + \"\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n        }, {\n            token : \"punctuation.operator\",\n            regex : \";\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\]]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\)\\\\}]\",\n            next : \"pop\"\n        }],\n        variables: [{\n            token : \"variable\",\n            regex : /(\\$)(\\w+)/\n        }, {\n            token : [\"variable\", \"paren.lparen\"],\n            regex : /(\\$)(\\()/,\n            push : \"start\"\n        }, {\n            token : [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n            regex : /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n            push : \"start\"\n        }, {\n            token : \"variable\",\n            regex : /\\$[*@#?\\-$!0_]/\n        }, {\n            token : [\"variable\", \"paren.lparen\"],\n            regex : /(\\$)(\\{)/,\n            push : \"start\"\n        }]\n    };\n    \n    this.normalizeRules();\n};\n\noop.inherits(ShHighlightRules, TextHighlightRules);\n\nexports.ShHighlightRules = ShHighlightRules;\n"],"names":["oop","require","BaseFoldMode","Range","FoldMode","exports","inherits","this","commentBlock","session","row","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidgetRange","foldStyle","range","indentationBlock","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","MakefileHighlightRules","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$indentWithTabs","$id","snippetFileId","TextHighlightRules","ShHighlightFile","keywordMapper","createKeywordMapper","reservedKeywords","languageConstructs","$rules","token","regex","ShHighlightRules","integer","fraction","intPart","pointFloat","exponentFloat","floatNumber","fileDescriptor","variableName","variable","builtinVariable","func","push","include","defaultToken","stateName","onMatch","value","currentState","stack","tokens","split","splitRegex","type","rules","heredoc","shift","indentedHeredoc","start","end","variables","normalizeRules"],"sourceRoot":""}