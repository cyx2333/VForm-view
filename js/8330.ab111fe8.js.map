{"version":3,"file":"js/8330.ab111fe8.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/folding/coffee.js","webpack://admin/./node_modules/ace-code/src/mode/snippets.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.commentBlock = function(session, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        range = this.commentBlock(session, row);\n        if (range)\n            return range;\n    };\n\n    // must return \"\" if there's no fold, to enable caching\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n\n        // documentation comments\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SnippetHighlightRules = function() {\n\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" +\n        \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n\n    this.$rules = {\n        \"start\" : [\n            {token:\"constant.language.escape\", regex: /\\\\[\\$}`\\\\]/},\n            {token:\"keyword\", regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\$\\\\w+\"},\n            {onMatch: function(value, state, stack) {\n                if (stack[1])\n                    stack[1]++;\n                else\n                    stack.unshift(state, 1);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"\\\\${\", next: \"varDecl\"},\n            {onMatch: function(value, state, stack) {\n                if (!stack[1])\n                    return \"text\";\n                stack[1]--;\n                if (!stack[1])\n                    stack.splice(0,2);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"}\"},\n            {token: \"doc.comment\", regex:/^\\${2}-{5,}$/}\n        ],\n        \"varDecl\" : [\n            {regex: /\\d+\\b/, token: \"constant.numeric\"},\n            {token:\"keyword\", regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\w+\"},\n            {regex: /:/, token: \"punctuation.operator\", next: \"start\"},\n            {regex: /\\//, token: \"string.regex\", next: \"regexp\"},\n            {regex: \"\", next: \"start\"}\n        ],\n        \"regexp\" : [\n            {regex: /\\\\./, token: \"escape\"},\n            {regex: /\\[/, token: \"regex.start\", next: \"charClass\"},\n            {regex: \"/\", token: \"string.regex\", next: \"format\"},\n            //{\"default\": \"string.regex\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        charClass : [\n            {regex: \"\\\\.\", token: \"escape\"},\n            {regex: \"\\\\]\", token: \"regex.end\", next: \"regexp\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        \"format\" : [\n            {regex: /\\\\[ulULE]/, token: \"keyword\"},\n            {regex: /\\$\\d+/, token: \"variable\"},\n            {regex: \"/[gim]*:?\", token: \"string.regex\", next: \"start\"},\n            // {\"default\": \"string\"},\n            {\"token\": \"string\", regex:\".\"}\n        ]\n    };\n};\noop.inherits(SnippetHighlightRules, TextHighlightRules);\n\nexports.SnippetHighlightRules = SnippetHighlightRules;\n\nvar SnippetGroupHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n            {token:\"invalid\", regex: /^ \\s*/},\n            {token:\"comment\", regex: /^#.*/},\n            {token:\"constant.language.escape\", regex: \"^regex \", next: \"regex\"},\n            {token:\"constant.language.escape\", regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"}\n        ],\n        \"regex\" : [\n            {token:\"text\", regex: \"\\\\.\"},\n            {token:\"keyword\", regex: \"/\"},\n            {token:\"empty\", regex: \"$\", next: \"start\"}\n        ]\n    };\n    this.embedRules(SnippetHighlightRules, \"sn-\", [\n        {token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n        {onMatch: function(value, state, stack) {\n            stack.splice(stack.length);\n            return this.tokenName;\n        }, tokenName: \"text\", regex: \"^(?!\\t)\", next: \"start\"}\n    ]);\n    \n};\n\noop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n\nexports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n    this.snippetFileId = \"ace/snippets/snippets\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n"],"names":["oop","require","BaseFoldMode","Range","FoldMode","exports","inherits","this","commentBlock","session","row","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidgetRange","foldStyle","range","indentationBlock","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","TextHighlightRules","SnippetHighlightRules","builtins","$rules","token","regex","onMatch","value","state","stack","unshift","tokenName","splice","charClass","SnippetGroupHighlightRules","embedRules","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id","snippetFileId"],"sourceRoot":""}