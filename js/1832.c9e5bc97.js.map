{"version":3,"file":"js/1832.c9e5bc97.js","mappings":"2GAEA,IAAIA,EAAMC,EAAQ,OACdC,EAAQD,EAAAA,OAAAA,EACRE,EAAeF,EAAAA,OAAAA,SAEfG,EAAWC,EAAQ,EAAW,WAClC,EACAL,EAAIM,SAASF,EAAUD,GAEvB,WAEII,KAAKC,mBAAqB,gCAE1BD,KAAKE,mBAAqB,SAASC,EAASC,EAAWC,GACnD,IAAIC,EAAKN,KAAKC,mBACVM,EAAOJ,EAAQK,QAAQH,GAEvBI,EAAIF,EAAKG,MAAMJ,GAEnB,GAAKG,EAAL,CAEA,IAAIE,EAAYF,EAAE,GAAK,IAEnBG,EAAcL,EAAKM,OACnBC,EAASX,EAAQY,YACjBC,EAAWX,EACXY,EAASZ,EAEb,QAASA,EAAMS,EAEX,GADAP,EAAOJ,EAAQK,QAAQH,IACnB,QAAQa,KAAKX,GAAjB,CAGA,GADAE,EAAIF,EAAKG,MAAMJ,GACXG,GAAwC,IAAnCA,EAAE,GAAGU,YAAYR,EAAW,GACjC,MAEJM,EAASZ,CALG,CAQhB,GAAIY,EAASD,EAAU,CACnB,IAAII,EAAYjB,EAAQK,QAAQS,GAAQJ,OACxC,OAAO,IAAIlB,EAAMqB,EAAUJ,EAAaK,EAAQG,EACpD,CAvBc,CAwBlB,CAEH,EAAEC,KAAKxB,EAASyB,U,wBC5CjB,IAAI7B,EAAMC,EAAQ,OACd6B,EAAW7B,EAAAA,OAAAA,KACX8B,EAAoB9B,EAAAA,OAAAA,EAEpBG,EAAWH,EAAAA,OAAAA,EAEX+B,EAAO,WACPzB,KAAK0B,eAAiBF,EACtBxB,KAAK2B,aAAe,IAAI9B,EACxBG,KAAK4B,WAAa5B,KAAK6B,iBAC3B,EACApC,EAAIM,SAAS0B,EAAMF,GAEnB,WACIvB,KAAK8B,iBAAmB,IACxB9B,KAAK+B,aAAe,KACpB/B,KAAKgC,IAAM,cACd,EAAEX,KAAKI,EAAKH,WAEbxB,EAAQ2B,KAAOA,C,wBCjBf,IAAIhC,EAAMC,EAAQ,OACduC,EAAqBvC,EAAAA,OAAAA,EAErBwC,EAAW,2CAEXV,EAAoB,WACpBxB,KAAKmC,OAAS,CACVC,MAAO,CAAC,CACJC,MAAO,qCACPC,MAAO,MACPC,MAAO,CAAC,CACJF,MAAO,+BACPC,MAAO,MACPE,KAAM,OACP,CACCC,aAAc,kCAEnB,CACCJ,MAAO,qCACPC,MAAO,MACPC,MAAO,CAAC,CACJF,MAAO,6BACPC,MAAO,MACPE,KAAM,OACP,CACCC,aAAc,gCAEnB,CACCJ,MAAO,CAAC,+BAAgC,OAAQ,uCAChDC,MAAO,oCACR,CACCD,MAAO,CAAC,oCAAqC,mCAAoC,qCACjFC,MAAO,oBACR,CACCD,MAAO,0CACPC,MAAO,IACPI,KAAM,CAAC,CACHL,MAAO,wCACPC,MAAO,IACPE,KAAM,OACP,CACCH,MAAO,2BACPC,MAAOJ,GACR,CACCO,aAAc,8BAEnB,CACCJ,MAAO,0CACPC,MAAO,IACPI,KAAM,CAAC,CACHL,MAAO,2BACPC,MAAOJ,GACR,CACCG,MAAO,wCACPC,MAAO,IACPE,KAAM,OACP,CACCC,aAAc,gCAK1BzC,KAAK2C,gBACT,EAEAnB,EAAkBoB,SAAW,CACzBC,UAAW,CAAC,MAAO,QACnBC,cAAe,MACfC,KAAM,MACNC,UAAW,cAIfvD,EAAIM,SAASyB,EAAmBS,GAEhCnC,EAAQ,EAAoB0B,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/folding/ini.js","webpack://admin/./node_modules/ace-code/src/mode/ini.js","webpack://admin/./node_modules/ace-code/src/mode/ini_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function() {\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var re = this.foldingStartMarker;\n        var line = session.getLine(row);\n        \n        var m = line.match(re);\n        \n        if (!m) return;\n        \n        var startName = m[1] + \".\";\n        \n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            if (/^\\s*$/.test(line))\n                continue;\n            m = line.match(re);\n            if (m && m[1].lastIndexOf(startName, 0) !== 0)\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar IniHighlightRules = require(\"./ini_highlight_rules\").IniHighlightRules;\n// TODO: pick appropriate fold mode\nvar FoldMode = require(\"./folding/ini\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = IniHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \";\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/ini\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","/* This file was autogenerated from tool\\tm bundles\\ini.tmbundle\\Syntaxes\\Ini.plist (uuid: ) */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar escapeRe = \"\\\\\\\\(?:[\\\\\\\\0abtrn;#=:]|x[a-fA-F\\\\d]{4})\";\n\nvar IniHighlightRules = function() {\n    this.$rules = {\n        start: [{\n            token: 'punctuation.definition.comment.ini',\n            regex: '#.*',\n            push_: [{\n                token: 'comment.line.number-sign.ini',\n                regex: '$|^',\n                next: 'pop'\n            }, {\n                defaultToken: 'comment.line.number-sign.ini'\n            }]\n        }, {\n            token: 'punctuation.definition.comment.ini',\n            regex: ';.*',\n            push_: [{\n                token: 'comment.line.semicolon.ini',\n                regex: '$|^',\n                next: 'pop'\n            }, {\n                defaultToken: 'comment.line.semicolon.ini'\n            }]\n        }, {\n            token: ['keyword.other.definition.ini', 'text', 'punctuation.separator.key-value.ini'],\n            regex: '\\\\b([a-zA-Z0-9_.-]+)\\\\b(\\\\s*)(=)'\n        }, {\n            token: ['punctuation.definition.entity.ini', 'constant.section.group-title.ini', 'punctuation.definition.entity.ini'],\n            regex: '^(\\\\[)(.*?)(\\\\])'\n        }, {\n            token: 'punctuation.definition.string.begin.ini',\n            regex: \"'\",\n            push: [{\n                token: 'punctuation.definition.string.end.ini',\n                regex: \"'\",\n                next: 'pop'\n            }, {\n                token: \"constant.language.escape\",\n                regex: escapeRe\n            }, {\n                defaultToken: 'string.quoted.single.ini'\n            }]\n        }, {\n            token: 'punctuation.definition.string.begin.ini',\n            regex: '\"',\n            push: [{\n                token: \"constant.language.escape\",\n                regex: escapeRe\n            }, {\n                token: 'punctuation.definition.string.end.ini',\n                regex: '\"',\n                next: 'pop'\n            }, {\n                defaultToken: 'string.quoted.double.ini'\n            }]\n        }]\n    };\n\n    this.normalizeRules();\n};\n\nIniHighlightRules.metaData = {\n    fileTypes: ['ini', 'conf'],\n    keyEquivalent: '^~I',\n    name: 'Ini',\n    scopeName: 'source.ini'\n};\n\n\noop.inherits(IniHighlightRules, TextHighlightRules);\n\nexports.IniHighlightRules = IniHighlightRules;\n"],"names":["oop","require","Range","BaseFoldMode","FoldMode","exports","inherits","this","foldingStartMarker","getFoldWidgetRange","session","foldStyle","row","re","line","getLine","m","match","startName","startColumn","length","maxRow","getLength","startRow","endRow","test","lastIndexOf","endColumn","call","prototype","TextMode","IniHighlightRules","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id","TextHighlightRules","escapeRe","$rules","start","token","regex","push_","next","defaultToken","push","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName"],"sourceRoot":""}