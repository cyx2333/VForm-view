{"version":3,"file":"js/5612.05c4f3bf.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/latex_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/matching_brace_outdent.js","webpack://admin/./node_modules/ace-code/src/mode/rdoc.js","webpack://admin/./node_modules/ace-code/src/mode/rdoc_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LatexHighlightRules = function() {  \n\n    this.$rules = {\n        \"start\" : [{\n            // A comment. Tex comments start with % and go to \n            // the end of the line\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            // Documentclass and usepackage\n            token : [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\n        }, {\n            // A label\n            token : [\"keyword\",\"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\n        }, {\n            // A Verbatim block\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\begin)({)(verbatim)(})\",\n            next : \"verbatim\"\n        },  {\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\begin)({)(lstlisting)(})\",\n            next : \"lstlisting\"\n        },  {\n            // A block\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:begin|end))({)([\\\\w*]*)(})\"\n        }, {\n            token : \"storage.type\",\n            regex : /\\\\verb\\b\\*?/,\n            next : [{\n                token : [\"keyword.operator\", \"string\", \"keyword.operator\"],\n                regex : \"(.)(.*?)(\\\\1|$)|\",\n                next : \"start\"\n            }]\n        }, {\n            // A tex command e.g. \\foo\n            token : \"storage.type\",\n            regex : \"\\\\\\\\[a-zA-Z]+\"\n        }, {\n            // Curly and square braces\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            // Curly and square braces\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            // Escaped character (including new line)\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\[^a-zA-Z]?\"\n        }, {\n            // An equation\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"equation\"\n        }],\n        \"equation\" : [{\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"start\"\n        }, {\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\n        }, {\n            token : \"error\", \n            regex : \"^\\\\s*$\", \n            next : \"start\" \n        }, {\n            defaultToken : \"string\"\n        }],\n        \"verbatim\": [{\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\end)({)(verbatim)(})\",\n            next : \"start\"\n        }, {\n            defaultToken : \"text\"\n        }],\n        \"lstlisting\": [{\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\end)({)(lstlisting)(})\",\n            next : \"start\"\n        }, {\n            defaultToken : \"text\"\n        }]\n    };\n    \n    this.normalizeRules();\n};\noop.inherits(LatexHighlightRules, TextHighlightRules);\n\nexports.LatexHighlightRules = LatexHighlightRules;\n","\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n","/*\n * rdoc.js\n *\n * Copyright (C) 2009-11 by RStudio, Inc.\n *\n * The Initial Developer of the Original Code is\n * Ajax.org B.V.\n * Portions created by the Initial Developer are Copyright (C) 2010\n * the Initial Developer. All Rights Reserved.\n *\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n *\n */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RDocHighlightRules = require(\"./rdoc_highlight_rules\").RDocHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function(suppressHighlighting) {\n\tthis.HighlightRules = RDocHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.getNextLineIndent = function(state, line, tab) {\n        return this.$getIndent(line);\n    };\n    this.$id = \"ace/mode/rdoc\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","/*\n * rdoc_highlight_rules.js\n *\n * Copyright (C) 2009-11 by RStudio, Inc.\n *\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n *\n */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LaTeXHighlightRules = require(\"./latex_highlight_rules\");\n\nvar RDocHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"%.*$\"\n            }, {\n                token : \"text\", // non-command\n                regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n            }, {\n                token : \"keyword\", // command\n                regex : \"\\\\\\\\(?:name|alias|method|S3method|S4method|item|code|preformatted|kbd|pkg|var|env|option|command|author|email|url|source|cite|acronym|href|code|preformatted|link|eqn|deqn|keyword|usage|examples|dontrun|dontshow|figure|if|ifelse|Sexpr|RdOpts|inputencoding|usepackage)\\\\b\",\n               next : \"nospell\"\n            }, {\n                token : \"keyword\", // command\n                regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n            }, {\n               // Obviously these are neither keywords nor operators, but\n               // labelling them as such was the easiest way to get them\n               // to be colored distinctly from regular text\n               token : \"paren.keyword.operator\",\n                regex : \"[[({]\"\n            }, {\n               // Obviously these are neither keywords nor operators, but\n               // labelling them as such was the easiest way to get them\n               // to be colored distinctly from regular text\n               token : \"paren.keyword.operator\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        // This mode is necessary to prevent spell checking, but to keep the\n        // same syntax highlighting behavior. \n        \"nospell\" : [\n           {\n               token : \"comment\",\n               regex : \"%.*$\",\n               next : \"start\"\n           }, {\n               token : \"nospell.text\", // non-command\n               regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n           }, {\n               token : \"keyword\", // command\n               regex : \"\\\\\\\\(?:name|alias|method|S3method|S4method|item|code|preformatted|kbd|pkg|var|env|option|command|author|email|url|source|cite|acronym|href|code|preformatted|link|eqn|deqn|keyword|usage|examples|dontrun|dontshow|figure|if|ifelse|Sexpr|RdOpts|inputencoding|usepackage)\\\\b\"\n           }, {\n               token : \"keyword\", // command\n               regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n               next : \"start\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"[[({]\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"[\\\\])]\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"}\",\n               next : \"start\"\n           }, {\n               token : \"nospell.text\",\n               regex : \"\\\\s+\"\n           }, {\n               token : \"nospell.text\",\n               regex : \"\\\\w+\"\n           }\n        ]\n    };\n};\n\noop.inherits(RDocHighlightRules, TextHighlightRules);\n\nexports.RDocHighlightRules = RDocHighlightRules;\n"],"names":["oop","require","TextHighlightRules","LatexHighlightRules","this","$rules","token","regex","next","defaultToken","normalizeRules","inherits","exports","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","RDocHighlightRules","Mode","suppressHighlighting","HighlightRules","$outdent","$behaviour","$defaultBehaviour","getNextLineIndent","state","tab","$id"],"sourceRoot":""}