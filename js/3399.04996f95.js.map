{"version":3,"file":"js/3399.04996f95.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/commands/incremental_search_commands.js","webpack://admin/./node_modules/ace-code/src/commands/occur_commands.js","webpack://admin/./node_modules/ace-code/src/incremental_search.js","webpack://admin/./node_modules/ace-code/src/keyboard/emacs.js","webpack://admin/./node_modules/ace-code/src/occur.js"],"sourcesContent":["var config = require(\"../config\");\nvar oop = require(\"../lib/oop\");\nvar HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\nvar occurStartCommand = require(\"./occur_commands\").occurStartCommand;\n\n// These commands can be installed in a normal key handler to start iSearch:\nexports.iSearchStartCommands = [{\n    name: \"iSearch\",\n    bindKey: {win: \"Ctrl-F\", mac: \"Command-F\"},\n    exec: function(editor, options) {\n        config.loadModule([\"core\", \"ace/incremental_search\"], function(e) {\n            var iSearch = e.iSearch = e.iSearch || new e.IncrementalSearch();\n            iSearch.activate(editor, options.backwards);\n            if (options.jumpToFirstMatch) iSearch.next(options);\n        });\n    },\n    readOnly: true\n}, {\n    name: \"iSearchBackwards\",\n    exec: function(editor, jumpToNext) { editor.execCommand('iSearch', {backwards: true}); },\n    readOnly: true\n}, {\n    name: \"iSearchAndGo\",\n    bindKey: {win: \"Ctrl-K\", mac: \"Command-G\"},\n    exec: function(editor, jumpToNext) { editor.execCommand('iSearch', {jumpToFirstMatch: true, useCurrentOrPrevSearch: true}); },\n    readOnly: true\n}, {\n    name: \"iSearchBackwardsAndGo\",\n    bindKey: {win: \"Ctrl-Shift-K\", mac: \"Command-Shift-G\"},\n    exec: function(editor) { editor.execCommand('iSearch', {jumpToFirstMatch: true, backwards: true, useCurrentOrPrevSearch: true}); },\n    readOnly: true\n}];\n\n// These commands are only available when incremental search mode is active:\nexports.iSearchCommands = [{\n    name: \"restartSearch\",\n    bindKey: {win: \"Ctrl-F\", mac: \"Command-F\"},\n    exec: function(iSearch) {\n        iSearch.cancelSearch(true);\n    }\n}, {\n    name: \"searchForward\",\n    bindKey: {win: \"Ctrl-S|Ctrl-K\", mac: \"Ctrl-S|Command-G\"},\n    exec: function(iSearch, options) {\n        options.useCurrentOrPrevSearch = true;\n        iSearch.next(options);\n    }\n}, {\n    name: \"searchBackward\",\n    bindKey: {win: \"Ctrl-R|Ctrl-Shift-K\", mac: \"Ctrl-R|Command-Shift-G\"},\n    exec: function(iSearch, options) {\n        options.useCurrentOrPrevSearch = true;\n        options.backwards = true;\n        iSearch.next(options);\n    }\n}, {\n    name: \"extendSearchTerm\",\n    exec: function(iSearch, string) {\n        iSearch.addString(string);\n    }\n}, {\n    name: \"extendSearchTermSpace\",\n    bindKey: \"space\",\n    exec: function(iSearch) { iSearch.addString(' '); }\n}, {\n    name: \"shrinkSearchTerm\",\n    bindKey: \"backspace\",\n    exec: function(iSearch) {\n        iSearch.removeChar();\n    }\n}, {\n    name: 'confirmSearch',\n    bindKey: 'return',\n    exec: function(iSearch) { iSearch.deactivate(); }\n}, {\n    name: 'cancelSearch',\n    bindKey: 'esc|Ctrl-G',\n    exec: function(iSearch) { iSearch.deactivate(true); }\n}, {\n    name: 'occurisearch',\n    bindKey: 'Ctrl-O',\n    exec: function(iSearch) {\n        var options = oop.mixin({}, iSearch.$options);\n        iSearch.deactivate();\n        occurStartCommand.exec(iSearch.$editor, options);\n    }\n}, {\n    name: \"yankNextWord\",\n    bindKey: \"Ctrl-w\",\n    exec: function(iSearch) {\n        var ed = iSearch.$editor,\n            range = ed.selection.getRangeOfMovements(function(sel) { sel.moveCursorWordRight(); }),\n            string = ed.session.getTextRange(range);\n        iSearch.addString(string);\n    }\n}, {\n    name: \"yankNextChar\",\n    bindKey: \"Ctrl-Alt-y\",\n    exec: function(iSearch) {\n        var ed = iSearch.$editor,\n            range = ed.selection.getRangeOfMovements(function(sel) { sel.moveCursorRight(); }),\n            string = ed.session.getTextRange(range);\n        iSearch.addString(string);\n    }\n}, {\n    name: 'recenterTopBottom',\n    bindKey: 'Ctrl-l',\n    exec: function(iSearch) { iSearch.$editor.execCommand('recenterTopBottom'); }\n}, {\n    name: 'selectAllMatches',\n    bindKey: 'Ctrl-space',\n    exec: function(iSearch) {\n        var ed = iSearch.$editor,\n            hl = ed.session.$isearchHighlight,\n            ranges = hl && hl.cache ? hl.cache\n                .reduce(function(ranges, ea) {\n                    return ranges.concat(ea ? ea : []); }, []) : [];\n        iSearch.deactivate(false);\n        ranges.forEach(ed.selection.addRange.bind(ed.selection));\n    }\n}, {\n    name: 'searchAsRegExp',\n    bindKey: 'Alt-r',\n    exec: function(iSearch) {\n        iSearch.convertNeedleToRegExp();\n    }\n}].map(function(cmd) {\n    cmd.readOnly = true;\n    cmd.isIncrementalSearchCommand = true;\n    cmd.scrollIntoView = \"animate-cursor\";\n    return cmd;\n});\n\nfunction IncrementalSearchKeyboardHandler(iSearch) {\n    this.$iSearch = iSearch;\n}\n\noop.inherits(IncrementalSearchKeyboardHandler, HashHandler);\n\n(function() {\n    /**\n     * @param editor\n     * @this {IncrementalSearchKeyboardHandler & this & {$commandExecHandler}}\n     */\n    this.attach = function(editor) {\n        var iSearch = this.$iSearch;\n        HashHandler.call(this, exports.iSearchCommands, editor.commands.platform);\n        this.$commandExecHandler = editor.commands.on('exec', function(e) {\n            if (!e.command.isIncrementalSearchCommand)\n                return iSearch.deactivate();\n            e.stopPropagation();\n            e.preventDefault();\n            var scrollTop = editor.session.getScrollTop();\n            var result = e.command.exec(iSearch, e.args || {});\n            editor.renderer.scrollCursorIntoView(null, 0.5);\n            editor.renderer.animateScrolling(scrollTop);\n            return result;\n        });\n    };\n\n    /**\n     * @this {IncrementalSearchKeyboardHandler & this & {$commandExecHandler}}\n     * @param editor\n     */\n    this.detach = function(editor) {\n        if (!this.$commandExecHandler) return;\n        editor.commands.off('exec', this.$commandExecHandler);\n        delete this.$commandExecHandler;\n    };\n\n    var handleKeyboard$super = this.handleKeyboard;\n    /**\n     * @param data\n     * @param hashId\n     * @param key\n     * @param keyCode\n     * @this {IncrementalSearchKeyboardHandler & import(\"../keyboard/hash_handler\").HashHandler}\n     */\n    this.handleKeyboard = function(data, hashId, key, keyCode) {\n        if (((hashId === 1/*ctrl*/ || hashId === 8/*command*/) && key === 'v')\n         || (hashId === 1/*ctrl*/ && key === 'y')) return null;\n        // @ts-ignore\n        var cmd = handleKeyboard$super.call(this, data, hashId, key, keyCode);\n        if (cmd && cmd.command) { return cmd; }\n        if (hashId == -1) {\n            var extendCmd = this.commands.extendSearchTerm;\n            if (extendCmd) { return {command: extendCmd, args: key}; }\n        }\n        return false;\n    };\n\n}).call(IncrementalSearchKeyboardHandler.prototype);\n\n\nexports.IncrementalSearchKeyboardHandler = IncrementalSearchKeyboardHandler;\n","var config = require(\"../config\"),\n    Occur = require(\"../occur\").Occur;\n\n// These commands can be installed in a normal command handler to start occur:\nvar occurStartCommand = {\n    name: \"occur\",\n    exec: function(editor, options) {\n        var alreadyInOccur = !!editor.session.$occur;\n        var occurSessionActive = new Occur().enter(editor, options);\n        if (occurSessionActive && !alreadyInOccur)\n            OccurKeyboardHandler.installIn(editor);\n    },\n    readOnly: true\n};\n\nvar occurCommands = [{\n    name: \"occurexit\",\n    bindKey: 'esc|Ctrl-G',\n    exec: function(editor) {\n        var occur = editor.session.$occur;\n        if (!occur) return;\n        occur.exit(editor, {});\n        if (!editor.session.$occur) OccurKeyboardHandler.uninstallFrom(editor);\n    },\n    readOnly: true\n}, {\n    name: \"occuraccept\",\n    bindKey: 'enter',\n    exec: function(editor) {\n        var occur = editor.session.$occur;\n        if (!occur) return;\n        occur.exit(editor, {translatePosition: true});\n        if (!editor.session.$occur) OccurKeyboardHandler.uninstallFrom(editor);\n    },\n    readOnly: true\n}];\n\nvar HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\nvar oop = require(\"../lib/oop\");\n\n\nfunction OccurKeyboardHandler() {}\n\noop.inherits(OccurKeyboardHandler, HashHandler);\n\n(function() {\n\n    this.isOccurHandler = true;\n\n    this.attach = function(editor) {\n        HashHandler.call(this, occurCommands, editor.commands.platform);\n        this.$editor = editor;\n    };\n\n    var handleKeyboard$super = this.handleKeyboard;\n    this.handleKeyboard = function(data, hashId, key, keyCode) {\n        // @ts-ignore\n        var cmd = handleKeyboard$super.call(this, data, hashId, key, keyCode);\n        return (cmd && cmd.command) ? cmd : undefined;\n    };\n\n}).call(OccurKeyboardHandler.prototype);\n\nOccurKeyboardHandler.installIn = function(editor) {\n    var handler = new this();\n    editor.keyBinding.addKeyboardHandler(handler);\n    editor.commands.addCommands(occurCommands);\n};\n\nOccurKeyboardHandler.uninstallFrom = function(editor) {\n    editor.commands.removeCommands(occurCommands);\n    var handler = editor.getKeyboardHandler();\n    if (handler.isOccurHandler)\n        editor.keyBinding.removeKeyboardHandler(handler);\n};\n\nexports.occurStartCommand = occurStartCommand;\n","\"use strict\";\n\nvar Range = require(\"./range\").Range;\nvar Search = require(\"./search\").Search;\nvar SearchHighlight = require(\"./search_highlight\").SearchHighlight;\nvar iSearchCommandModule = require(\"./commands/incremental_search_commands\");\nvar ISearchKbd = iSearchCommandModule.IncrementalSearchKeyboardHandler;\n\n// regexp handling\n\nfunction isRegExp(obj) {\n    return obj instanceof RegExp;\n}\n\n/**\n * @param {RegExp} re\n */\nfunction regExpToObject(re) {\n    var string = String(re),\n        start = string.indexOf('/'),\n        flagStart = string.lastIndexOf('/');\n    return {\n        expression: string.slice(start+1, flagStart),\n        flags: string.slice(flagStart+1)\n    };\n}\n\n/**\n * @param {string} string\n * @param {string} flags\n * @return {RegExp|string}\n */\nfunction stringToRegExp(string, flags) {\n    try {\n        return new RegExp(string, flags);\n    } catch (e) { return string; }\n}\n\nfunction objectToRegExp(obj) {\n    return stringToRegExp(obj.expression, obj.flags);\n}\n\n/**\n * Implements immediate searching while the user is typing. When incremental\n * search is activated, keystrokes into the editor will be used for composing\n * a search term. Immediately after every keystroke the search is updated:\n * - so-far-matching characters are highlighted\n * - the cursor is moved to the next match\n *\n **/\nclass IncrementalSearch extends Search {\n    /**\n     * Creates a new `IncrementalSearch` object.\n     **/\n    constructor() {\n        super();\n        this.$options = {wrap: false, skipCurrent: false};\n        this.$keyboardHandler = new ISearchKbd(this);\n    }\n\n    /**\n     * @param {boolean} backwards\n     */\n    activate(editor, backwards) {\n        this.$editor = editor;\n        this.$startPos = this.$currentPos = editor.getCursorPosition();\n        this.$options.needle = '';\n        this.$options.backwards = backwards;\n        editor.keyBinding.addKeyboardHandler(this.$keyboardHandler);\n        // we need to completely intercept paste, just registering an event handler does not work\n        this.$originalEditorOnPaste = editor.onPaste;\n        editor.onPaste = this.onPaste.bind(this);\n        this.$mousedownHandler = editor.on('mousedown', this.onMouseDown.bind(this));\n        this.selectionFix(editor);\n        this.statusMessage(true);\n    }\n\n    /**\n     * @param {boolean} [reset]\n     */\n    deactivate(reset) {\n        this.cancelSearch(reset);\n        var editor = this.$editor;\n        editor.keyBinding.removeKeyboardHandler(this.$keyboardHandler);\n        if (this.$mousedownHandler) {\n            editor.off('mousedown', this.$mousedownHandler);\n            delete this.$mousedownHandler;\n        }\n        editor.onPaste = this.$originalEditorOnPaste;\n        this.message('');\n    }\n\n    /**\n     * @param {Editor} editor\n     */\n    selectionFix(editor) {\n        // Fix selection bug: When clicked inside the editor\n        // editor.selection.$isEmpty is false even if the mouse click did not\n        // open a selection. This is interpreted by the move commands to\n        // extend the selection. To only extend the selection when there is\n        // one, we clear it here\n        if (editor.selection.isEmpty() && !editor.session.$emacsMark) {\n            editor.clearSelection();\n        }\n    }\n\n    /**\n     * @param {RegExp} regexp\n     */\n    highlight(regexp) {\n        var sess = this.$editor.session,\n            hl = sess.$isearchHighlight = sess.$isearchHighlight || sess.addDynamicMarker(\n                new SearchHighlight(null, \"ace_isearch-result\", \"text\"));\n        hl.setRegexp(regexp);\n        sess._emit(\"changeBackMarker\"); // force highlight layer redraw\n    }\n\n    /**\n     * @param {boolean} [reset]\n     */\n    cancelSearch(reset) {\n        var e = this.$editor;\n        this.$prevNeedle = this.$options.needle;\n        this.$options.needle = '';\n        if (reset) {\n            e.moveCursorToPosition(this.$startPos);\n            this.$currentPos = this.$startPos;\n        } else {\n            e.pushEmacsMark && e.pushEmacsMark(this.$startPos, false);\n        }\n        this.highlight(null);\n        return Range.fromPoints(this.$currentPos, this.$currentPos);\n    }\n\n    /**\n     * @param {boolean} moveToNext\n     * @param {Function} needleUpdateFunc\n     */\n    highlightAndFindWithNeedle(moveToNext, needleUpdateFunc) {\n        if (!this.$editor) return null;\n        var options = this.$options;\n\n        // get search term\n        if (needleUpdateFunc) {\n            options.needle = needleUpdateFunc.call(this, options.needle || '') || '';\n        }\n        if (options.needle.length === 0) {\n            this.statusMessage(true);\n            return this.cancelSearch(true);\n        }\n\n        // try to find the next occurrence and enable  highlighting marker\n        options.start = this.$currentPos;\n        var session = this.$editor.session,\n            found = this.find(session),\n            shouldSelect = this.$editor.emacsMark ?\n                !!this.$editor.emacsMark() : !this.$editor.selection.isEmpty();\n        if (found) {\n            if (options.backwards) found = Range.fromPoints(found.end, found.start);\n            this.$editor.selection.setRange(Range.fromPoints(shouldSelect ? this.$startPos : found.end, found.end));\n            if (moveToNext) this.$currentPos = found.end;\n            // highlight after cursor move, so selection works properly\n            this.highlight(options.re);\n        }\n\n        this.statusMessage(found);\n\n        return found;\n    }\n\n    /**\n     * @param {string} s\n     */\n    addString(s) {\n        return this.highlightAndFindWithNeedle(false, function(needle) {\n            if (!isRegExp(needle))\n              return needle + s;\n            var reObj = regExpToObject(needle);\n            reObj.expression += s;\n            return objectToRegExp(reObj);\n        });\n    }\n\n    /**\n     * @param {any} c\n     */\n    removeChar(c) {\n        return this.highlightAndFindWithNeedle(false, function(needle) {\n            if (!isRegExp(needle))\n              return needle.substring(0, needle.length-1);\n            var reObj = regExpToObject(needle);\n            reObj.expression = reObj.expression.substring(0, reObj.expression.length-1);\n            return objectToRegExp(reObj);\n        });\n    }\n\n    next(options) {\n        // try to find the next occurrence of whatever we have searched for\n        // earlier.\n        // options = {[backwards: BOOL], [useCurrentOrPrevSearch: BOOL]}\n        options = options || {};\n        this.$options.backwards = !!options.backwards;\n        this.$currentPos = this.$editor.getCursorPosition();\n        return this.highlightAndFindWithNeedle(true, function(needle) {\n            return options.useCurrentOrPrevSearch && needle.length === 0 ?\n                this.$prevNeedle || '' : needle;\n        });\n    }\n\n    /**\n     * @internal\n     */\n    onMouseDown(evt) {\n        // when mouse interaction happens then we quit incremental search\n        this.deactivate();\n        return true;\n    }\n\n    /**\n     * @param {string} text\n     * @internal\n     */\n    onPaste(text) {\n        this.addString(text);\n    }\n\n    convertNeedleToRegExp() {\n        return this.highlightAndFindWithNeedle(false, function(needle) {\n            return isRegExp(needle) ? needle : stringToRegExp(needle, 'ig');\n        });\n    }\n\n    convertNeedleToString() {\n        return this.highlightAndFindWithNeedle(false, function(needle) {\n            return isRegExp(needle) ? regExpToObject(needle).expression : needle;\n        });\n    }\n\n    statusMessage(found) {\n        var options = this.$options, msg = '';\n        msg += options.backwards ? 'reverse-' : '';\n        msg += 'isearch: ' + options.needle;\n        msg += found ? '' : ' (not found)';\n        this.message(msg);\n    }\n\n    message(msg) {\n        if (this.$editor.showCommandLine) {\n            this.$editor.showCommandLine(msg);\n            this.$editor.focus();\n        }\n    }\n\n}\n\nexports.IncrementalSearch = IncrementalSearch;\n\n\n/**\n *\n * Config settings for enabling/disabling [[IncrementalSearch `IncrementalSearch`]].\n *\n **/\n\nvar dom = require('./lib/dom');\ndom.importCssString(`\n.ace_marker-layer .ace_isearch-result {\n  position: absolute;\n  z-index: 6;\n  box-sizing: border-box;\n}\ndiv.ace_isearch-result {\n  border-radius: 4px;\n  background-color: rgba(255, 200, 0, 0.5);\n  box-shadow: 0 0 4px rgb(255, 200, 0);\n}\n.ace_dark div.ace_isearch-result {\n  background-color: rgb(100, 110, 160);\n  box-shadow: 0 0 4px rgb(80, 90, 140);\n}`, \"incremental-search-highlighting\", false);\n\n// support for default keyboard handler\nvar commands = require(\"./commands/command_manager\");\n(function() {\n    this.setupIncrementalSearch = function(editor, val) {\n        if (this.usesIncrementalSearch == val) return;\n        this.usesIncrementalSearch = val;\n        var iSearchCommands = iSearchCommandModule.iSearchStartCommands;\n        var method = val ? 'addCommands' : 'removeCommands';\n        this[method](iSearchCommands);\n    };\n}).call(commands.CommandManager.prototype);\n\n// incremental search config option\nvar Editor = require(\"./editor\").Editor;\nrequire(\"./config\").defineOptions(Editor.prototype, \"editor\", {\n    useIncrementalSearch: {\n        set: function(val) {\n            this.keyBinding.$handlers.forEach(function(handler) {\n                if (handler.setupIncrementalSearch) {\n                    handler.setupIncrementalSearch(this, val);\n                }\n            });\n            this._emit('incrementalSearchSettingChanged', {isEnabled: val});\n        }\n    }\n});\n","\"use strict\";\n\nvar dom = require(\"../lib/dom\");\nrequire(\"../incremental_search\");\nvar iSearchCommandModule = require(\"../commands/incremental_search_commands\");\n\n\nvar HashHandler = require(\"./hash_handler\").HashHandler;\nexports.handler = new HashHandler();\n\nexports.handler.isEmacs = true;\nexports.handler.$id = \"ace/keyboard/emacs\";\n\n\ndom.importCssString(`\n.emacs-mode .ace_cursor{\n    border: 1px rgba(50,250,50,0.8) solid!important;\n    box-sizing: border-box!important;\n    background-color: rgba(0,250,0,0.9);\n    opacity: 0.5;\n}\n.emacs-mode .ace_hidden-cursors .ace_cursor{\n    opacity: 1;\n    background-color: transparent;\n}\n.emacs-mode .ace_overwrite-cursors .ace_cursor {\n    opacity: 1;\n    background-color: transparent;\n    border-width: 0 0 2px 2px !important;\n}\n.emacs-mode .ace_text-layer {\n    z-index: 4\n}\n.emacs-mode .ace_cursor-layer {\n    z-index: 2\n}`, 'emacsMode'\n);\nvar $formerLongWords;\nvar $formerLineStart;\n\nexports.handler.attach = function(editor) {\n    // in emacs, gotowordleft/right should not count a space as a word..\n    $formerLongWords = editor.session.$selectLongWords;\n    editor.session.$selectLongWords = true;\n    // CTRL-A should go to actual beginning of line\n    $formerLineStart = editor.session.$useEmacsStyleLineStart;\n    editor.session.$useEmacsStyleLineStart = true;\n\n    editor.session.$emacsMark = null; // the active mark\n    editor.session.$emacsMarkRing = editor.session.$emacsMarkRing || [];\n\n    editor.emacsMark = function() {\n        return this.session.$emacsMark;\n    };\n\n    editor.setEmacsMark = function(p) {\n        // to deactivate pass in a falsy value\n        this.session.$emacsMark = p;\n    };\n\n    editor.pushEmacsMark = function(p, activate) {\n        var prevMark = this.session.$emacsMark;\n        if (prevMark)\n            pushUnique(this.session.$emacsMarkRing, prevMark);\n        if (!p || activate) this.setEmacsMark(p);\n        else pushUnique(this.session.$emacsMarkRing, p);\n    };\n\n    editor.popEmacsMark = function() {\n        var mark = this.emacsMark();\n        if (mark) { this.setEmacsMark(null); return mark; }\n        return this.session.$emacsMarkRing.pop();\n    };\n\n    editor.getLastEmacsMark = function(p) {\n        return this.session.$emacsMark || this.session.$emacsMarkRing.slice(-1)[0];\n    };\n\n    editor.emacsMarkForSelection = function(replacement) {\n        // find the mark in $emacsMarkRing corresponding to the current\n        // selection\n        var sel = this.selection,\n            multiRangeLength = this.multiSelect ?\n                this.multiSelect.getAllRanges().length : 1,\n            selIndex = sel.index || 0,\n            markRing = this.session.$emacsMarkRing,\n            markIndex = markRing.length - (multiRangeLength - selIndex),\n            lastMark = markRing[markIndex] || sel.anchor;\n        if (replacement) {\n            markRing.splice(markIndex, 1,\n                \"row\" in replacement && \"column\" in replacement ?\n                    replacement : undefined);\n        }\n        return lastMark;\n    };\n\n    editor.on(\"click\", $resetMarkMode);\n    editor.on(\"changeSession\", $kbSessionChange);\n    editor.renderer.$blockCursor = true;\n    editor.setStyle(\"emacs-mode\");\n    editor.commands.addCommands(commands);\n    exports.handler.platform = editor.commands.platform;\n    editor.$emacsModeHandler = this;\n    editor.on('copy', this.onCopy);\n    editor.on('paste', this.onPaste);\n};\n\nfunction pushUnique(ring, mark) {\n    var last = ring[ring.length - 1];\n    if (last && last.row === mark.row && last.column === mark.column) {\n        return;\n    }\n    ring.push(mark);\n}\n\nexports.handler.detach = function(editor) {\n    editor.renderer.$blockCursor = false;\n    editor.session.$selectLongWords = $formerLongWords;\n    editor.session.$useEmacsStyleLineStart = $formerLineStart;\n    editor.off(\"click\", $resetMarkMode);\n    editor.off(\"changeSession\", $kbSessionChange);\n    editor.unsetStyle(\"emacs-mode\");\n    editor.commands.removeCommands(commands);\n    editor.off('copy', this.onCopy);\n    editor.off('paste', this.onPaste);\n    editor.$emacsModeHandler = null;\n};\n\nvar $kbSessionChange = function(e) {\n    if (e.oldSession) {\n        e.oldSession.$selectLongWords = $formerLongWords;\n        e.oldSession.$useEmacsStyleLineStart = $formerLineStart;\n    }\n\n    $formerLongWords = e.session.$selectLongWords;\n    e.session.$selectLongWords = true;\n    $formerLineStart = e.session.$useEmacsStyleLineStart;\n    e.session.$useEmacsStyleLineStart = true;\n\n    if (!e.session.hasOwnProperty('$emacsMark'))\n        e.session.$emacsMark = null;\n    if (!e.session.hasOwnProperty('$emacsMarkRing'))\n        e.session.$emacsMarkRing = [];\n};\n\nvar $resetMarkMode = function(e) {\n    e.editor.session.$emacsMark = null;\n};\n\nvar keys = require(\"../lib/keys\").KEY_MODS;\nvar eMods = {C: \"ctrl\", S: \"shift\", M: \"alt\", CMD: \"command\"};\nvar combinations = [\"C-S-M-CMD\",\n                    \"S-M-CMD\", \"C-M-CMD\", \"C-S-CMD\", \"C-S-M\",\n                    \"M-CMD\", \"S-CMD\", \"S-M\", \"C-CMD\", \"C-M\", \"C-S\",\n                    \"CMD\", \"M\", \"S\", \"C\"];\ncombinations.forEach(function(c) {\n    var hashId = 0;\n    c.split(\"-\").forEach(function(c) {\n        hashId = hashId | keys[eMods[c]];\n    });\n    eMods[hashId] = c.toLowerCase() + \"-\";\n});\n\nexports.handler.onCopy = function(e, editor) {\n    if (editor.$handlesEmacsOnCopy) return;\n    editor.$handlesEmacsOnCopy = true;\n    exports.handler.commands.killRingSave.exec(editor);\n    editor.$handlesEmacsOnCopy = false;\n};\n\nexports.handler.onPaste = function(e, editor) {\n    editor.pushEmacsMark(editor.getCursorPosition());\n};\n\nexports.handler.bindKey = function(key, command) {\n    if (typeof key == \"object\")\n        key = key[this.platform];\n    if (!key)\n        return;\n\n    var ckb = this.commandKeyBinding;\n    key.split(\"|\").forEach(function(keyPart) {\n        keyPart = keyPart.toLowerCase();\n        ckb[keyPart] = command;\n        // register all partial key combos as null commands\n        // to be able to activate key combos with arbitrary length\n        // Example: if keyPart is \"C-c C-l t\" then \"C-c C-l t\" will\n        // get command assigned and \"C-c\" and \"C-c C-l\" will get\n        // a null command assigned in this.commandKeyBinding. For\n        // the lookup logic see handleKeyboard()\n        var keyParts = keyPart.split(\" \").slice(0,-1);\n        keyParts.reduce(function(keyMapKeys, keyPart, i) {\n            var prefix = keyMapKeys[i-1] ? keyMapKeys[i-1] + ' ' : '';\n            return keyMapKeys.concat([prefix + keyPart]);\n        }, []).forEach(function(keyPart) {\n            if (!ckb[keyPart]) ckb[keyPart] = \"null\";\n        });\n    }, this);\n};\n\nexports.handler.getStatusText = function(editor, data) {\n  var str = \"\";\n  if (data.count)\n    str += data.count;\n  if (data.keyChain)\n    str += \" \" + data.keyChain;\n  return str;\n};\n\nexports.handler.handleKeyboard = function(data, hashId, key, keyCode) {\n    // if keyCode == -1 a non-printable key was pressed, such as just\n    // control. Handling those is currently not supported in this handler\n    if (keyCode === -1) return undefined;\n\n    var editor = data.editor;\n    editor._signal(\"changeStatus\");\n    // insertstring data.count times\n    if (hashId == -1) {\n        editor.pushEmacsMark();\n        if (data.count) {\n            var str = new Array(data.count + 1).join(key);\n            data.count = null;\n            return {command: \"insertstring\", args: str};\n        }\n    }\n\n    var modifier = eMods[hashId];\n\n    // CTRL + number / universalArgument for setting data.count\n    if (modifier == \"c-\" || data.count) {\n        var count = parseInt(key[key.length - 1]);\n        if (typeof count === 'number' && !isNaN(count)) {\n            data.count = Math.max(data.count, 0) || 0;\n            data.count = 10 * data.count + count;\n            return {command: \"null\"};\n        }\n    }\n\n    // this.commandKeyBinding maps key specs like \"c-p\" (for CTRL + P) to\n    // command objects, for lookup key needs to include the modifier\n    if (modifier) key = modifier + key;\n\n    // Key combos like CTRL+X H build up the data.keyChain\n    if (data.keyChain) key = data.keyChain += \" \" + key;\n\n    // Key combo prefixes get stored as \"null\" (String!) in this\n    // this.commandKeyBinding. When encountered no command is invoked but we\n    // buld up data.keyChain\n    var command = this.commandKeyBinding[key];\n    data.keyChain = command == \"null\" ? key : \"\";\n\n    // there really is no command\n    if (!command) return undefined;\n\n    // we pass b/c of key combo or universalArgument\n    if (command === \"null\") return {command: \"null\"};\n\n    if (command === \"universalArgument\") {\n        // if no number pressed emacs repeats action 4 times.\n        // minus sign is needed to allow next keypress to replace it\n        data.count = -4;\n        return {command: \"null\"};\n    }\n\n    // lookup command\n    // TODO extract special handling of markmode\n    // TODO special case command.command is really unnecessary, remove\n    var args;\n    if (typeof command !== \"string\") {\n        args = command.args;\n        if (command.command) command = command.command;\n        if (command === \"goorselect\") {\n            command = editor.emacsMark() ? args[1] : args[0];\n            args = null;\n        }\n    }\n\n    if (typeof command === \"string\") {\n        if (command === \"insertstring\" ||\n            command === \"splitline\" ||\n            command === \"togglecomment\") {\n            editor.pushEmacsMark();\n        }\n        command = this.commands[command] || editor.commands.commands[command];\n        if (!command) return undefined;\n    }\n\n    if (!command.readOnly && !command.isYank)\n        data.lastCommand = null;\n\n    if (!command.readOnly && editor.emacsMark())\n        editor.setEmacsMark(null);\n        \n    if (data.count) {\n        var count = data.count;\n        data.count = 0;\n        if (!command || !command.handlesCount) {\n            return {\n                args: args,\n                command: {\n                    exec: function(editor, args) {\n                        for (var i = 0; i < count; i++)\n                            command.exec(editor, args);\n                    },\n                    multiSelectAction: command.multiSelectAction\n                }\n            };\n        } else {\n            if (!args) args = {};\n            if (typeof args === 'object') args.count = count;\n        }\n    }\n\n    return {command: command, args: args};\n};\n\nexports.emacsKeys = {\n    // movement\n    \"Up|C-p\"      : {command: \"goorselect\", args: [\"golineup\",\"selectup\"]},\n    \"Down|C-n\"    : {command: \"goorselect\", args: [\"golinedown\",\"selectdown\"]},\n    \"Left|C-b\"    : {command: \"goorselect\", args: [\"gotoleft\",\"selectleft\"]},\n    \"Right|C-f\"   : {command: \"goorselect\", args: [\"gotoright\",\"selectright\"]},\n    \"C-Left|M-b\"  : {command: \"goorselect\", args: [\"gotowordleft\",\"selectwordleft\"]},\n    \"C-Right|M-f\" : {command: \"goorselect\", args: [\"gotowordright\",\"selectwordright\"]},\n    \"Home|C-a\"    : {command: \"goorselect\", args: [\"gotolinestart\",\"selecttolinestart\"]},\n    \"End|C-e\"     : {command: \"goorselect\", args: [\"gotolineend\",\"selecttolineend\"]},\n    \"C-Home|S-M-,\": {command: \"goorselect\", args: [\"gotostart\",\"selecttostart\"]},\n    \"C-End|S-M-.\" : {command: \"goorselect\", args: [\"gotoend\",\"selecttoend\"]},\n\n    // selection\n    \"S-Up|S-C-p\"      : \"selectup\",\n    \"S-Down|S-C-n\"    : \"selectdown\",\n    \"S-Left|S-C-b\"    : \"selectleft\",\n    \"S-Right|S-C-f\"   : \"selectright\",\n    \"S-C-Left|S-M-b\"  : \"selectwordleft\",\n    \"S-C-Right|S-M-f\" : \"selectwordright\",\n    \"S-Home|S-C-a\"    : \"selecttolinestart\",\n    \"S-End|S-C-e\"     : \"selecttolineend\",\n    \"S-C-Home\"        : \"selecttostart\",\n    \"S-C-End\"         : \"selecttoend\",\n\n    \"C-l\" : \"recenterTopBottom\",\n    \"M-s\" : \"centerselection\",\n    \"M-g\": \"gotoline\",\n    \"C-x C-p\": \"selectall\",\n\n    // todo fix these\n    \"C-Down\": {command: \"goorselect\", args: [\"gotopagedown\",\"selectpagedown\"]},\n    \"C-Up\": {command: \"goorselect\", args: [\"gotopageup\",\"selectpageup\"]},\n    \"PageDown|C-v\": {command: \"goorselect\", args: [\"gotopagedown\",\"selectpagedown\"]},\n    \"PageUp|M-v\": {command: \"goorselect\", args: [\"gotopageup\",\"selectpageup\"]},\n    \"S-C-Down\": \"selectpagedown\",\n    \"S-C-Up\": \"selectpageup\",\n\n    \"C-s\": \"iSearch\",\n    \"C-r\": \"iSearchBackwards\",\n\n    \"M-C-s\": \"findnext\",\n    \"M-C-r\": \"findprevious\",\n    \"S-M-5\": \"replace\",\n\n    // basic editing\n    \"Backspace\": \"backspace\",\n    \"Delete|C-d\": \"del\",\n    \"Return|C-m\": {command: \"insertstring\", args: \"\\n\"}, // \"newline\"\n    \"C-o\": \"splitline\",\n\n    \"M-d|C-Delete\": {command: \"killWord\", args: \"right\"},\n    \"C-Backspace|M-Backspace|M-Delete\": {command: \"killWord\", args: \"left\"},\n    \"C-k\": \"killLine\",\n\n    \"C-y|S-Delete\": \"yank\",\n    \"M-y\": \"yankRotate\",\n    \"C-g\": \"keyboardQuit\",\n\n    \"C-w|C-S-W\": \"killRegion\",\n    \"M-w\": \"killRingSave\",\n    \"C-Space\": \"setMark\",\n    \"C-x C-x\": \"exchangePointAndMark\",\n\n    \"C-t\": \"transposeletters\",\n    \"M-u\": \"touppercase\",    // Doesn't work\n    \"M-l\": \"tolowercase\",\n    \"M-/\": \"autocomplete\",   // Doesn't work\n    \"C-u\": \"universalArgument\",\n\n    \"M-;\": \"togglecomment\",\n\n    \"C-/|C-x u|S-C--|C-z\": \"undo\",\n    \"S-C-/|S-C-x u|C--|S-C-z\": \"redo\", // infinite undo?\n    // vertical editing\n    \"C-x r\":  \"selectRectangularRegion\",\n    \"M-x\": {command: \"focusCommandLine\", args: \"M-x \"}\n    // todo\n    // \"C-x C-t\" \"M-t\" \"M-c\" \"F11\" \"C-M- \"M-q\"\n};\n\n\nexports.handler.bindKeys(exports.emacsKeys);\n\nexports.handler.addCommands({\n    recenterTopBottom: function(editor) {\n        var renderer = editor.renderer;\n        var pos = renderer.$cursorLayer.getPixelPosition();\n        var h = renderer.$size.scrollerHeight - renderer.lineHeight;\n        var scrollTop = renderer.scrollTop;\n        if (Math.abs(pos.top - scrollTop) < 2) {\n            scrollTop = pos.top - h;\n        } else if (Math.abs(pos.top - scrollTop - h * 0.5) < 2) {\n            scrollTop = pos.top;\n        } else {\n            scrollTop = pos.top - h * 0.5;\n        }\n        editor.session.setScrollTop(scrollTop);\n    },\n    selectRectangularRegion:  function(editor) {\n        editor.multiSelect.toggleBlockSelection();\n    },\n    setMark:  {\n        exec: function(editor, args) {\n            // Sets mark-mode and clears current selection.\n            // When mark is set, keyboard cursor movement commands become\n            // selection modification commands. That is,\n            // \"goto\" commands become \"select\" commands.\n            // Any insertion or mouse click resets mark-mode.\n            // setMark twice in a row at the same place resets markmode.\n            // in multi select mode, ea selection is handled individually\n\n            if (args && args.count) {\n                if (editor.inMultiSelectMode) editor.forEachSelection(moveToMark);\n                else moveToMark();\n                moveToMark();\n                return;\n            }\n\n            var mark = editor.emacsMark(),\n                ranges = editor.selection.getAllRanges(),\n                rangePositions = ranges.map(function(r) { return {row: r.start.row, column: r.start.column}; }),\n                transientMarkModeActive = true,\n                hasNoSelection = ranges.every(function(range) { return range.isEmpty(); });\n            // if transientMarkModeActive then mark behavior is a little\n            // different. Deactivate the mark when setMark is run with active\n            // mark\n            if (transientMarkModeActive && (mark || !hasNoSelection)) {\n                if (editor.inMultiSelectMode) editor.forEachSelection({exec: editor.clearSelection.bind(editor)});\n                else editor.clearSelection();\n                if (mark) editor.pushEmacsMark(null);\n                return;\n            }\n\n            if (!mark) {\n                rangePositions.forEach(function(pos) { editor.pushEmacsMark(pos); });\n                editor.setEmacsMark(rangePositions[rangePositions.length-1]);\n                return;\n            }\n\n            // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n            function moveToMark() {\n                var mark = editor.popEmacsMark();\n                mark && editor.moveCursorToPosition(mark);\n            }\n\n        },\n        readOnly: true,\n        handlesCount: true\n    },\n    exchangePointAndMark: {\n        exec: function exchangePointAndMark$exec(editor, args) {\n            var sel = editor.selection;\n            if (!args.count && !sel.isEmpty()) { // just invert selection\n                sel.setSelectionRange(sel.getRange(), !sel.isBackwards());\n                return;\n            }\n\n            if (args.count) { // replace mark and point\n                var pos = {row: sel.lead.row, column: sel.lead.column};\n                sel.clearSelection();\n                sel.moveCursorToPosition(editor.emacsMarkForSelection(pos));\n            } else { // create selection to last mark\n                sel.selectToPosition(editor.emacsMarkForSelection());\n            }\n        },\n        readOnly: true,\n        handlesCount: true,\n        multiSelectAction: \"forEach\"\n    },\n    killWord: {\n        exec: function(editor, dir) {\n            editor.clearSelection();\n            if (dir == \"left\")\n                editor.selection.selectWordLeft();\n            else\n                editor.selection.selectWordRight();\n\n            var range = editor.getSelectionRange();\n            var text = editor.session.getTextRange(range);\n            exports.killRing.add(text);\n\n            editor.session.remove(range);\n            editor.clearSelection();\n        },\n        multiSelectAction: \"forEach\"\n    },\n    killLine: function(editor) {\n        editor.pushEmacsMark(null);\n        // don't delete the selection if it's before the cursor\n        editor.clearSelection();\n        var range = editor.getSelectionRange();\n        var line = editor.session.getLine(range.start.row);\n        range.end.column = line.length;\n        line = line.substr(range.start.column);\n        \n        var foldLine = editor.session.getFoldLine(range.start.row);\n        if (foldLine && range.end.row != foldLine.end.row) {\n            range.end.row = foldLine.end.row;\n            line = \"x\";\n        }\n        // remove EOL if only whitespace remains after the cursor\n        if (/^\\s*$/.test(line)) {\n            range.end.row++;\n            line = editor.session.getLine(range.end.row);\n            range.end.column = /^\\s*$/.test(line) ? line.length : 0;\n        }\n        var text = editor.session.getTextRange(range);\n        if (editor.prevOp.command == this)\n            exports.killRing.append(text);\n        else\n            exports.killRing.add(text);\n\n        editor.session.remove(range);\n        editor.clearSelection();\n    },\n    yank: function(editor) {\n        editor.onPaste(exports.killRing.get() || '');\n        editor.keyBinding.$data.lastCommand = \"yank\";\n    },\n    yankRotate: function(editor) {\n        if (editor.keyBinding.$data.lastCommand != \"yank\")\n            return;\n        editor.undo();\n        editor.session.$emacsMarkRing.pop(); // also undo recording mark\n        editor.onPaste(exports.killRing.rotate());\n        editor.keyBinding.$data.lastCommand = \"yank\";\n    },\n    killRegion: {\n        exec: function(editor) {\n            exports.killRing.add(editor.getCopyText());\n            editor.commands.byName.cut.exec(editor);\n            editor.setEmacsMark(null);\n        },\n        readOnly: true,\n        multiSelectAction: \"forEach\"\n    },\n    killRingSave: {\n        exec: function(editor) {\n            // copy text and deselect. will save marks for starts of the\n            // selection(s)\n\n            editor.$handlesEmacsOnCopy = true;\n            var marks = editor.session.$emacsMarkRing.slice(),\n                deselectedMarks = [];\n            exports.killRing.add(editor.getCopyText());\n\n            setTimeout(function() {\n                function deselect() {\n                    var sel = editor.selection, range = sel.getRange(),\n                        pos = sel.isBackwards() ? range.end : range.start;\n                    deselectedMarks.push({row: pos.row, column: pos.column});\n                    sel.clearSelection();\n                }\n                editor.$handlesEmacsOnCopy = false;\n                if (editor.inMultiSelectMode) editor.forEachSelection({exec: deselect});\n                else deselect();\n                editor.setEmacsMark(null);\n                editor.session.$emacsMarkRing = marks.concat(deselectedMarks.reverse());\n            }, 0);\n        },\n        readOnly: true\n    },\n    keyboardQuit: function(editor) {\n        editor.selection.clearSelection();\n        editor.setEmacsMark(null);\n        editor.keyBinding.$data.count = null;\n    },\n    focusCommandLine: function(editor, arg) {\n        if (editor.showCommandLine)\n            editor.showCommandLine(arg);\n    }\n});\n\nexports.handler.addCommands(iSearchCommandModule.iSearchStartCommands);\n\nvar commands = exports.handler.commands;\ncommands.yank.isYank = true;\ncommands.yankRotate.isYank = true;\n\nexports.killRing = {\n    $data: [],\n    add: function(str) {\n        str && this.$data.push(str);\n        if (this.$data.length > 30)\n            this.$data.shift();\n    },\n    append: function(str) {\n        var idx = this.$data.length - 1;\n        var text = this.$data[idx] || \"\";\n        if (str) text += str;\n        if (text) this.$data[idx] = text;\n    },\n    get: function(n) {\n        n = n || 1;\n        return this.$data.slice(this.$data.length-n, this.$data.length).reverse().join('\\n');\n    },\n    pop: function() {\n        if (this.$data.length > 1)\n            this.$data.pop();\n        return this.get();\n    },\n    rotate: function() {\n        this.$data.unshift(this.$data.pop());\n        return this.get();\n    }\n};\n","\"use strict\";\n/**\n * @typedef {import(\"./editor\").Editor} Editor\n * @typedef {import(\"../ace-internal\").Ace.Point} Point\n * @typedef {import(\"../ace-internal\").Ace.SearchOptions} SearchOptions\n */\n\nvar oop = require(\"./lib/oop\");\nvar Search = require(\"./search\").Search;\nvar EditSession = require(\"./edit_session\").EditSession;\nvar SearchHighlight = require(\"./search_highlight\").SearchHighlight;\n\n/**\n * Finds all lines matching a search term in the current [[Document\n * `Document`]] and displays them instead of the original `Document`. Keeps\n * track of the mapping between the occur doc and the original doc.\n **/\nclass Occur extends Search {\n\n    /**\n     * Enables occur mode. expects that `options.needle` is a search term.\n     * This search term is used to filter out all the lines that include it\n     * and these are then used as the content of a new [[Document\n     * `Document`]]. The current cursor position of editor will be translated\n     * so that the cursor is on the matching row/column as it was before.\n     * @param {Editor} editor\n     * @param {Object} options options.needle should be a String\n     * @return {Boolean} Whether occur activation was successful\n     *\n     **/\n    enter(editor, options) {\n        if (!options.needle) return false;\n        var pos = editor.getCursorPosition();\n        this.displayOccurContent(editor, options);\n        var translatedPos = this.originalToOccurPosition(editor.session, pos);\n        editor.moveCursorToPosition(translatedPos);\n        return true;\n    }\n\n    /**\n     * Disables occur mode. Resets the [[Sessions `EditSession`]] [[Document\n     * `Document`]] back to the original doc. If options.translatePosition is\n     * truthy also maps the [[Editors `Editor`]] cursor position accordingly.\n     * @param {Editor} editor\n     * @param {Object} options options.translatePosition\n     * @return {Boolean} Whether occur deactivation was successful\n     *\n     **/\n    exit(editor, options) {\n        var pos = options.translatePosition && editor.getCursorPosition();\n        var translatedPos = pos && this.occurToOriginalPosition(editor.session, pos);\n        this.displayOriginalContent(editor);\n        if (translatedPos)\n            editor.moveCursorToPosition(translatedPos);\n        return true;\n    }\n\n    /**\n     * @param {EditSession} sess\n     * @param {RegExp} regexp\n     */\n    highlight(sess, regexp) {\n        var hl = sess.$occurHighlight = sess.$occurHighlight || sess.addDynamicMarker(\n                new SearchHighlight(null, \"ace_occur-highlight\", \"text\"));\n        hl.setRegexp(regexp);\n        sess._emit(\"changeBackMarker\"); // force highlight layer redraw\n    }\n\n    /**\n     * @param {Editor} editor\n     * @param {Partial<SearchOptions>} options\n     */\n    displayOccurContent(editor, options) {\n        // this.setSession(session || new EditSession(\"\"))\n        this.$originalSession = editor.session;\n        var found = this.matchingLines(editor.session, options);\n        var lines = found.map(function(foundLine) { return foundLine.content; });\n        /**@type {EditSession}*/\n        var occurSession = new EditSession(lines.join('\\n'));\n        occurSession.$occur = this;\n        occurSession.$occurMatchingLines = found;\n        editor.setSession(occurSession);\n        this.$useEmacsStyleLineStart = this.$originalSession.$useEmacsStyleLineStart;\n        occurSession.$useEmacsStyleLineStart = this.$useEmacsStyleLineStart;\n        this.highlight(occurSession, options.re);\n        occurSession._emit('changeBackMarker');\n    }\n\n    /**\n     * @param {Editor} editor\n     */\n    displayOriginalContent(editor) {\n        editor.setSession(this.$originalSession);\n        this.$originalSession.$useEmacsStyleLineStart = this.$useEmacsStyleLineStart;\n    }\n\n    /**\n    * Translates the position from the original document to the occur lines in\n    * the document or the beginning if the doc {row: 0, column: 0} if not\n    * found.\n    * @param {EditSession} session The occur session\n    * @param {Point} pos The position in the original document\n    * @return {Point} position in occur doc\n    **/\n    originalToOccurPosition(session, pos) {\n        var lines = session.$occurMatchingLines;\n        var nullPos = {row: 0, column: 0};\n        if (!lines) return nullPos;\n        for (var i = 0; i < lines.length; i++) {\n            if (lines[i].row === pos.row)\n                return {row: i, column: pos.column};\n        }\n        return nullPos;\n    }\n\n    /**\n    * Translates the position from the occur document to the original document\n    * or `pos` if not found.\n    * @param {EditSession} session The occur session\n    * @param {Point} pos The position in the occur session document\n    * @return {Point} position\n    **/\n    occurToOriginalPosition(session, pos) {\n        var lines = session.$occurMatchingLines;\n        if (!lines || !lines[pos.row])\n            return pos;\n        return {row: lines[pos.row].row, column: pos.column};\n    }\n\n    /**\n     * @param {EditSession} session\n     * @param {Partial<SearchOptions>} options\n     */\n    matchingLines(session, options) {\n        options = oop.mixin({}, options);\n        if (!session || !options.needle) return [];\n        var search = new Search();\n        search.set(options);\n        return search.findAll(session).reduce(function(lines, range) {\n            var row = range.start.row;\n            var last = lines[lines.length-1];\n            return last && last.row === row ?\n                lines :\n                lines.concat({row: row, content: session.getLine(row)});\n        }, []);\n    }\n\n}\n\nvar dom = require('./lib/dom');\ndom.importCssString(\".ace_occur-highlight {\\n\\\n    border-radius: 4px;\\n\\\n    background-color: rgba(87, 255, 8, 0.25);\\n\\\n    position: absolute;\\n\\\n    z-index: 4;\\n\\\n    box-sizing: border-box;\\n\\\n    box-shadow: 0 0 4px rgb(91, 255, 50);\\n\\\n}\\n\\\n.ace_dark .ace_occur-highlight {\\n\\\n    background-color: rgb(80, 140, 85);\\n\\\n    box-shadow: 0 0 4px rgb(60, 120, 70);\\n\\\n}\\n\", \"incremental-occur-highlighting\", false);\n\nexports.Occur = Occur;\n"],"names":["config","require","oop","HashHandler","occurStartCommand","IncrementalSearchKeyboardHandler","iSearch","this","$iSearch","exports","iSearchStartCommands","name","bindKey","win","mac","exec","editor","options","loadModule","e","IncrementalSearch","activate","backwards","jumpToFirstMatch","next","readOnly","jumpToNext","execCommand","useCurrentOrPrevSearch","iSearchCommands","cancelSearch","string","addString","removeChar","deactivate","mixin","$options","$editor","ed","range","selection","getRangeOfMovements","sel","moveCursorWordRight","session","getTextRange","moveCursorRight","hl","$isearchHighlight","ranges","cache","reduce","ea","concat","forEach","addRange","bind","convertNeedleToRegExp","map","cmd","isIncrementalSearchCommand","scrollIntoView","inherits","attach","call","commands","platform","$commandExecHandler","on","command","stopPropagation","preventDefault","scrollTop","getScrollTop","result","args","renderer","scrollCursorIntoView","animateScrolling","detach","off","handleKeyboard$super","handleKeyboard","data","hashId","key","keyCode","extendCmd","extendSearchTerm","prototype","Occur","alreadyInOccur","$occur","occurSessionActive","enter","OccurKeyboardHandler","installIn","occurCommands","occur","exit","uninstallFrom","translatePosition","isOccurHandler","undefined","handler","keyBinding","addKeyboardHandler","addCommands","removeCommands","getKeyboardHandler","removeKeyboardHandler","Range","Search","SearchHighlight","iSearchCommandModule","ISearchKbd","isRegExp","obj","RegExp","regExpToObject","re","String","start","indexOf","flagStart","lastIndexOf","expression","slice","flags","stringToRegExp","objectToRegExp","constructor","super","wrap","skipCurrent","$keyboardHandler","$startPos","$currentPos","getCursorPosition","needle","$originalEditorOnPaste","onPaste","$mousedownHandler","onMouseDown","selectionFix","statusMessage","reset","message","isEmpty","$emacsMark","clearSelection","highlight","regexp","sess","addDynamicMarker","setRegexp","_emit","$prevNeedle","moveCursorToPosition","pushEmacsMark","fromPoints","highlightAndFindWithNeedle","moveToNext","needleUpdateFunc","length","found","find","shouldSelect","emacsMark","end","setRange","s","reObj","c","substring","evt","text","convertNeedleToString","msg","showCommandLine","focus","dom","importCssString","setupIncrementalSearch","val","usesIncrementalSearch","method","CommandManager","Editor","useIncrementalSearch","set","$handlers","isEnabled","$formerLongWords","$formerLineStart","pushUnique","ring","mark","last","row","column","push","isEmacs","$id","$selectLongWords","$useEmacsStyleLineStart","$emacsMarkRing","setEmacsMark","p","prevMark","popEmacsMark","pop","getLastEmacsMark","emacsMarkForSelection","replacement","multiRangeLength","multiSelect","getAllRanges","selIndex","index","markRing","markIndex","lastMark","anchor","splice","$resetMarkMode","$kbSessionChange","$blockCursor","setStyle","$emacsModeHandler","onCopy","unsetStyle","oldSession","hasOwnProperty","keys","eMods","C","S","M","CMD","combinations","split","toLowerCase","$handlesEmacsOnCopy","killRingSave","ckb","commandKeyBinding","keyPart","keyParts","keyMapKeys","i","prefix","getStatusText","str","count","keyChain","_signal","Array","join","modifier","parseInt","isNaN","Math","max","isYank","lastCommand","handlesCount","multiSelectAction","emacsKeys","bindKeys","recenterTopBottom","pos","$cursorLayer","getPixelPosition","h","$size","scrollerHeight","lineHeight","abs","top","setScrollTop","selectRectangularRegion","toggleBlockSelection","setMark","inMultiSelectMode","forEachSelection","moveToMark","rangePositions","r","transientMarkModeActive","hasNoSelection","every","exchangePointAndMark","lead","selectToPosition","setSelectionRange","getRange","isBackwards","killWord","dir","selectWordLeft","selectWordRight","getSelectionRange","killRing","add","remove","killLine","line","getLine","substr","foldLine","getFoldLine","test","prevOp","append","yank","get","$data","yankRotate","undo","rotate","killRegion","getCopyText","byName","cut","marks","deselectedMarks","setTimeout","deselect","reverse","keyboardQuit","focusCommandLine","arg","shift","idx","n","unshift","EditSession","displayOccurContent","translatedPos","originalToOccurPosition","occurToOriginalPosition","displayOriginalContent","$occurHighlight","$originalSession","matchingLines","lines","foundLine","content","occurSession","$occurMatchingLines","setSession","nullPos","search","findAll"],"sourceRoot":""}