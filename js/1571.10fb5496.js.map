{"version":3,"file":"js/1571.10fb5496.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/javascript_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/jsdoc_comment_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n// TODO: Unicode escape sequences\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\nvar JavaScriptHighlightRules = function(options) {\n    // see: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects\n    \n    var keywords = {\n        \"variable.language\":\n            \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\"  + // Constructors\n            \"Namespace|QName|XML|XMLList|\"                                             + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\"   +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\"                    +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\"   + // Errors\n            \"SyntaxError|TypeError|URIError|\"                                          +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\"                                               +\n            \"JSON|Math|\"                                                               + // Other\n            \"this|arguments|prototype|window|document\"                                 , // Pseudo\n        \"keyword\":\n            \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            // invalid or reserved\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n        \"storage.type\":\n            \"const|let|var|function\",\n        \"constant.language\":\n            \"null|Infinity|NaN|undefined\",\n        \"support.function\":\n            \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    };\n    \n    var keywordMapper = this.createKeywordMapper(keywords, \"identifier\");\n\n    // keywords which can be followed by regular expressions\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n    \n    var anonymousFunctionRe = \"(function)(\\\\s*)(\\\\*?)\";\n\n    var functionCallStartRule = { //just simple function call\n        token: [\"identifier\", \"text\", \"paren.lparen\"],\n        regex: \"(\\\\b(?!\" + Object.values(keywords).join(\"|\") + \"\\\\b)\" + identifierRe + \")(\\\\s*)(\\\\()\"\n    };\n\n    this.$rules = {\n        \"no_regex\" : [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            functionCallStartRule,\n            {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\", // hexadecimal, octal and binary\n                regex : /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token : \"constant.numeric\", // decimal integers and floats\n                regex : /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                // play = function() {  }\n                token : [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                // function myFunc(arg) { }\n                token : [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                // foobar: function() { }\n                token : [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                // : function() { } (this is for issues with 'foo': function() { })\n                token : [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\",  \"paren.lparen\"\n                ],\n                regex : \"(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                // from \"module-path\" (this is the only case where 'from' should be a keyword)\n                token : \"keyword\",\n                regex : \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next : \"start\"\n            }, {\n                token : \"support.constant\",\n                regex : /that\\b/\n            }, {\n                token : [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex : /(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/,\n                next  : \"property\"\n            }, {\n                token : \"storage.type\",\n                regex : /=>/,\n                next  : \"start\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[?:,;.]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n            token: \"keyword.operator\",\n            regex: /=/\n            }, {\n                // Sound.play = function() {  }\n                token : [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                // Sound.play = function play() {  }\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/\n            }, {\n                token : \"support.function\",\n                regex: \"prototype\"\n            }, {\n                token : \"support.function\",\n                regex : /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token : \"support.function.dom\",\n                regex : /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token :  \"support.constant\",\n                regex : /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token : \"identifier\",\n                regex : identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        // regular expressions are only allowed after certain tokens. This\n        // makes sure we don't mix up regexps with the divison operator\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+|^$\",\n                next : \"start\"\n            }, {\n                // immediately return to the start mode without matching\n                // anything\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                // escapes\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                // flag\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                // invalid operators\n                token : \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                // operators\n                token : \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token : \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"default_parameter\": [\n            {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                push: [\n                    {\n                        token: \"string\",\n                        regex: \"'|$\",\n                        next: \"pop\"\n                    }, {\n                        include: \"qstring\"\n                    }\n                ]\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                push: [\n                    {\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        include: \"qqstring\"\n                    }\n                ]\n            }, {\n                token : \"constant.language\",\n                regex : \"null|Infinity|NaN|undefined\"\n            }, {\n                token : \"constant.numeric\", // hexadecimal, octal and binary\n                regex : /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token : \"constant.numeric\", // decimal integers and floats\n                regex : /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\",\n                next: \"function_arguments\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"function_arguments\": [\n            comments(\"function_arguments\"),\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n\n\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function(val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token : \"string.quasi.start\",\n            regex : /`/,\n            push  : [{\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"paren.quasi.start\",\n                regex : /\\${/,\n                push  : \"start\"\n            }, {\n                token : \"string.quasi.end\",\n                regex : /`/,\n                next  : \"pop\"\n            }, {\n                defaultToken: \"string.quasi\"\n            }]\n        }, {\n            token: [\"variable.parameter\", \"text\"],\n            regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",\n            next: \"function_arguments\"\n        }, {\n            token: \"variable.language\",\n            regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n        });\n\n        this.$rules[\"function_arguments\"].unshift({\n            token: \"keyword.operator\",\n            regex: \"=\",\n            next: \"default_parameter\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\.{3}\"\n        });\n\n        this.$rules[\"property\"].unshift({\n            token: \"support.function\",\n            regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\"\n                + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n        }, {\n            token : \"constant.language\",\n            regex : \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n        });\n\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"no_regex\") ]);\n\n    this.normalizeRules();\n};\n\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch : function(val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            } else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                value: val.slice(0, offset)\n            }, {\n                type: \"meta.tag.tag-name.xml\",\n                value: val.substr(offset)\n            }];\n        },\n        regex : \"</?(?:\" + tagRegex + \"|(?=>))\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        {include : \"reference\"}, {defaultToken: \"string.xml\"}\n    ];\n    this.$rules.jsxAttributes = [{\n        token : \"meta.tag.punctuation.tag-close.xml\",\n        regex : \"/?>\",\n        onMatch : function(value, currentState, stack) {\n            if (currentState == stack[0])\n                stack.shift();\n            if (value.length == 2) {\n                if (stack[0] == this.nextState)\n                    stack[1]--;\n                if (!stack[1] || stack[1] < 0) {\n                    stack.splice(0, 2);\n                }\n            }\n            this.next = stack[0] || \"start\";\n            return [{type: this.token, value: value}];\n        },\n        nextState: \"jsx\"\n    },\n    jsxJsRule,\n    comments(\"jsxAttributes\"),\n    {\n        token : \"entity.other.attribute-name.xml\",\n        regex : tagRegex\n    }, {\n        token : \"keyword.operator.attribute-equals.xml\",\n        regex : \"=\"\n    }, {\n        token : \"text.tag-whitespace.xml\",\n        regex : \"\\\\s+\"\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : \"'\",\n        stateName : \"jsx_attr_q\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : '\"',\n        stateName : \"jsx_attr_qq\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    },\n    jsxTag\n    ];\n    this.$rules.reference = [{\n        token : \"constant.language.escape.reference.xml\",\n        regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n}\n\nfunction comments(next) {\n    return [\n        {\n            token : \"comment\", // multi line comment\n            regex : /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"\\\\*\\\\/\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }, {\n            token : \"comment\",\n            regex : \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"$|^\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsDocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\": [\n            {\n                token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n                regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n                        regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.\\-\\'\\\" ]+)(\\])))/,\n                        next: \"pop\"\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n                regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\" \n                    + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                    ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\" \n                    + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\" \n                    + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\" \n                    + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@access\\\\s+(?:private|public|protected)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            },\n            JsDocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken: \"comment.doc.body\",\n            caseInsensitive: true\n        }],\n        \"doc-syntax\": [{\n            token: \"operator.doc\",\n            regex: /[|:]/\n        }, {\n            token: \"paren.doc\",\n            regex: /[\\[\\]]/\n        }]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\n\nJsDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nJsDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next  : start\n    };\n};\n\nJsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n"],"names":["oop","require","DocCommentHighlightRules","TextHighlightRules","identifierRe","JavaScriptHighlightRules","options","keywords","keywordMapper","this","createKeywordMapper","kwBeforeRe","escapedRe","anonymousFunctionRe","functionCallStartRule","token","regex","Object","values","join","$rules","getStartRule","comments","next","property","defaultToken","push","include","consumeLineEnd","noES6","no_regex","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","jsx","JSX","call","embedRules","getEndRule","normalizeRules","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","start","jsxJsRule","jsxAttributes","currentState","splice","stateName","reference","getTagRule","caseInsensitive","inherits","exports","JsDocCommentHighlightRules"],"sourceRoot":""}