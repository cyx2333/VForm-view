{"version":3,"file":"js/9822.762d67d4.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/folding/latex.js","webpack://admin/./node_modules/ace-code/src/mode/latex.js","webpack://admin/./node_modules/ace-code/src/mode/latex_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar keywordLevels = {\n    \"\\\\subparagraph\": 1,\n    \"\\\\paragraph\": 2,\n    \"\\\\subsubsubsection\": 3,\n    \"\\\\subsubsection\": 4,\n    \"\\\\subsection\": 5,\n    \"\\\\section\": 6,\n    \"\\\\chapter\": 7,\n    \"\\\\part\": 8,\n    \"\\\\begin\": 9,\n    \"\\\\end\": 10\n};\n\nvar FoldMode = exports.FoldMode = function() {};\n\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^\\s*\\\\(begin)|\\s*\\\\(part|chapter|(?:sub)*(?:section|paragraph))\\b|{\\s*$/;\n    this.foldingStopMarker = /^\\s*\\\\(end)\\b|^\\s*}/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n            if (match[2])\n                return this.latexSection(session, row, match[0].length - 1);\n\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n\n    this.latexBlock = function(session, row, column, returnRange) {\n        var keywords = {\n            \"\\\\begin\": 1,\n            \"\\\\end\": -1\n        };\n\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n            return;\n\n        var val = token.value;\n        var dir = keywords[val];\n\n        var getType = function() {\n            var token = stream.stepForward();\n            var type = token && token.type == \"lparen\" ? stream.stepForward().value : \"\";\n            if (dir === -1) {\n                stream.stepBackward();\n                if (type)\n                    stream.stepBackward();\n            }\n            return type;\n        };\n        var stack = [getType()];\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while(token = stream.step()) {\n            if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n                continue;\n            var level = keywords[token.value];\n            if (!level)\n                continue;\n            var type = getType();\n            if (level === dir)\n                stack.unshift(type);\n            else if (stack.shift() !== type || !stack.length)\n                break;\n        }\n\n        if (stack.length)\n            return;\n        \n        if (dir == 1) {\n            stream.stepBackward();\n            stream.stepBackward();\n        }\n        \n        if (returnRange)\n            return stream.getCurrentTokenRange();\n\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n\n    this.latexSection = function(session, row, column) {\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"storage.type\")\n            return;\n\n        var startLevel = keywordLevels[token.value] || 0;\n        var stackDepth = 0;\n        var endRow = row;\n\n        while(token = stream.stepForward()) {\n            if (token.type !== \"storage.type\")\n                continue;\n            var level = keywordLevels[token.value] || 0;\n\n            if (level >= 9) {\n                if (!stackDepth)\n                    endRow = stream.getCurrentTokenRow() - 1;\n                stackDepth += level == 9 ? 1 : - 1;\n                if (stackDepth < 0)\n                    break;\n            } else if (level >= startLevel)\n                break;\n        }\n\n        if (!stackDepth)\n            endRow = stream.getCurrentTokenRow() - 1;\n\n        while (endRow > row && !/\\S/.test(session.getLine(endRow)))\n            endRow--;\n\n        return new Range(\n            row, session.getLine(row).length,\n            endRow, session.getLine(endRow).length\n        );\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LatexHighlightRules = require(\"./latex_highlight_rules\").LatexHighlightRules;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar LatexFoldMode = require(\"./folding/latex\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = LatexHighlightRules;\n    this.foldingRules = new LatexFoldMode();\n    this.$behaviour = new CstyleBehaviour({ braces: true });\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    \n    this.lineCommentStart = \"%\";\n\n    this.$id = \"ace/mode/latex\";\n    \n    this.getMatching = function(session, row, column) {\n        if (row == undefined)\n            row = session.selection.lead;\n        if (typeof row == \"object\") {\n            column = row.column;\n            row = row.row;\n        }\n\n        var startToken = session.getTokenAt(row, column);\n        if (!startToken)\n            return;\n        if (startToken.value == \"\\\\begin\" || startToken.value == \"\\\\end\") {\n            return this.foldingRules.latexBlock(session, row, column, true);\n        }\n    };\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LatexHighlightRules = function() {  \n\n    this.$rules = {\n        \"start\" : [{\n            // A comment. Tex comments start with % and go to \n            // the end of the line\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            // Documentclass and usepackage\n            token : [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\n        }, {\n            // A label\n            token : [\"keyword\",\"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\n        }, {\n            // A Verbatim block\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\begin)({)(verbatim)(})\",\n            next : \"verbatim\"\n        },  {\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\begin)({)(lstlisting)(})\",\n            next : \"lstlisting\"\n        },  {\n            // A block\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:begin|end))({)([\\\\w*]*)(})\"\n        }, {\n            token : \"storage.type\",\n            regex : /\\\\verb\\b\\*?/,\n            next : [{\n                token : [\"keyword.operator\", \"string\", \"keyword.operator\"],\n                regex : \"(.)(.*?)(\\\\1|$)|\",\n                next : \"start\"\n            }]\n        }, {\n            // A tex command e.g. \\foo\n            token : \"storage.type\",\n            regex : \"\\\\\\\\[a-zA-Z]+\"\n        }, {\n            // Curly and square braces\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            // Curly and square braces\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            // Escaped character (including new line)\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\[^a-zA-Z]?\"\n        }, {\n            // An equation\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"equation\"\n        }],\n        \"equation\" : [{\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"start\"\n        }, {\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\n        }, {\n            token : \"error\", \n            regex : \"^\\\\s*$\", \n            next : \"start\" \n        }, {\n            defaultToken : \"string\"\n        }],\n        \"verbatim\": [{\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\end)({)(verbatim)(})\",\n            next : \"start\"\n        }, {\n            defaultToken : \"text\"\n        }],\n        \"lstlisting\": [{\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\end)({)(lstlisting)(})\",\n            next : \"start\"\n        }, {\n            defaultToken : \"text\"\n        }]\n    };\n    \n    this.normalizeRules();\n};\noop.inherits(LatexHighlightRules, TextHighlightRules);\n\nexports.LatexHighlightRules = LatexHighlightRules;\n"],"names":["oop","require","BaseFoldMode","Range","TokenIterator","keywordLevels","FoldMode","exports","inherits","this","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","doc","getLine","match","exec","latexBlock","length","latexSection","openingBracketBlock","index","closingBracketBlock","column","returnRange","keywords","stream","token","getCurrentToken","type","val","value","dir","getType","stepForward","stepBackward","stack","startColumn","getCurrentTokenColumn","startRow","step","level","unshift","shift","getCurrentTokenRange","getCurrentTokenRow","startLevel","stackDepth","endRow","test","call","prototype","TextMode","LatexHighlightRules","CstyleBehaviour","LatexFoldMode","Mode","HighlightRules","foldingRules","$behaviour","braces","lineCommentStart","$id","getMatching","undefined","selection","lead","startToken","getTokenAt","TextHighlightRules","$rules","regex","next","defaultToken","normalizeRules"],"sourceRoot":""}