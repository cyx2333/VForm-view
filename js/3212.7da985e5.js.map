{"version":3,"file":"js/3212.7da985e5.js","mappings":"2GAEA,IAAIA,EAAMC,EAAQ,OACdC,EAAWD,EAAAA,OAAAA,KACXE,EAAwBF,EAAAA,OAAAA,EAGxBG,GAFQH,EAAAA,OAAAA,EAED,WACPI,KAAKC,eAAiBH,EACtBE,KAAKE,WAAaF,KAAKG,iBAC3B,GACAR,EAAIS,SAASL,EAAMF,GAEnB,WAEIG,KAAKK,iBAAmB,KACxBL,KAAKM,aAAe,CAACC,MAAO,KAAMC,IAAK,MACvCR,KAAKS,QAAU,CAAE,IAAK,KAGtBT,KAAKU,IAAM,kBACd,EAAEC,KAAKZ,EAAKa,WAEbC,EAAQd,KAAOA,C,wBCrBf,IAAIJ,EAAMC,EAAQ,OACdkB,EAAqBlB,EAAAA,OAAAA,EAErBE,EAAwB,WAC5B,IAAIiB,EAAW,snCAaPC,EACA,kBAGAC,EACA,+CAGAC,EAAgBlB,KAAKmB,oBAAoB,CACzC,mBAAoBF,EACpB,QAAWF,EACX,oBAAqBC,GACtB,cAAc,GAEjBhB,KAAKoB,OAAS,CACV,MAAU,CAAE,CACRC,MAAQ,UACRC,MAAQ,SACT,CACCD,MAAQ,gBACRC,MAAQ,OACRC,KAAO,CACH,CAAEF,MAAQ,cAAeC,MAAQ,OAAQC,KAAM,SAC/C,CAAEC,aAAe,aAEtB,CACCH,MAAQ,eACRC,MAAQ,IACRC,KAAO,CACH,CAAEF,MAAQ,2BAA4BC,MAAQ,iDAAkDG,gBAAiB,GACjH,CAAEJ,MAAQ,aAAcC,MAAQ,MAAOC,KAAM,SAC7C,CAAEC,aAAe,YAEtB,CACCH,MAAQ,SACRC,MAAQ,UACT,CACCD,MAAQ,mBACRC,MAAQ,mDACT,CACCD,MAAQH,EACRI,MAAQ,+BACT,CACCD,MAAQ,mBACRC,MAAQ,+DACT,CACCD,MAAQ,eACRC,MAAQ,SACT,CACCD,MAAQ,eACRC,MAAQ,SACT,CACCD,MAAQ,OACRC,MAAQ,UAGhBtB,KAAK0B,gBACT,EAEA/B,EAAIS,SAASN,EAAuBgB,GAEpCD,EAAQ,EAAwBf,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/verilog.js","webpack://admin/./node_modules/ace-code/src/mode/verilog_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar VerilogHighlightRules = require(\"./verilog_highlight_rules\").VerilogHighlightRules;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = VerilogHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$quotes = { '\"': '\"' };\n\n\n    this.$id = \"ace/mode/verilog\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar VerilogHighlightRules = function() {\nvar keywords = \"always|and|assign|automatic|begin|buf|bufif0|bufif1|case|casex|casez|cell|cmos|config|\" +\n    \"deassign|default|defparam|design|disable|edge|else|end|endcase|endconfig|endfunction|endgenerate|endmodule|\" +\n    \"endprimitive|endspecify|endtable|endtask|event|for|force|forever|fork|function|generate|genvar|highz0|\" +\n    \"highz1|if|ifnone|incdir|include|initial|inout|input|instance|integer|join|large|liblist|library|localparam|\" +\n    \"macromodule|medium|module|nand|negedge|nmos|nor|noshowcancelled|not|notif0|notif1|or|output|parameter|pmos|\" +\n    \"posedge|primitive|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|rcmos|real|realtime|\" +\n    \"reg|release|repeat|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|showcancelled|signed|small|specify|specparam|\" +\n    \"strong0|strong1|supply0|supply1|table|task|time|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|\" +\n    \"unsigned|use|vectored|wait|wand|weak0|weak1|while|wire|wor|xnor|xor\" +\n    \"begin|bufif0|bufif1|case|casex|casez|config|else|end|endcase|endconfig|endfunction|\" +\n    \"endgenerate|endmodule|endprimitive|endspecify|endtable|endtask|for|forever|function|generate|if|ifnone|\" +\n    \"macromodule|module|primitive|repeat|specify|table|task|while\";\n\n    var builtinConstants = (\n        \"true|false|null\"\n    );\n\n    var builtinFunctions = (\n        \"count|min|max|avg|sum|rank|now|coalesce|main\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": builtinFunctions,\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants\n    }, \"identifier\", true);\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"//.*$\"\n        }, {\n            token : \"comment.start\",\n            regex : \"/\\\\*\",\n            next : [\n                { token : \"comment.end\", regex : \"\\\\*/\", next: \"start\" },\n                { defaultToken : \"comment\" }\n            ]\n        }, {\n            token : \"string.start\",\n            regex : '\"',\n            next : [\n                { token : \"constant.language.escape\", regex : /\\\\(?:[ntvfa\\\\\"]|[0-7]{1,3}|\\x[a-fA-F\\d]{1,2}|)/, consumeLineEnd : true },\n                { token : \"string.end\", regex : '\"|$', next: \"start\" },\n                { defaultToken : \"string\" }\n            ]\n        }, {\n            token : \"string\",\n            regex : \"'^[']'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\/|\\\\/\\\\/|%|<@>|@>|<@|&|\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\(]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\)]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        } ]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(VerilogHighlightRules, TextHighlightRules);\n\nexports.VerilogHighlightRules = VerilogHighlightRules;\n"],"names":["oop","require","TextMode","VerilogHighlightRules","Mode","this","HighlightRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","blockComment","start","end","$quotes","$id","call","prototype","exports","TextHighlightRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","$rules","token","regex","next","defaultToken","consumeLineEnd","normalizeRules"],"sourceRoot":""}