{"version":3,"file":"js/1109.31f17657.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/coffee_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/jade_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/less_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/markdown_highlight_rules.js","webpack://admin/./node_modules/ace-code/src/mode/scss_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\n    var oop = require(\"../lib/oop\");\n    var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n    oop.inherits(CoffeeHighlightRules, TextHighlightRules);\n\n    function CoffeeHighlightRules() {\n        var identifier = \"[$A-Za-z_\\\\x7f-\\\\uffff][$\\\\w\\\\x7f-\\\\uffff]*\";\n\n        var keywords = (\n            \"this|throw|then|try|typeof|super|switch|return|break|by|continue|\" +\n            \"catch|class|in|instanceof|is|isnt|if|else|extends|for|own|\" +\n            \"finally|function|while|when|new|no|not|delete|debugger|do|loop|of|off|\" +\n            \"or|on|unless|until|and|yes|yield|export|import|default\"\n        );\n\n        var langConstant = (\n            \"true|false|null|undefined|NaN|Infinity\"\n        );\n\n        var illegal = (\n            \"case|const|function|var|void|with|enum|implements|\" +\n            \"interface|let|package|private|protected|public|static\"\n        );\n\n        var supportClass = (\n            \"Array|Boolean|Date|Function|Number|Object|RegExp|ReferenceError|String|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" +\n            \"SyntaxError|TypeError|URIError|\"  +\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray\"\n        );\n\n        var supportFunction = (\n            \"Math|JSON|isNaN|isFinite|parseInt|parseFloat|encodeURI|\" +\n            \"encodeURIComponent|decodeURI|decodeURIComponent|String|\"\n        );\n\n        var variableLanguage = (\n            \"window|arguments|prototype|document\"\n        );\n\n        var keywordMapper = this.createKeywordMapper({\n            \"keyword\": keywords,\n            \"constant.language\": langConstant,\n            \"invalid.illegal\": illegal,\n            \"language.support.class\": supportClass,\n            \"language.support.function\": supportFunction,\n            \"variable.language\": variableLanguage\n        }, \"identifier\");\n\n        var functionRule = {\n            token: [\"paren.lparen\", \"variable.parameter\", \"paren.rparen\", \"text\", \"storage.type\"],\n            regex: /(?:(\\()((?:\"[^\")]*?\"|'[^')]*?'|\\/[^\\/)]*?\\/|[^()\"'\\/])*?)(\\))(\\s*))?([\\-=]>)/.source\n        };\n\n        var stringEscape = /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)/;\n\n        this.$rules = {\n            start : [\n                {\n                    token : \"constant.numeric\",\n                    regex : \"(?:0x[\\\\da-fA-F]+|(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?)\"\n                }, {\n                    stateName: \"qdoc\",\n                    token : \"string\", regex : \"'''\", next : [\n                        {token : \"string\", regex : \"'''\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qqdoc\",\n                    token : \"string\",\n                    regex : '\"\"\"',\n                    next : [\n                        {token : \"string\", regex : '\"\"\"', next : \"start\"},\n                        {token : \"paren.string\", regex : '#{', push : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qstring\",\n                    token : \"string\", regex : \"'\", next : [\n                        {token : \"string\", regex : \"'\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qqstring\",\n                    token : \"string.start\", regex : '\"', next : [\n                        {token : \"string.end\", regex : '\"', next : \"start\"},\n                        {token : \"paren.string\", regex : '#{', push : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"js\",\n                    token : \"string\", regex : \"`\", next : [\n                        {token : \"string\", regex : \"`\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    regex: \"[{}]\", onMatch: function(val, state, stack) {\n                        this.next = \"\";\n                        if (val == \"{\" && stack.length) {\n                            stack.unshift(\"start\", state);\n                            return \"paren\";\n                        }\n                        if (val == \"}\" && stack.length) {\n                            stack.shift();\n                            this.next = stack.shift() || \"\";\n                            if (this.next.indexOf(\"string\") != -1)\n                                return \"paren.string\";\n                        }\n                        return \"paren\";\n                    }\n                }, {\n                    token : \"string.regex\",\n                    regex : \"///\",\n                    next : \"heregex\"\n                }, {\n                    token : \"string.regex\",\n                    regex : /(?:\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)(?:[imgy]{0,4})(?!\\w)/\n                }, {\n                    token : \"comment\",\n                    regex : \"###(?!#)\",\n                    next : \"comment\"\n                }, {\n                    token : \"comment\",\n                    regex : \"#.*\"\n                }, {\n                    token : [\"punctuation.operator\", \"text\", \"identifier\"],\n                    regex : \"(\\\\.)(\\\\s*)(\" + illegal + \")\"\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\.{1,3}\"\n                }, {\n                    //class A extends B\n                    token : [\"keyword\", \"text\", \"language.support.class\",\n                     \"text\", \"keyword\", \"text\", \"language.support.class\"],\n                    regex : \"(class)(\\\\s+)(\" + identifier + \")(?:(\\\\s+)(extends)(\\\\s+)(\" + identifier + \"))?\"\n                }, {\n                    //play = (...) ->\n                    token : [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\"].concat(functionRule.token),\n                    regex : \"(\" + identifier + \")(\\\\s*)([=:])(\\\\s*)\" + functionRule.regex\n                }, \n                functionRule, \n                {\n                    token : \"variable\",\n                    regex : \"@(?:\" + identifier + \")?\"\n                }, {\n                    token: keywordMapper,\n                    regex : identifier\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\,|\\\\.\"\n                }, {\n                    token : \"storage.type\",\n                    regex : \"[\\\\-=]>\"\n                }, {\n                    token : \"keyword.operator\",\n                    regex : \"(?:[-+*/%<>&|^!?=]=|>>>=?|\\\\-\\\\-|\\\\+\\\\+|::|&&=|\\\\|\\\\|=|<<=|>>=|\\\\?\\\\.|\\\\.{2,3}|[!*+-=><])\"\n                }, {\n                    token : \"paren.lparen\",\n                    regex : \"[({[]\"\n                }, {\n                    token : \"paren.rparen\",\n                    regex : \"[\\\\]})]\"\n                }, {\n                    token : \"text\",\n                    regex : \"\\\\s+\"\n                }],\n\n\n            heregex : [{\n                token : \"string.regex\",\n                regex : '.*?///[imgy]{0,4}',\n                next : \"start\"\n            }, {\n                token : \"comment.regex\",\n                regex : \"\\\\s+(?:#.*)?\"\n            }, {\n                token : \"string.regex\",\n                regex : \"\\\\S+\"\n            }],\n\n            comment : [{\n                token : \"comment\",\n                regex : '###',\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }]\n        };\n        this.normalizeRules();\n    }\n\n    exports.CoffeeHighlightRules = CoffeeHighlightRules;\n","/*\n  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: C5B73B98-5F2A-42E3-9F0E-028A74A9FE4B)\n*/\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar MarkdownHighlightRules = require(\"./markdown_highlight_rules\").MarkdownHighlightRules;\nvar SassHighlightRules = require(\"./scss_highlight_rules\").ScssHighlightRules;\nvar LessHighlightRules = require(\"./less_highlight_rules\").LessHighlightRules;\nvar CoffeeHighlightRules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nfunction mixin_embed(tag, prefix) {\n    return { \n        token : \"entity.name.function.jade\",\n        regex : \"^\\\\s*\\\\:\" + tag,\n        next  : prefix + \"start\"\n    };\n}\n\nvar JadeHighlightRules = function() {\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-6][0-7]?|\" + // oct\n        \"37[0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = \n        {\n    \"start\": [\n        {\n            token: \"keyword.control.import.include.jade\",\n            regex: \"\\\\s*\\\\binclude\\\\b\"\n        },\n        {\n            token: \"keyword.other.doctype.jade\",\n            regex: \"^!!!\\\\s*(?:[a-zA-Z0-9-_]+)?\"\n        },\n        {\n            onMatch: function(value, currentState, stack) {\n                stack.unshift(this.next, value.length - 2, currentState);\n                return \"comment\";\n            },\n            regex: /^\\s*\\/\\//,\n            next: \"comment_block\"\n        },\n        mixin_embed(\"markdown\", \"markdown-\"),\n        mixin_embed(\"sass\", \"sass-\"),\n        mixin_embed(\"less\", \"less-\"),\n        mixin_embed(\"coffee\", \"coffee-\"),\n        /*\n        {\n            token: {\n                \"2\": {\n                    \"name\": \"entity.name.function.jade\"\n                }\n            },\n            regex: \"^(\\\\s*)(\\\\:cdata)\",\n            next: \"state_9\"\n        },*/\n        // match stuff like: mixin dialog-title-desc(title, desc)\n        {\n            token: [ \"storage.type.function.jade\",\n                       \"entity.name.function.jade\",\n                       \"punctuation.definition.parameters.begin.jade\",\n                       \"variable.parameter.function.jade\",\n                       \"punctuation.definition.parameters.end.jade\"\n                    ],\n            regex: \"^(\\\\s*mixin)( [\\\\w\\\\-]+)(\\\\s*\\\\()(.*?)(\\\\))\"\n        },\n        // match stuff like: mixin dialog-title-desc\n        {\n            token: [ \"storage.type.function.jade\", \"entity.name.function.jade\"],\n            regex: \"^(\\\\s*mixin)( [\\\\w\\\\-]+)\"\n        },\n        {\n            token: \"source.js.embedded.jade\",\n            regex: \"^\\\\s*(?:-|=|!=)\",\n            next: \"js-start\"\n        },\n        /*{\n            token: \"entity.name.tag.script.jade\",\n            regex: \"^\\\\s*script\",\n            next: \"js_code_tag\"\n        },*/\n        {\n            token: \"string.interpolated.jade\",\n            regex: \"[#!]\\\\{[^\\\\}]+\\\\}\"\n        },\n        // Match any tag, id or class. skip AST filters\n        {\n            token: \"meta.tag.any.jade\",\n            regex: /^\\s*(?!\\w+:)(?:[\\w-]+|(?=\\.|#)])/,\n            next: \"tag_single\"\n        },\n        {\n            token: \"suport.type.attribute.id.jade\",\n            regex: \"#\\\\w+\"\n        },\n        {\n            token: \"suport.type.attribute.class.jade\",\n            regex: \"\\\\.\\\\w+\"\n        },\n        {\n            token: \"punctuation\",\n            regex: \"\\\\s*(?:\\\\()\",\n            next: \"tag_attributes\"\n        }\n    ],\n    \"comment_block\": [\n        {regex: /^\\s*(?:\\/\\/)?/, onMatch: function(value, currentState, stack) {\n            if (value.length <= stack[1]) {\n                if (value.slice(-1) == \"/\") {\n                    stack[1] = value.length - 2;\n                    this.next = \"\";\n                    return \"comment\";\n                }\n                stack.shift();\n                stack.shift();\n                this.next = stack.shift();\n                return \"text\";\n            } else {\n                this.next = \"\";\n                return \"comment\";\n            }\n        }, next: \"start\"},\n        {defaultToken: \"comment\"}\n    ],\n    /*\n    \n    \"state_9\": [\n        {\n            token: \"TODO\",\n            regex: \"^(?!\\\\1\\\\s+)\",\n            next: \"start\"\n        },\n        {\n            token: \"TODO\",\n            regex: \".+\",\n            next: \"state_9\"\n        }\n    ],*/\n    /*\"js_code\": [\n        {\n            token: \"keyword.control.js\",\n            regex: \"\\\\beach\\\\b\"\n        },\n        {\n            token: \"text\",\n            regex: \"$\",\n            next: \"start\"\n        }\n    ],*/\n    /*\"js_code_tag\": [\n        {\n            \"include\": \"source.js\"\n        },\n        {\n            token: \"TODO\",\n            regex: \"^((?=(\\\\1)([\\\\w#\\\\.]|$\\\\n?))|^$\\\\n?)\",\n            next: \"start\"\n        }\n    ],*/\n    \"tag_single\": [\n        {\n            token: \"entity.other.attribute-name.class.jade\",\n            regex: \"\\\\.[\\\\w-]+\"\n        },\n        {\n            token: \"entity.other.attribute-name.id.jade\",\n            regex: \"#[\\\\w-]+\"\n        },\n        {\n            token: [\"text\", \"punctuation\"],\n            regex: \"($)|((?!\\\\.|#|=|-))\",\n            next: \"start\"\n        }\n    ],\n    \"tag_attributes\": [ \n        {\n            token : \"string\",\n            regex : \"'(?=.)\",\n            next  : \"qstring\"\n        }, \n        {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        },\n        {\n            token: [\"entity.other.attribute-name.jade\", \"punctuation\"],\n            regex: \"([a-zA-Z:\\\\.-]+)(=)?\",\n            next: \"attribute_strings\"\n        },\n        {\n            token: \"punctuation\",\n            regex: \"\\\\)\",\n            next: \"start\"\n        }\n    ],\n    \"attribute_strings\": [\n        {\n            token : \"string\",\n            regex : \"'(?=.)\",\n            next  : \"qstring\"\n        }, \n        {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        },\n        {\n            token : \"string\",\n            regex : '(?=\\\\S)',\n            next  : \"tag_attributes\"\n        }\n    ],\n    \"qqstring\" : [\n        {\n            token : \"constant.language.escape\",\n            regex : escapedRe\n        }, {\n            token : \"string\",\n            regex : '[^\"\\\\\\\\]+'\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"tag_attributes\"\n        }\n    ],\n    \"qstring\" : [\n        {\n            token : \"constant.language.escape\",\n            regex : escapedRe\n        }, {\n            token : \"string\",\n            regex : \"[^'\\\\\\\\]+\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qstring\"\n        }, {\n            token : \"string\",\n            regex : \"'|$\",\n            next  : \"tag_attributes\"\n        }\n    ]\n};\n\n    this.embedRules(JavaScriptHighlightRules, \"js-\", [{\n        token: \"text\",\n        regex: \".$\",\n        next: \"start\"\n    }]);\n/*\n    this.embedRules(MarkdownHighlightRules, \"markdown-\", [{\n       token : \"support.function\",\n       regex : \"^\\\\1\\\\s+\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(SassHighlightRules, \"sass-\", [{\n       token : \"support.function\",\n       regex : \"^(?!\\\\1\\\\s+)\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(LessHighlightRules, \"less-\", [{\n       token : \"support.function\",\n       regex : \"^(?!\\\\1\\\\s+)\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(CoffeeHighlightRules, \"coffee-\", [{\n       token : \"support.function\",\n       regex : \"^(?!\\\\1\\\\s+)\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(JavaScriptHighlightRules, \"js-\", [{\n       token : \"support.function\",\n       regex : \"$\",\n       captures: \"1\",\n       next  : \"start\"\n    }]); */\n};\n\noop.inherits(JadeHighlightRules, TextHighlightRules);\n\nexports.JadeHighlightRules = JadeHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = require('./css_highlight_rules');\n\nvar LessHighlightRules = function() {\n\n\n    var keywordList = \"@import|@media|@font-face|@keyframes|@-webkit-keyframes|@supports|\" + \n        \"@charset|@plugin|@namespace|@document|@page|@viewport|@-ms-viewport|\" +\n        \"or|and|when|not\";\n\n    var keywords = keywordList.split('|');\n\n    var properties = CssHighlightRules.supportType.split('|');\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.constant\": CssHighlightRules.supportConstant,\n        \"keyword\": keywordList,\n        \"support.constant.color\": CssHighlightRules.supportConstantColor,\n        \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\n    }, \"identifier\", true);   \n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    var numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : [\"constant.numeric\", \"keyword\"],\n                regex : \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\n            }, {\n                token : \"constant.numeric\", // hex6 color\n                regex : \"#[a-f0-9]{6}\"\n            }, {\n                token : \"constant.numeric\", // hex3 color\n                regex : \"#[a-f0-9]{3}\"\n            }, {\n                token : \"constant.numeric\",\n                regex : numRe\n            }, {\n                token : [\"support.function\", \"paren.lparen\", \"string\", \"paren.rparen\"],\n                regex : \"(url)(\\\\()(.*)(\\\\))\"\n            }, {\n                token : [\"support.function\", \"paren.lparen\"],\n                regex : \"(:extend|[a-z0-9_\\\\-]+)(\\\\()\"\n            }, {\n                token : function(value) {\n                    if (keywords.indexOf(value.toLowerCase()) > -1)\n                        return \"keyword\";\n                    else\n                        return \"variable\";\n                },\n                regex : \"[@\\\\$][a-z0-9_\\\\-@\\\\$]*\\\\b\"\n            }, {\n                token : \"variable\",\n                regex : \"[@\\\\$]\\\\{[a-z0-9_\\\\-@\\\\$]*\\\\}\"\n            }, {\n                token : function(first, second) {\n                    if(properties.indexOf(first.toLowerCase()) > -1) {\n                        return [\"support.type.property\", \"text\"];\n                    }\n                    else {\n                        return [\"support.type.unknownProperty\", \"text\"];\n                    }\n                },\n                regex : \"([a-z0-9-_]+)(\\\\s*:)\"\n            }, {\n                token : \"keyword\",\n                regex : \"&\"   // special case - always treat as keyword\n            }, {\n                token : keywordMapper,\n                regex : \"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"\n            }, {\n                token: \"variable.language\",\n                regex: \"#[a-z0-9-_]+\"\n            }, {\n                token: \"variable.language\",\n                regex: \"\\\\.[a-z0-9-_]+\"\n            }, {\n                token: \"variable.language\",\n                regex: \":[a-z_][a-z0-9-_]*\"\n            }, {\n                token: \"constant\",\n                regex: \"[a-z0-9-_]+\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"<|>|<=|>=|=|!=|-|%|\\\\+|\\\\*\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                caseInsensitive: true\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(LessHighlightRules, TextHighlightRules);\n\nexports.LessHighlightRules = LessHighlightRules;\n","\"use strict\";\n\nvar modes = require(\"../config\").$modes;\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\n\nvar escaped = function(ch) {\n    return \"(?:[^\" + lang.escapeRegExp(ch) + \"\\\\\\\\]|\\\\\\\\.)*\";\n};\n\nvar MarkdownHighlightRules = function() {\n    HtmlHighlightRules.call(this);\n    // regexp must not have capturing parentheses\n    // regexps are ordered -> the first match is used\n    var codeBlockStartRule = {\n        token : \"support.function\",\n        regex : /^\\s*(```+[^`]*|~~~+[^~]*)$/,\n        onMatch: function(value, state, stack, line) {\n            var m = value.match(/^(\\s*)([`~]+)(.*)/);\n            var language = /[\\w-]+|$/.exec(m[3])[0];\n            // TODO lazy-load modes\n            if (!modes[language])\n                language = \"\";\n            stack.unshift(\"githubblock\", [], [m[1], m[2], language], state);\n            return this.token;\n        },\n        next  : \"githubblock\"\n    };\n    var codeBlockRules = [{\n        token : \"support.function\",\n        regex : \".*\",\n        onMatch: function(value, state, stack, line) {\n            var embedState = stack[1];\n            var indent = stack[2][0];\n            var endMarker = stack[2][1];\n            var language = stack[2][2];\n            \n            var m = /^(\\s*)(`+|~+)\\s*$/.exec(value);\n            if (\n                m && m[1].length < indent.length + 3\n                && m[2].length >= endMarker.length && m[2][0] == endMarker[0]\n            ) {\n                stack.splice(0, 3);\n                this.next = stack.shift();\n                return this.token;\n            }\n            this.next = \"\";\n            if (language && modes[language]) {\n                var data = modes[language].getTokenizer().getLineTokens(value, embedState.slice(0));\n                stack[1] = data.state;\n                return data.tokens;\n            }\n            return this.token;\n        }\n    }];\n\n    this.$rules[\"start\"].unshift({\n        token : \"empty_line\",\n        regex : '^$',\n        next: \"allowBlock\"\n    }, { // h1\n        token: \"markup.heading.1\",\n        regex: \"^=+(?=\\\\s*$)\"\n    }, { // h2\n        token: \"markup.heading.2\",\n        regex: \"^\\\\-+(?=\\\\s*$)\"\n    }, {\n        token : function(value) {\n            return \"markup.heading.\" + value.length;\n        },\n        regex : /^#{1,6}(?=\\s|$)/,\n        next : \"header\"\n    },\n    codeBlockStartRule,\n    { // block quote\n        token : \"string.blockquote\",\n        regex : \"^\\\\s*>\\\\s*(?:[*+-]|\\\\d+\\\\.)?\\\\s+\",\n        next  : \"blockquote\"\n    }, { // HR * - _\n        token : \"constant\",\n        regex : \"^ {0,3}(?:(?:\\\\* ?){3,}|(?:\\\\- ?){3,}|(?:\\\\_ ?){3,})\\\\s*$\",\n        next: \"allowBlock\"\n    }, { // list\n        token : \"markup.list\",\n        regex : \"^\\\\s{0,3}(?:[*+-]|\\\\d+\\\\.)\\\\s+\",\n        next  : \"listblock-start\"\n    }, {\n        include : \"basic\"\n    });\n\n    this.addRules({\n        \"basic\" : [{\n            token : \"constant.language.escape\",\n            regex : /\\\\[\\\\`*_{}\\[\\]()#+\\-.!]/\n        }, { // code span `\n            token : \"support.function\",\n            regex : \"(`+)(.*?[^`])(\\\\1)\"\n        }, { // reference\n            token : [\"text\", \"constant\", \"text\", \"url\", \"string\", \"text\"],\n            regex : \"^([ ]{0,3}\\\\[)([^\\\\]]+)(\\\\]:\\\\s*)([^ ]+)(\\\\s*(?:[\\\"][^\\\"]+[\\\"])?(\\\\s*))$\"\n        }, { // link by reference\n            token : [\"text\", \"string\", \"text\", \"constant\", \"text\"],\n            regex : \"(\\\\[)(\" + escaped(\"]\") + \")(\\\\]\\\\s*\\\\[)(\"+ escaped(\"]\") + \")(\\\\])\"\n        }, { // link by url\n            token : [\"text\", \"string\", \"text\", \"markup.underline\", \"string\", \"text\"],\n            regex : \"(\\\\!?\\\\[)(\" +                                        // [\n                    escaped(\"]\") +                                    // link text or alt text\n                    \")(\\\\]\\\\()\"+                                      // ](\n                    '((?:[^\\\\)\\\\s\\\\\\\\]|\\\\\\\\.|\\\\s(?=[^\"]))*)' +        // href or image\n                    '(\\\\s*\"' +  escaped('\"') + '\"\\\\s*)?' +            // \"title\"\n                    \"(\\\\))\"                                           // )\n        }, { // strong ** __\n            token : \"string.strong\",\n            regex : \"([*]{2}|[_]{2}(?=\\\\S))(.*?\\\\S[*_]*)(\\\\1)\"\n        }, { // emphasis * _\n            token : \"string.emphasis\",\n            regex : \"([*]|[_](?=\\\\S))(.*?\\\\S[*_]*)(\\\\1)\"\n        }, { //\n            token : [\"text\", \"url\", \"text\"],\n            regex : \"(<)(\"+\n                      \"(?:https?|ftp|dict):[^'\\\">\\\\s]+\"+\n                      \"|\"+\n                      \"(?:mailto:)?[-.\\\\w]+\\\\@[-a-z0-9]+(?:\\\\.[-a-z0-9]+)*\\\\.[a-z]+\"+\n                    \")(>)\"\n        }],\n\n        // code block\n        \"allowBlock\": [\n            {token : \"support.function\", regex : \"^ {4}.+\", next : \"allowBlock\"},\n            {token : \"empty_line\", regex : '^$', next: \"allowBlock\"},\n            {token : \"empty\", regex : \"\", next : \"start\"}\n        ],\n\n        \"header\" : [{\n            regex: \"$\",\n            next : \"start\"\n        }, {\n            include: \"basic\"\n        }, {\n            defaultToken : \"heading\"\n        } ],\n\n        \"listblock-start\" : [{\n            token : \"support.variable\",\n            regex : /(?:\\[[ x]\\])?/,\n            next  : \"listblock\"\n        }],\n\n        \"listblock\" : [ { // Lists only escape on completely blank lines.\n            token : \"empty_line\",\n            regex : \"^$\",\n            next  : \"start\"\n        }, { // list\n            token : \"markup.list\",\n            regex : \"^\\\\s{0,3}(?:[*+-]|\\\\d+\\\\.)\\\\s+\",\n            next  : \"listblock-start\"\n        }, {\n            include : \"basic\", noEscape: true\n        },\n        codeBlockStartRule,\n        {\n            defaultToken : \"list\" //do not use markup.list to allow stling leading `*` differntly\n        } ],\n\n        \"blockquote\" : [ { // Blockquotes only escape on blank lines.\n            token : \"empty_line\",\n            regex : \"^\\\\s*$\",\n            next  : \"start\"\n        }, { // block quote\n            token : \"string.blockquote\",\n            regex : \"^\\\\s*>\\\\s*(?:[*+-]|\\\\d+\\\\.)?\\\\s+\",\n            next  : \"blockquote\"\n        }, {\n            include : \"basic\", noEscape: true\n        }, {\n            defaultToken : \"string.blockquote\"\n        } ],\n\n        \"githubblock\" : codeBlockRules\n    });\n\n    this.normalizeRules();\n};\noop.inherits(MarkdownHighlightRules, TextHighlightRules);\n\nexports.MarkdownHighlightRules = MarkdownHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = require(\"./css_highlight_rules\");\n\nvar ScssHighlightRules = function() {\n    \n    var properties = lang.arrayToMap(CssHighlightRules.supportType.split(\"|\"));\n\n    var functions = lang.arrayToMap(\n        (\"hsl|hsla|rgb|rgba|url|attr|counter|counters|abs|adjust_color|adjust_hue|\" +\n         \"alpha|join|blue|ceil|change_color|comparable|complement|darken|desaturate|\" + \n         \"floor|grayscale|green|hue|if|invert|join|length|lighten|lightness|mix|\" + \n         \"nth|opacify|opacity|percentage|quote|red|round|saturate|saturation|\" +\n         \"scale_color|transparentize|type_of|unit|unitless|unquote\").split(\"|\")\n    );\n\n    var constants = lang.arrayToMap(CssHighlightRules.supportConstant.split(\"|\"));\n\n    var colors = lang.arrayToMap(CssHighlightRules.supportConstantColor.split(\"|\"));\n    \n    var keywords = lang.arrayToMap(\n        (\"@mixin|@extend|@include|@import|@media|@debug|@warn|@if|@for|@each|@while|@else|@font-face|@-webkit-keyframes|if|and|!default|module|def|end|declare\").split(\"|\")\n    );\n    \n    var tags = lang.arrayToMap(\n        (\"a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|\" + \n         \"big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|\" + \n         \"command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|\" + \n         \"figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|\" + \n         \"header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|\" + \n         \"link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|\" + \n         \"option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|\" + \n         \"small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|\" + \n         \"textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video|wbr|xmp\").split(\"|\")\n    );\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    var numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[\"].*\\\\\\\\$',\n                next : \"qqstring\"\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"string\", // multi line string start\n                regex : \"['].*\\\\\\\\$\",\n                next : \"qstring\"\n            }, {\n                token : \"constant.numeric\",\n                regex : numRe + \"(?:ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vm|vw|%)\"\n            }, {\n                token : \"constant.numeric\", // hex6 color\n                regex : \"#[a-f0-9]{6}\"\n            }, {\n                token : \"constant.numeric\", // hex3 color\n                regex : \"#[a-f0-9]{3}\"\n            }, {\n                token : \"constant.numeric\",\n                regex : numRe\n            }, {\n                token : [\"support.function\", \"string\", \"support.function\"],\n                regex : \"(url\\\\()(.*)(\\\\))\"\n            }, {\n                token : function(value) {\n                    if (properties.hasOwnProperty(value.toLowerCase()))\n                        return \"support.type\";\n                    if (keywords.hasOwnProperty(value))\n                        return \"keyword\";\n                    else if (constants.hasOwnProperty(value))\n                        return \"constant.language\";\n                    else if (functions.hasOwnProperty(value))\n                        return \"support.function\";\n                    else if (colors.hasOwnProperty(value.toLowerCase()))\n                        return \"support.constant.color\";\n                    else if (tags.hasOwnProperty(value.toLowerCase()))\n                        return \"variable.language\";\n                    else\n                        return \"text\";\n                },\n                regex : \"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"\n            }, {\n                token : \"variable\",\n                regex : \"[a-z_\\\\-$][a-z0-9_\\\\-$]*\\\\b\"\n            }, {\n                token: \"variable.language\",\n                regex: \"#[a-z0-9-_]+\"\n            }, {\n                token: \"variable.language\",\n                regex: \"\\\\.[a-z0-9-_]+\"\n            }, {\n                token: \"variable.language\",\n                regex: \":[a-z0-9-_]+\"\n            }, {\n                token: \"constant\",\n                regex: \"[a-z0-9-_]+\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"<|>|<=|>=|==|!=|-|%|#|\\\\+|\\\\$|\\\\+|\\\\*\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                caseInsensitive: true\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"string\",\n                regex : '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"string\",\n                regex : \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ]\n    };\n};\n\noop.inherits(ScssHighlightRules, TextHighlightRules);\n\nexports.ScssHighlightRules = ScssHighlightRules;\n"],"names":["oop","require","TextHighlightRules","CoffeeHighlightRules","identifier","keywords","langConstant","illegal","supportClass","supportFunction","variableLanguage","keywordMapper","this","createKeywordMapper","functionRule","token","regex","source","stringEscape","$rules","start","stateName","next","defaultToken","push","onMatch","val","state","stack","length","unshift","shift","indexOf","concat","heregex","comment","normalizeRules","inherits","exports","JavaScriptHighlightRules","mixin_embed","tag","prefix","JadeHighlightRules","escapedRe","value","currentState","slice","embedRules","CssHighlightRules","LessHighlightRules","keywordList","split","properties","supportType","supportConstant","supportConstantColor","supportConstantFonts","numRe","toLowerCase","first","second","caseInsensitive","modes","lang","HtmlHighlightRules","escaped","ch","escapeRegExp","MarkdownHighlightRules","call","codeBlockStartRule","line","m","match","language","exec","codeBlockRules","embedState","indent","endMarker","splice","data","getTokenizer","getLineTokens","tokens","include","addRules","noEscape","ScssHighlightRules","arrayToMap","functions","constants","colors","tags","hasOwnProperty"],"sourceRoot":""}