{"version":3,"file":"js/6319.b03f5f04.js","mappings":"2GACAA,EAAA,OAIA,IAAIC,EAAMD,EAAQ,OACdE,EAAOF,EAAQ,MAGnB,MAAMG,EAKFC,WAAAA,CAAYC,EAAQC,GAChBC,KAAKC,QAAUP,EAAIQ,cAAc,OACjCF,KAAKC,QAAQE,UAAY,uBACzBH,KAAKC,QAAQG,MAAMC,QAAU,yBAC7BN,EAAWO,YAAYN,KAAKC,SAE5B,IAAIM,EAAeZ,EAAKa,YAAY,WAChCR,KAAKS,aAAaX,EACtB,EAAEY,KAAKV,OAAOW,SAASD,KAAK,KAAM,KAElCZ,EAAOc,GAAG,eAAgBL,GAC1BT,EAAOc,GAAG,kBAAmBL,GAC7BT,EAAOc,GAAG,mBAAoBL,EAClC,CAKAE,YAAAA,CAAaX,GACT,IAAIe,EAAS,GACb,SAASC,EAAIC,EAAKC,GACdD,GAAOF,EAAOI,KAAKF,EAAKC,GAAa,IACzC,CAEAF,EAAIhB,EAAOoB,WAAWC,cAAcrB,IAChCA,EAAOsB,SAASC,WAChBP,EAAI,OAER,IAAIQ,EAAMxB,EAAOyB,UACbC,EAAIF,EAAIG,KAEZ,IAAKH,EAAII,UAAW,CAChB,IAAIC,EAAI7B,EAAO8B,oBACfd,EAAI,KAAOa,EAAEE,IAAIC,IAAMH,EAAEI,MAAMD,KAAO,KAAOH,EAAEE,IAAIG,OAASL,EAAEI,MAAMC,QAAU,IAAK,IACvF,CACAlB,EAAIU,EAAEM,IAAM,IAAMN,EAAEQ,OAAQ,KACxBV,EAAIW,YACJnB,EAAI,IAAMQ,EAAIW,WAAa,IAAK,KACpCpB,EAAOqB,MACPlC,KAAKC,QAAQkC,YAActB,EAAOuB,KAAK,GAC3C,EAGJC,EAAQzC,UAAYA,C","sources":["webpack://admin/./node_modules/ace-code/src/ext/statusbar.js"],"sourcesContent":["\"use strict\";\n/**\n *\n * @typedef {import(\"../editor\").Editor} Editor\n */\nvar dom = require(\"../lib/dom\");\nvar lang = require(\"../lib/lang\");\n\n/** simple statusbar **/\nclass StatusBar{\n    /**\n     * @param {Editor} editor\n     * @param {HTMLElement} parentNode\n     */\n    constructor(editor, parentNode) {\n        this.element = dom.createElement(\"div\");\n        this.element.className = \"ace_status-indicator\";\n        this.element.style.cssText = \"display: inline-block;\";\n        parentNode.appendChild(this.element);\n\n        var statusUpdate = lang.delayedCall(function(){\n            this.updateStatus(editor);\n        }.bind(this)).schedule.bind(null, 100);\n\n        editor.on(\"changeStatus\", statusUpdate);\n        editor.on(\"changeSelection\", statusUpdate);\n        editor.on(\"keyboardActivity\", statusUpdate);\n    }\n\n    /**\n     * @param {Editor} editor\n     */\n    updateStatus(editor) {\n        var status = [];\n        function add(str, separator) {\n            str && status.push(str, separator || \"|\");\n        }\n        // @ts-expect-error TODO: potential wrong argument\n        add(editor.keyBinding.getStatusText(editor));\n        if (editor.commands.recording)\n            add(\"REC\");\n        \n        var sel = editor.selection;\n        var c = sel.lead;\n        \n        if (!sel.isEmpty()) {\n            var r = editor.getSelectionRange();\n            add(\"(\" + (r.end.row - r.start.row) + \":\"  +(r.end.column - r.start.column) + \")\", \" \");\n        }\n        add(c.row + \":\" + c.column, \" \");        \n        if (sel.rangeCount)\n            add(\"[\" + sel.rangeCount + \"]\", \" \");\n        status.pop();\n        this.element.textContent = status.join(\"\");\n    }\n}\n\nexports.StatusBar = StatusBar;\n"],"names":["require","dom","lang","StatusBar","constructor","editor","parentNode","this","element","createElement","className","style","cssText","appendChild","statusUpdate","delayedCall","updateStatus","bind","schedule","on","status","add","str","separator","push","keyBinding","getStatusText","commands","recording","sel","selection","c","lead","isEmpty","r","getSelectionRange","end","row","start","column","rangeCount","pop","textContent","join","exports"],"sourceRoot":""}