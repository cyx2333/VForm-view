{"version":3,"file":"js/5208.2866fe1f.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/ext/menu_tools/overlay_page.js","webpack://admin/./node_modules/ace-code/src/ext/menu_tools/settings_menu.css.js","webpack://admin/./node_modules/ace-code/src/ext/modelist.js","webpack://admin/./node_modules/ace-code/src/ext/prompt.js"],"sourcesContent":["/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Overlay Page\n * @fileOverview Overlay Page <br />\n * Generates an overlay for displaying menus. The overlay is an absolutely\n *  positioned div.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n'use strict';\nvar dom = require(\"../../lib/dom\");\nvar cssText = require(\"./settings_menu.css\");\ndom.importCssString(cssText, \"settings_menu.css\", false);\n\n/**\n * Generates an overlay for displaying menus. The overlay is an absolutely\n *  positioned div.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param editor\n * @param {HTMLElement} contentElement Any element which may be presented inside\n *  a div.\n * @param [callback]\n */\nmodule.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n\n    function documentEscListener(e) {\n        if (e.keyCode === 27) {\n            close();\n        }\n    }\n\n    function close() {\n        if (!closer) return;\n        document.removeEventListener('keydown', documentEscListener);\n        closer.parentNode.removeChild(closer);\n        if (editor) {\n            editor.focus();\n        }\n        closer = null;\n        callback && callback();\n    }\n\n     /**\n     * Defines whether overlay is closed when user clicks outside of it.\n     * \n     * @param {Boolean} ignore      If set to true overlay stays open when focus moves to another part of the editor.\n     */\n    function setIgnoreFocusOut(ignore) {\n        ignoreFocusOut = ignore;\n        if (ignore) {\n            closer.style.pointerEvents = \"none\";\n            contentElement.style.pointerEvents = \"auto\";\n        }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' +\n        'position: fixed; top:0; bottom:0; left:0; right:0;' +\n        'z-index: 9990; ' +\n        (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function(e) {\n        if (!ignoreFocusOut) {\n            close();\n        }\n    });\n    // click closer if esc key is pressed\n    document.addEventListener('keydown', documentEscListener);\n\n    contentElement.addEventListener('click', function (e) {\n        e.stopPropagation();\n    });\n\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n        editor.blur();\n    }\n    return {\n        close: close,\n        setIgnoreFocusOut: setIgnoreFocusOut\n    };\n};\n","module.exports = `#ace_settingsmenu, #kbshortcutmenu {\n    background-color: #F7F7F7;\n    color: black;\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\n    padding: 1em 0.5em 2em 1em;\n    overflow: auto;\n    position: absolute;\n    margin: 0;\n    bottom: 0;\n    right: 0;\n    top: 0;\n    z-index: 9991;\n    cursor: default;\n}\n\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\n    background-color: rgba(255, 255, 255, 0.6);\n    color: black;\n}\n\n.ace_optionsMenuEntry:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n    transition: all 0.3s\n}\n\n.ace_closeButton {\n    background: rgba(245, 146, 146, 0.5);\n    border: 1px solid #F48A8A;\n    border-radius: 50%;\n    padding: 7px;\n    position: absolute;\n    right: -8px;\n    top: -8px;\n    z-index: 100000;\n}\n.ace_closeButton{\n    background: rgba(245, 146, 146, 0.9);\n}\n.ace_optionsMenuKey {\n    color: darkslateblue;\n    font-weight: bold;\n}\n.ace_optionsMenuCommand {\n    color: darkcyan;\n    font-weight: normal;\n}\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\n    vertical-align: middle;\n}\n\n.ace_optionsMenuEntry button[ace_selected_button=true] {\n    background: #e7e7e7;\n    box-shadow: 1px 0px 2px 0px #adadad inset;\n    border-color: #adadad;\n}\n.ace_optionsMenuEntry button {\n    background: white;\n    border: 1px solid lightgray;\n    margin: 0px;\n}\n.ace_optionsMenuEntry button:hover{\n    background: #f0f0f0;\n}`;\n","\"use strict\";\n\nvar modes = [];\n/**\n * Suggests a mode based on the file extension present in the given path\n * @param {string} path The path to the file\n * @returns {Mode} Returns an object containing information about the\n *  suggested mode.\n */\nfunction getModeForPath(path) {\n    var mode = modesByName.text;\n    var fileName = path.split(/[\\/\\\\]/).pop();\n    for (var i = 0; i < modes.length; i++) {\n        if (modes[i].supportsFile(fileName)) {\n            mode = modes[i];\n            break;\n        }\n    }\n    return mode;\n}\n\nclass Mode {\n    /**\n     * @param {string} name\n     * @param {string} caption\n     * @param {string} extensions\n     */\n    constructor(name, caption, extensions) {\n        this.name = name;\n        this.caption = caption;\n        this.mode = \"ace/mode/\" + name;\n        this.extensions = extensions;\n        var re;\n        if (/\\^/.test(extensions)) {\n            re = extensions.replace(/\\|(\\^)?/g, function (a, b) {\n                return \"$|\" + (b ? \"^\" : \"^.*\\\\.\");\n            }) + \"$\";\n        }\n        else {\n            re = \"^.*\\\\.(\" + extensions + \")$\";\n        }\n\n        this.extRe = new RegExp(re, \"gi\");\n    }\n\n    /**\n     * @param {string} filename\n     */\n    supportsFile(filename) {\n        return filename.match(this.extRe);\n    }\n}\n\n// todo firstlinematch\nvar supportedModes = {\n    ABAP:        [\"abap\"],\n    ABC:         [\"abc\"],\n    ActionScript:[\"as\"],\n    ADA:         [\"ada|adb\"],\n    Alda:        [\"alda\"],\n    Apache_Conf: [\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],\n    Apex:        [\"apex|cls|trigger|tgr\"],\n    AQL:         [\"aql\"],\n    AsciiDoc:    [\"asciidoc|adoc\"],\n    ASL:         [\"dsl|asl|asl.json\"],\n    Assembly_ARM32:[\"s\"],\n    Assembly_x86:[\"asm|a\"],\n    Astro:       [\"astro\"],\n    AutoHotKey:  [\"ahk\"],\n    BatchFile:   [\"bat|cmd\"],\n    Basic:       [\"bas|bak\"],\n    BibTeX:      [\"bib\"],\n    C_Cpp:       [\"cpp|c|cc|cxx|h|hh|hpp|ino\"],\n    C9Search:    [\"c9search_results\"],\n    Cirru:       [\"cirru|cr\"],\n    Clojure:     [\"clj|cljs\"],\n    Cobol:       [\"CBL|COB\"],\n    coffee:      [\"coffee|cf|cson|^Cakefile\"],\n    ColdFusion:  [\"cfm|cfc\"],\n    Crystal:     [\"cr\"],\n    CSharp:      [\"cs\"],\n    Csound_Document: [\"csd\"],\n    Csound_Orchestra: [\"orc\"],\n    Csound_Score: [\"sco\"],\n    CSS:         [\"css\"],\n    Curly:       [\"curly\"],\n    Cuttlefish:  [\"conf\"],\n    D:           [\"d|di\"],\n    Dart:        [\"dart\"],\n    Diff:        [\"diff|patch\"],\n    Django:      [\"djt|html.djt|dj.html|djhtml\"],\n    Dockerfile:  [\"^Dockerfile\"],\n    Dot:         [\"dot\"],\n    Drools:      [\"drl\"],\n    Edifact:     [\"edi\"],\n    Eiffel:      [\"e|ge\"],\n    EJS:         [\"ejs\"],\n    Elixir:      [\"ex|exs\"],\n    Elm:         [\"elm\"],\n    Erlang:      [\"erl|hrl\"],\n    Flix:        [\"flix\"],\n    Forth:       [\"frt|fs|ldr|fth|4th\"],\n    Fortran:     [\"f|f90\"],\n    FSharp:      [\"fsi|fs|ml|mli|fsx|fsscript\"],\n    FSL:         [\"fsl\"],\n    FTL:         [\"ftl\"],\n    Gcode:       [\"gcode\"],\n    Gherkin:     [\"feature\"],\n    Gitignore:   [\"^.gitignore\"],\n    Glsl:        [\"glsl|frag|vert\"],\n    Gobstones:   [\"gbs\"],\n    golang:      [\"go\"],\n    GraphQLSchema: [\"gql\"],\n    Groovy:      [\"groovy\"],\n    HAML:        [\"haml\"],\n    Handlebars:  [\"hbs|handlebars|tpl|mustache\"],\n    Haskell:     [\"hs\"],\n    Haskell_Cabal: [\"cabal\"],\n    haXe:        [\"hx\"],\n    Hjson:       [\"hjson\"],\n    HTML: [\"html|htm|xhtml|we|wpy\"],\n    HTML_Elixir: [\"eex|html.eex\"],\n    HTML_Ruby:   [\"erb|rhtml|html.erb\"],\n    INI:         [\"ini|conf|cfg|prefs\"],\n    Io:          [\"io\"],\n    Ion:         [\"ion\"],\n    Jack:        [\"jack\"],\n    Jade:        [\"jade|pug\"],\n    Java:        [\"java\"],\n    JavaScript:  [\"js|jsm|cjs|mjs\"],\n    JEXL:        [\"jexl\"],\n    JSON:        [\"json\"],\n    JSON5:       [\"json5\"],\n    JSONiq:      [\"jq\"],\n    JSP:         [\"jsp\"],\n    JSSM:        [\"jssm|jssm_state\"],\n    JSX:         [\"jsx\"],\n    Julia:       [\"jl\"],\n    Kotlin:      [\"kt|kts\"],\n    LaTeX:       [\"tex|latex|ltx|bib\"],\n    Latte:       [\"latte\"],\n    LESS:        [\"less\"],\n    Liquid:      [\"liquid\"],\n    Lisp:        [\"lisp\"],\n    LiveScript:  [\"ls\"],\n    Log:         [\"log\"],\n    LogiQL:      [\"logic|lql\"],\n    Logtalk:     [\"lgt\"],\n    LSL:         [\"lsl\"],\n    Lua:         [\"lua\"],\n    LuaPage:     [\"lp\"],\n    Lucene:      [\"lucene\"],\n    Makefile:    [\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],\n    Markdown:    [\"md|markdown\"],\n    Mask:        [\"mask\"],\n    MATLAB:      [\"matlab\"],\n    Maze:        [\"mz\"],\n    MediaWiki:   [\"wiki|mediawiki\"],\n    MEL:         [\"mel\"],\n    MIPS:        [\"s|asm\"],\n    MIXAL:       [\"mixal\"],\n    MUSHCode:    [\"mc|mush\"],\n    MySQL:       [\"mysql\"],\n    Nasal:       [\"nas\"],\n    Nginx:       [\"nginx|conf\"],\n    Nim:         [\"nim\"],\n    Nix:         [\"nix\"],\n    NSIS:        [\"nsi|nsh\"],\n    Nunjucks:    [\"nunjucks|nunjs|nj|njk\"],\n    ObjectiveC:  [\"m|mm\"],\n    OCaml:       [\"ml|mli\"],\n    Odin:        [\"odin\"],\n    PartiQL:     [\"partiql|pql\"],\n    Pascal:      [\"pas|p\"],\n    Perl:        [\"pl|pm\"],\n    pgSQL:       [\"pgsql\"],\n    PHP:         [\"php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],\n    PHP_Laravel_blade: [\"blade.php\"],\n    Pig:         [\"pig\"],\n    PLSQL:       [\"plsql\"],\n    Powershell:  [\"ps1\"],\n    Praat:       [\"praat|praatscript|psc|proc\"],\n    Prisma:      [\"prisma\"],\n    Prolog:      [\"plg|prolog\"],\n    Properties:  [\"properties\"],\n    Protobuf:    [\"proto\"],\n    PRQL:        [\"prql\"],\n    Puppet:      [\"epp|pp\"],\n    Python:      [\"py\"],\n    QML:         [\"qml\"],\n    R:           [\"r\"],\n    Raku:        [\"raku|rakumod|rakutest|p6|pl6|pm6\"],\n    Razor:       [\"cshtml|asp\"],\n    RDoc:        [\"Rd\"],\n    Red:         [\"red|reds\"],\n    RHTML:       [\"Rhtml\"],\n    Robot:       [\"robot|resource\"],\n    RST:         [\"rst\"],\n    Ruby:        [\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],\n    Rust:        [\"rs\"],\n    SaC:         [\"sac\"],\n    SASS:        [\"sass\"],\n    SCAD:        [\"scad\"],\n    Scala:       [\"scala|sbt\"],\n    Scheme:      [\"scm|sm|rkt|oak|scheme\"],\n    Scrypt:      [\"scrypt\"],\n    SCSS:        [\"scss\"],\n    SH:          [\"sh|bash|^.bashrc\"],\n    SJS:         [\"sjs\"],\n    Slim:        [\"slim|skim\"],\n    Smarty:      [\"smarty|tpl\"],\n    Smithy:      [\"smithy\"],\n    snippets:    [\"snippets\"],\n    Soy_Template:[\"soy\"],\n    Space:       [\"space\"],\n    SPARQL:      [\"rq\"],\n    SQL:         [\"sql\"],\n    SQLServer:   [\"sqlserver\"],\n    Stylus:      [\"styl|stylus\"],\n    SVG:         [\"svg\"],\n    Swift:       [\"swift\"],\n    Tcl:         [\"tcl\"],\n    Terraform:   [\"tf\", \"tfvars\", \"terragrunt\"],\n    Tex:         [\"tex\"],\n    Text:        [\"txt\"],\n    Textile:     [\"textile\"],\n    Toml:        [\"toml\"],\n    TSX:         [\"tsx\"],\n    Turtle:      [\"ttl\"],\n    Twig:        [\"twig|swig\"],\n    Typescript:  [\"ts|mts|cts|typescript|str\"],\n    Vala:        [\"vala\"],\n    VBScript:    [\"vbs|vb\"],\n    Velocity:    [\"vm\"],\n    Verilog:     [\"v|vh|sv|svh\"],\n    VHDL:        [\"vhd|vhdl\"],\n    Visualforce: [\"vfp|component|page\"],\n    Vue: [\"vue\"],\n    Wollok:      [\"wlk|wpgm|wtest\"],\n    XML:         [\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],\n    XQuery:      [\"xq\"],\n    YAML:        [\"yaml|yml\"],\n    Zeek:        [\"zeek|bro\"],\n    Zig:         [\"zig\"]\n};\n\nvar nameOverrides = {\n    ObjectiveC: \"Objective-C\",\n    CSharp: \"C#\",\n    golang: \"Go\",\n    C_Cpp: \"C and C++\",\n    Csound_Document: \"Csound Document\",\n    Csound_Orchestra: \"Csound\",\n    Csound_Score: \"Csound Score\",\n    coffee: \"CoffeeScript\",\n    HTML_Ruby: \"HTML (Ruby)\",\n    HTML_Elixir: \"HTML (Elixir)\",\n    FTL: \"FreeMarker\",\n    PHP_Laravel_blade: \"PHP (Blade Template)\",\n    Perl6: \"Perl 6\",\n    AutoHotKey: \"AutoHotkey / AutoIt\"\n};\n\nvar modesByName = {};\nfor (var name in supportedModes) {\n    var data = supportedModes[name];\n    var displayName = (nameOverrides[name] || name).replace(/_/g, \" \");\n    var filename = name.toLowerCase();\n    var mode = new Mode(filename, displayName, data[0]);\n    modesByName[filename] = mode;\n    modes.push(mode);\n}\n\nmodule.exports = {\n    getModeForPath: getModeForPath,\n    modes: modes,\n    modesByName: modesByName\n};\n","/**\n * @typedef {import(\"../editor\").Editor} Editor\n */\n\n\n\"use strict\";\n\nvar nls = require(\"../config\").nls;\nvar Range = require(\"../range\").Range;\nvar dom = require(\"../lib/dom\");\nvar FilteredList= require(\"../autocomplete\").FilteredList;\nvar AcePopup = require('../autocomplete/popup').AcePopup;\nvar $singleLineEditor = require('../autocomplete/popup').$singleLineEditor;\nvar UndoManager = require(\"../undomanager\").UndoManager;\nvar Tokenizer = require(\"../tokenizer\").Tokenizer;\nvar overlayPage = require(\"./menu_tools/overlay_page\").overlayPage;\nvar modelist = require(\"./modelist\");\nvar openPrompt;\n\n/**\n * @typedef PromptOptions\n * @property {String} name             Prompt name.\n * @property {String} $type            Use prompt of specific type (gotoLine|commands|modes or default if empty).\n * @property {[start: number, end: number]} selection  Defines which part of the predefined value should be highlited.\n * @property {Boolean} hasDescription  Set to true if prompt has description below input box.\n * @property {String} prompt           Description below input box.\n * @property {String} placeholder      Placeholder for value.\n * @property {Object} $rules           Specific rules for input like password or regexp.\n * @property {Boolean} ignoreFocusOut  Set to true to keep the prompt open when focus moves to another part of the editor.\n * @property {Function} getCompletions Function for defining list of options for value.\n * @property {Function} getPrefix      Function for defining current value prefix.\n * @property {Function} onAccept       Function called when Enter is pressed.\n * @property {Function} onInput        Function called when input is added to prompt input box.\n * @property {Function} onCancel       Function called when Esc|Shift-Esc is pressed.\n * @property {Function} history        Function for defining history list.\n * @property {number} maxHistoryCount\n * @property {Function} addToHistory\n */\n\n/**\n * Prompt plugin is used for getting input from user.\n *\n * @param {Editor} editor                   Ouside editor related to this prompt. Will be blurred when prompt is open.\n * @param {String | Partial<PromptOptions>} message                  Predefined value of prompt input box.\n * @param {Partial<PromptOptions>} options                  Cusomizable options for this prompt.\n * @param {Function} [callback]               Function called after done.\n * */\nfunction prompt(editor, message, options, callback) {\n    if (typeof message == \"object\") {\n        // @ts-ignore\n        return prompt(editor, \"\", message, options);\n    }\n    if (openPrompt) {\n        var lastPrompt = openPrompt;\n        editor = lastPrompt.editor;\n        lastPrompt.close();\n        if (lastPrompt.name && lastPrompt.name == options.name)\n            return;\n    }\n    if (options.$type)\n       return prompt[options.$type](editor, callback);\n\n    var cmdLine = $singleLineEditor();\n    cmdLine.session.setUndoManager(new UndoManager());\n\n    /**@type {any}*/\n    var el = dom.buildDom([\"div\", {class: \"ace_prompt_container\" + (options.hasDescription ? \" input-box-with-description\" : \"\")}]);\n    var overlay = overlayPage(editor, el, done);\n    el.appendChild(cmdLine.container);\n\n    if (editor) {\n        editor.cmdLine = cmdLine;\n        cmdLine.setOption(\"fontSize\", editor.getOption(\"fontSize\"));\n    }\n    if (message) {\n        cmdLine.setValue(message, 1);\n    }\n    if (options.selection) {\n        cmdLine.selection.setRange({\n            start: cmdLine.session.doc.indexToPosition(options.selection[0]),\n            end: cmdLine.session.doc.indexToPosition(options.selection[1])\n        });\n    }\n\n    if (options.getCompletions) {\n        var popup = new AcePopup();\n        popup.renderer.setStyle(\"ace_autocomplete_inline\");\n        popup.container.style.display = \"block\";\n        popup.container.style.maxWidth = \"600px\";\n        popup.container.style.width = \"100%\";\n        popup.container.style.marginTop = \"3px\";\n        popup.renderer.setScrollMargin(2, 2, 0, 0);\n        popup.autoSelect = false;\n        popup.renderer.$maxLines = 15;\n        popup.setRow(-1);\n        popup.on(\"click\", function(e) {\n            var data = popup.getData(popup.getRow());\n            if (!data[\"error\"]) {\n                cmdLine.setValue(data.value || data[\"name\"] || data);\n                accept();\n                e.stop();\n            }\n        });\n        el.appendChild(popup.container);\n        updateCompletions();\n    }\n\n    if (options.$rules) {\n        var tokenizer = new Tokenizer(options.$rules);\n        cmdLine.session.bgTokenizer.setTokenizer(tokenizer);\n    }\n\n    if (options.placeholder) {\n        cmdLine.setOption(\"placeholder\", options.placeholder);\n    }\n\n    if (options.hasDescription) {\n        /**@type {any}*/\n        var promptTextContainer = dom.buildDom([\"div\", {class: \"ace_prompt_text_container\"}]);\n        dom.buildDom(options.prompt || \"Press 'Enter' to confirm or 'Escape' to cancel\", promptTextContainer);\n        el.appendChild(promptTextContainer);\n    }\n\n    overlay.setIgnoreFocusOut(options.ignoreFocusOut);\n\n    function accept() {\n        var val;\n        if (popup && popup.getCursorPosition().row > 0) {\n            val = valueFromRecentList();\n        } else {\n            val = cmdLine.getValue();\n        }\n        var curData = popup ? popup.getData(popup.getRow()) : val;\n        if (curData && !curData[\"error\"]) {\n            done();\n            options.onAccept && options.onAccept({\n                value: val,\n                item: curData\n            }, cmdLine);\n        }\n    }\n\n    var keys = {\n        \"Enter\": accept,\n        \"Esc|Shift-Esc\": function() {\n            options.onCancel && options.onCancel(cmdLine.getValue(), cmdLine);\n            done();\n        }\n    };\n\n    if (popup) {\n        Object.assign(keys, {\n            \"Up\": function(editor) { popup.goTo(\"up\"); valueFromRecentList();},\n            \"Down\": function(editor) { popup.goTo(\"down\"); valueFromRecentList();},\n            \"Ctrl-Up|Ctrl-Home\": function(editor) { popup.goTo(\"start\"); valueFromRecentList();},\n            \"Ctrl-Down|Ctrl-End\": function(editor) { popup.goTo(\"end\"); valueFromRecentList();},\n            \"Tab\": function(editor) {\n                popup.goTo(\"down\"); valueFromRecentList();\n            },\n            \"PageUp\": function(editor) { popup.gotoPageUp(); valueFromRecentList();},\n            \"PageDown\": function(editor) { popup.gotoPageDown(); valueFromRecentList();}\n        });\n    }\n\n    cmdLine.commands.bindKeys(keys);\n\n    function done() {\n        overlay.close();\n        callback && callback();\n        openPrompt = null;\n    }\n\n    cmdLine.on(\"input\", function() {\n        options.onInput && options.onInput();\n        updateCompletions();\n    });\n\n    function updateCompletions() {\n        if (options.getCompletions) {\n            var prefix;\n            if (options.getPrefix) {\n                prefix = options.getPrefix(cmdLine);\n            }\n\n            var completions = options.getCompletions(cmdLine);\n            popup.setData(completions, prefix);\n            popup.resize(true);\n        }\n    }\n\n    function valueFromRecentList() {\n        var current = popup.getData(popup.getRow());\n        if (current && !current[\"error\"])\n            return current.value || current.caption || current;\n    }\n\n    cmdLine.resize(true);\n    if (popup) {\n        popup.resize(true);\n    }\n    cmdLine.focus();\n\n    openPrompt = {\n        close: done,\n        name: options.name,\n        editor: editor\n    };\n}\n\n/**\n * \n * @param {Editor} editor\n * @param {Function} [callback]\n */\nprompt.gotoLine = function(editor, callback) {\n    function stringifySelection(selection) {\n        if (!Array.isArray(selection))\n            selection = [selection];\n        return selection.map(function(r) {\n            var cursor = r.isBackwards ? r.start: r.end;\n            var anchor = r.isBackwards ? r.end: r.start;\n            var row = anchor.row;\n            var s = (row + 1) + \":\" + anchor.column;\n\n            if (anchor.row == cursor.row) {\n                if (anchor.column != cursor.column)\n                    s += \">\" + \":\" + cursor.column;\n            } else {\n                s += \">\" + (cursor.row + 1) + \":\" + cursor.column;\n            }\n            return s;\n        }).reverse().join(\", \");\n    }\n\n    prompt(editor, \":\" + stringifySelection(editor.selection.toJSON()), {\n        name: \"gotoLine\",\n        selection: [1, Number.MAX_VALUE],\n        onAccept: function(data) {\n            var value = data.value;\n            var _history = prompt.gotoLine[\"_history\"];\n            if (!_history)\n                prompt.gotoLine[\"_history\"] = _history = [];\n            if (_history.indexOf(value) != -1)\n                _history.splice(_history.indexOf(value), 1);\n            _history.unshift(value);\n            if (_history.length > 20) _history.length = 20;\n            \n            \n            var pos = editor.getCursorPosition();\n            var ranges = [];\n            value.replace(/^:/, \"\").split(/,/).map(function(str) {\n                var parts = str.split(/([<>:+-]|c?\\d+)|[^c\\d<>:+-]+/).filter(Boolean);\n                var i = 0;\n                function readPosition() {\n                    var c = parts[i++];\n                    if (!c) return;\n                    if (c[0] == \"c\") {\n                        var index = parseInt(c.slice(1)) || 0;\n                        return editor.session.doc.indexToPosition(index);\n                    }\n                    var row = pos.row;\n                    var column = 0;\n                    if (/\\d/.test(c)) {\n                        row = parseInt(c) - 1;\n                        c = parts[i++];\n                    }\n                    if (c == \":\") {\n                        c = parts[i++];\n                        if (/\\d/.test(c)) {\n                            column = parseInt(c) || 0;\n                        }\n                    }\n                    return {row: row, column: column};\n                }\n                pos = readPosition();\n                var range = Range.fromPoints(pos, pos);\n                if (parts[i] == \">\") {\n                    i++;\n                    range.end = readPosition();\n                }\n                else if (parts[i] == \"<\") {\n                    i++;\n                    range.start = readPosition();\n                }\n                ranges.unshift(range);\n            });\n            editor.selection.fromJSON(ranges);\n            var scrollTop = editor.renderer.scrollTop;\n            editor.renderer.scrollSelectionIntoView(\n                editor.selection.anchor, \n                editor.selection.cursor, \n                0.5\n            );\n            editor.renderer.animateScrolling(scrollTop);\n        },\n        history: function() {\n            if (!prompt.gotoLine[\"_history\"])\n                return [];\n            return prompt.gotoLine[\"_history\"];\n\n        },\n        getCompletions: function(cmdLine) {\n            var value = cmdLine.getValue();\n            var m = value.replace(/^:/, \"\").split(\":\");\n            var row = Math.min(parseInt(m[0]) || 1, editor.session.getLength()) - 1;\n            var line = editor.session.getLine(row);\n            var current = value + \"  \" + line;\n            return [current].concat(this.history());\n        },\n        $rules: {\n            start: [{\n                regex: /\\d+/,\n                token: \"string\"\n            }, {\n                regex: /[:,><+\\-c]/,\n                token: \"keyword\"\n            }]\n        }\n    });\n};\n\n/**\n * \n * @param {Editor} editor\n * @param {Function} [callback]\n */\nprompt.commands = function(editor, callback) {\n    function normalizeName(name) {\n        return (name || \"\").replace(/^./, function(x) {\n            return x.toUpperCase(x);\n        }).replace(/[a-z][A-Z]/g, function(x) {\n            return x[0] + \" \" + x[1].toLowerCase(x);\n        });\n    }\n    function getEditorCommandsByName(excludeCommands) {\n        var commandsByName = [];\n        var commandMap = {};\n        editor.keyBinding.$handlers.forEach(function(handler) {\n            var platform = handler[\"platform\"];\n            var cbn = handler[\"byName\"];\n            for (var i in cbn) {\n                var key = cbn[i].bindKey;\n                if (typeof key !== \"string\") {\n                    key = key && key[platform] || \"\";\n                }\n                var commands = cbn[i];\n                var description = commands.description || normalizeName(commands.name);\n                if (!Array.isArray(commands))\n                    commands = [commands];\n                commands.forEach(function(command) {\n                    if (typeof command != \"string\")\n                        command = command.name;\n                    var needle = excludeCommands.find(function(el) {\n                        return el === command;\n                    });\n                    if (!needle) {\n                        if (commandMap[command]) {\n                            commandMap[command].key += \"|\" + key;\n                        } else {\n                            commandMap[command] = {key: key, command: command, description: description};\n                            commandsByName.push(commandMap[command]);\n                        }\n                    }\n                });\n            }\n        });\n        return commandsByName;\n    }\n    // exclude commands that can not be executed without args\n    var excludeCommandsList = [\"insertstring\", \"inserttext\", \"setIndentation\", \"paste\"];\n    var shortcutsArray = getEditorCommandsByName(excludeCommandsList);\n    shortcutsArray = shortcutsArray.map(function(item) {\n        return {value: item.description, meta: item.key, command: item.command};\n    });\n    prompt(editor, \"\",  {\n        name: \"commands\",\n        selection: [0, Number.MAX_VALUE],\n        maxHistoryCount: 5,\n        onAccept: function(data) {\n            if (data.item) {\n                var commandName = data.item.command;\n                this.addToHistory(data.item);\n\n                editor.execCommand(commandName);\n            }\n        },\n        addToHistory: function(item) {\n            var history = this.history();\n            history.unshift(item);\n            delete item.message;\n            for (var i = 1; i < history.length; i++) {\n                if (history[i][\"command\"] == item.command ) {\n                    history.splice(i, 1);\n                    break;\n                }\n            }\n            if (this.maxHistoryCount > 0 && history.length > this.maxHistoryCount) {\n                history.splice(history.length - 1, 1);\n            }\n            prompt.commands[\"history\"] = history;\n        },\n        history: function() {\n            return prompt.commands[\"history\"] || [];\n        },\n        getPrefix: function(cmdLine) {\n            var currentPos = cmdLine.getCursorPosition();\n            var filterValue = cmdLine.getValue();\n            return filterValue.substring(0, currentPos.column);\n        },\n        getCompletions: function(cmdLine) {\n            function getFilteredCompletions(commands, prefix) {\n                var resultCommands = JSON.parse(JSON.stringify(commands));\n\n                var filtered = new FilteredList(resultCommands);\n                return filtered.filterCompletions(resultCommands, prefix);\n            }\n\n            function getUniqueCommandList(commands, usedCommands) {\n                if (!usedCommands || !usedCommands.length) {\n                    return commands;\n                }\n                var excludeCommands = [];\n                usedCommands.forEach(function(item) {\n                    excludeCommands.push(item.command);\n                });\n\n                var resultCommands = [];\n\n                commands.forEach(function(item) {\n                    if (excludeCommands.indexOf(item.command) === -1) {\n                        resultCommands.push(item);\n                    }\n                });\n\n                return resultCommands;\n            }\n\n            var prefix = this.getPrefix(cmdLine);\n            var recentlyUsedCommands = getFilteredCompletions(this.history(), prefix);\n            var otherCommands = getUniqueCommandList(shortcutsArray, recentlyUsedCommands);\n            otherCommands = getFilteredCompletions(otherCommands, prefix);\n\n            if (recentlyUsedCommands.length && otherCommands.length) {\n                recentlyUsedCommands[0].message = nls(\"prompt.recently-used\", \"Recently used\");\n                otherCommands[0].message = nls(\"prompt.other-commands\", \"Other commands\");\n            }\n\n            var completions = recentlyUsedCommands.concat(otherCommands);\n            return completions.length > 0 ? completions : [{\n                value: nls(\"prompt.no-matching-commands\", \"No matching commands\"),\n                error: 1\n            }];\n        }\n    });\n};\n\n/**\n *\n * @param {Editor} editor\n * @param {Function} [callback]\n */\nprompt.modes = function(editor, callback) {\n    /**@type {any[]}*/\n    var modesArray = modelist.modes;\n    modesArray = modesArray.map(function(item) {\n        return {value: item.caption, mode: item.name};\n    });\n    prompt(editor, \"\",  {\n        name: \"modes\",\n        selection: [0, Number.MAX_VALUE],\n        onAccept: function(data) {\n            if (data.item) {\n                var modeName = \"ace/mode/\" + data.item.mode;\n                editor.session.setMode(modeName);\n            }\n        },\n        getPrefix: function(cmdLine) {\n            var currentPos = cmdLine.getCursorPosition();\n            var filterValue = cmdLine.getValue();\n            return filterValue.substring(0, currentPos.column);\n        },\n        getCompletions: function(cmdLine) {\n            function getFilteredCompletions(modes, prefix) {\n                var resultCommands = JSON.parse(JSON.stringify(modes));\n\n                var filtered = new FilteredList(resultCommands);\n                return filtered.filterCompletions(resultCommands, prefix);\n            }\n\n            var prefix = this.getPrefix(cmdLine);\n            var completions = getFilteredCompletions(modesArray, prefix);\n            return completions.length > 0 ? completions : [{\n                \"caption\": \"No mode matching\",\n                \"value\": \"No mode matching\",\n                \"error\": 1\n            }];\n        }\n    });\n};\n\ndom.importCssString(`.ace_prompt_container {\n    max-width: 603px;\n    width: 100%;\n    margin: 20px auto;\n    padding: 3px;\n    background: white;\n    border-radius: 2px;\n    box-shadow: 0px 2px 3px 0px #555;\n}`, \"promtp.css\", false);\n\n\nexports.prompt = prompt;\n"],"names":["dom","require","cssText","importCssString","module","exports","overlayPage","editor","contentElement","callback","closer","document","createElement","ignoreFocusOut","documentEscListener","e","keyCode","close","removeEventListener","parentNode","removeChild","focus","setIgnoreFocusOut","ignore","style","pointerEvents","addEventListener","stopPropagation","appendChild","body","blur","modes","getModeForPath","path","mode","modesByName","text","fileName","split","pop","i","length","supportsFile","Mode","constructor","name","caption","extensions","re","this","test","replace","a","b","extRe","RegExp","filename","match","supportedModes","ABAP","ABC","ActionScript","ADA","Alda","Apache_Conf","Apex","AQL","AsciiDoc","ASL","Assembly_ARM32","Assembly_x86","Astro","AutoHotKey","BatchFile","Basic","BibTeX","C_Cpp","C9Search","Cirru","Clojure","Cobol","coffee","ColdFusion","Crystal","CSharp","Csound_Document","Csound_Orchestra","Csound_Score","CSS","Curly","Cuttlefish","D","Dart","Diff","Django","Dockerfile","Dot","Drools","Edifact","Eiffel","EJS","Elixir","Elm","Erlang","Flix","Forth","Fortran","FSharp","FSL","FTL","Gcode","Gherkin","Gitignore","Glsl","Gobstones","golang","GraphQLSchema","Groovy","HAML","Handlebars","Haskell","Haskell_Cabal","haXe","Hjson","HTML","HTML_Elixir","HTML_Ruby","INI","Io","Ion","Jack","Jade","Java","JavaScript","JEXL","JSON","JSON5","JSONiq","JSP","JSSM","JSX","Julia","Kotlin","LaTeX","Latte","LESS","Liquid","Lisp","LiveScript","Log","LogiQL","Logtalk","LSL","Lua","LuaPage","Lucene","Makefile","Markdown","Mask","MATLAB","Maze","MediaWiki","MEL","MIPS","MIXAL","MUSHCode","MySQL","Nasal","Nginx","Nim","Nix","NSIS","Nunjucks","ObjectiveC","OCaml","Odin","PartiQL","Pascal","Perl","pgSQL","PHP","PHP_Laravel_blade","Pig","PLSQL","Powershell","Praat","Prisma","Prolog","Properties","Protobuf","PRQL","Puppet","Python","QML","R","Raku","Razor","RDoc","Red","RHTML","Robot","RST","Ruby","Rust","SaC","SASS","SCAD","Scala","Scheme","Scrypt","SCSS","SH","SJS","Slim","Smarty","Smithy","snippets","Soy_Template","Space","SPARQL","SQL","SQLServer","Stylus","SVG","Swift","Tcl","Terraform","Tex","Text","Textile","Toml","TSX","Turtle","Twig","Typescript","Vala","VBScript","Velocity","Verilog","VHDL","Visualforce","Vue","Wollok","XML","XQuery","YAML","Zeek","Zig","nameOverrides","Perl6","data","displayName","toLowerCase","push","openPrompt","nls","Range","FilteredList","AcePopup","$singleLineEditor","UndoManager","Tokenizer","modelist","prompt","message","options","lastPrompt","$type","cmdLine","session","setUndoManager","el","buildDom","class","hasDescription","overlay","done","container","setOption","getOption","setValue","selection","setRange","start","doc","indexToPosition","end","getCompletions","popup","renderer","setStyle","display","maxWidth","width","marginTop","setScrollMargin","autoSelect","$maxLines","setRow","on","getData","getRow","value","accept","stop","updateCompletions","$rules","tokenizer","bgTokenizer","setTokenizer","placeholder","promptTextContainer","val","getCursorPosition","row","valueFromRecentList","getValue","curData","onAccept","item","keys","onCancel","prefix","getPrefix","completions","setData","resize","current","Object","assign","goTo","gotoPageUp","gotoPageDown","commands","bindKeys","onInput","gotoLine","stringifySelection","Array","isArray","map","r","cursor","isBackwards","anchor","s","column","reverse","join","toJSON","Number","MAX_VALUE","_history","indexOf","splice","unshift","pos","ranges","str","parts","filter","Boolean","readPosition","c","index","parseInt","slice","range","fromPoints","fromJSON","scrollTop","scrollSelectionIntoView","animateScrolling","history","m","Math","min","getLength","line","getLine","concat","regex","token","normalizeName","x","toUpperCase","getEditorCommandsByName","excludeCommands","commandsByName","commandMap","keyBinding","$handlers","forEach","handler","platform","cbn","key","bindKey","description","command","needle","find","excludeCommandsList","shortcutsArray","meta","maxHistoryCount","commandName","addToHistory","execCommand","currentPos","filterValue","substring","getFilteredCompletions","resultCommands","parse","stringify","filtered","filterCompletions","getUniqueCommandList","usedCommands","recentlyUsedCommands","otherCommands","error","modesArray","modeName","setMode"],"sourceRoot":""}