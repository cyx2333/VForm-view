{"version":3,"file":"js/6564.7931e88b.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/behaviour/xml.js","webpack://admin/./node_modules/ace-code/src/mode/folding/xml.js","webpack://admin/./node_modules/ace-code/src/mode/xml.js","webpack://admin/./node_modules/ace-code/src/mode/xml_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\nfunction is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\n/**@type {(new() => Partial<import(\"../../../ace-internal\").Ace.Behaviour>)}*/\nvar XmlBehaviour = function () {\n\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                // Ignore input and move right one if we're typing over the closing quote.\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n\n            if (!token)\n                token = iterator.stepBackward();\n\n            if (!token)\n                return;\n\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n\n    this.add(\"string_dquotes\", \"deletion\", function(state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n\n            // exit if we're not in a tag\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n\n            // exit if we're inside of a quoted attribute value\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n                if (position.column < tokenEndColumn)\n                    return;\n                if (position.column == tokenEndColumn) {\n                    var nextToken = iterator.stepForward();\n                    // TODO also handle non-closed string at the end of the line\n                    if (nextToken && is(nextToken, \"attribute-value\"))\n                        return;\n                    iterator.stepBackward();\n                }\n            }\n\n            if (/^\\s*>/.test(session.getLine(position.row).slice(position.column)))\n                return;\n\n            // find tag name\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n\n            // exit if the tag is ending\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n\n            if (this.voidElements && this.voidElements.hasOwnProperty(element.toLowerCase()))\n                 return;\n\n            return {\n               text: \">\" + \"</\" + element + \">\",\n               selection: [1, 1]\n            };\n        }\n    });\n\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (is(token, \"\") && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                //get tag name\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n\n                if (!token) {\n                    return;\n                }\n\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n\n                //don't indent after closing tag\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n\n                if (this.voidElements && !this.voidElements[tag] || !this.voidElements) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column+1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    } else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n\n};\n\noop.inherits(XmlBehaviour, Behaviour);\n\nexports.XmlBehaviour = XmlBehaviour;\n","\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n    \n};\noop.inherits(FoldMode, BaseFoldMode);\n\nvar Tag = function() {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {row: 0, column: 0};\n    this.end = {row: 0, column: 0};\n};\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\n(function() {\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n\n        return \"start\";\n    };\n    \n    this.getCommentFoldWidget = function(session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n\n    /*\n     * returns a first tag (or a fragment) in a line\n     */\n    this._getFirstTagInLine = function(session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                if (token.value === \"\") { //skip empty tag name token for fragment\n                    token = tokens[++i];\n                    if (!token) return null;\n                    tag.tagName = token.value;\n                }\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n\n        return null;\n    };\n\n    this._findEndTagInLine = function(session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn - 1)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (is(token, \"tag-name\") && token.value === \"\") {\n                    token = tokens[i + 2];\n                }\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var firstTag = this._getFirstTagInLine(session, row);\n        if (!firstTag) {\n            return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(\n                row, session.getLine(row).length);\n        }\n        var tags = session.getMatchingTags({row: row, column: 0});\n        if (tags) {\n            return new Range(\n                tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n        }\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextMode = require(\"./text\").Mode;\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = require(\"./folding/xml\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n   this.HighlightRules = XmlHighlightRules;\n   this.$behaviour = new XmlBehaviour();\n   this.foldingRules = new XmlFoldMode();\n};\n\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.voidElements = lang.arrayToMap([]);\n\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"error\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n    \n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar XmlHighlightRules = function(normalize) {\n    // http://www.w3.org/TR/REC-xml/#NT-NameChar\n    // NameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n    // NameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n\n    this.$rules = {\n        start : [\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\n            {\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\"\n            },\n            {token : \"comment.start.xml\", regex : \"<\\\\!--\", next : \"comment\"},\n            {\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\n            },\n            {include : \"tag\"},\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\n            {token : \"text.tag-open.xml\", regex: \"<\"},\n            {include : \"reference\"},\n            {defaultToken : \"text.xml\"}\n        ],\n\n        processing_instruction : [{\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.decl-attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"whitespace\"\n        }, {\n            include: \"string\"\n        }, {\n            token : \"punctuation.xml-decl.xml\",\n            regex : \"\\\\?>\",\n            next : \"start\"\n        }],\n\n        doctype : [\n            {include : \"whitespace\"},\n            {include : \"string\"},\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\n        ],\n\n        int_subset : [{\n            token : \"text.xml\",\n            regex : \"\\\\s+\"\n        }, {\n            token: \"punctuation.int-subset.xml\",\n            regex: \"]\",\n            next: \"pop\"\n        }, {\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\n            push : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            },\n            {\n                token : \"punctuation.markup-decl.xml\",\n                regex : \">\",\n                next : \"pop\"\n            },\n            {include : \"string\"}]\n        }],\n\n        cdata : [\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\n            {token : \"text.xml\", regex : \"\\\\s+\"},\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\n        ],\n\n        comment : [\n            {token : \"comment.end.xml\", regex : \"-->\", next : \"start\"},\n            {defaultToken : \"comment.xml\"}\n        ],\n\n        reference : [{\n            token : \"constant.language.escape.reference.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        attr_reference : [{\n            token : \"constant.language.escape.reference.attribute-value.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        tag : [{\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n            ]\n        }],\n\n        tag_whitespace : [\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        // for doctype and processing instructions\n        whitespace : [\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n\n        // for doctype and processing instructions\n        string: [{\n            token : \"string.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }, {\n            token : \"string.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }],\n\n        attributes: [{\n            token : \"entity.other.attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"tag_whitespace\"\n        }, {\n            include: \"attribute_value\"\n        }],\n\n        attribute_value: [{\n            token : \"string.attribute-value.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }, {\n            token : \"string.attribute-value.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }]\n    };\n\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n\n\n(function() {\n\n    this.embedTagRules = function(HighlightRules, prefix, tag){\n        this.$rules.tag.unshift({\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\n                onMatch : function(value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n            }}\n        ];\n\n        this.embedRules(HighlightRules, prefix, [{\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: tag + \"-end\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"\\\\]\\\\]>\"\n        }]);\n    };\n\n}).call(TextHighlightRules.prototype);\n\noop.inherits(XmlHighlightRules, TextHighlightRules);\n\nexports.XmlHighlightRules = XmlHighlightRules;\n"],"names":["oop","require","Behaviour","TokenIterator","is","token","type","lastIndexOf","XmlBehaviour","this","add","state","action","editor","session","text","quote","selected","doc","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","line","getLine","row","rightChar","substring","column","iterator","getCurrentToken","stepBackward","rightSpace","match","range","isMultiLine","start","end","position","tokenEndColumn","getCurrentTokenColumn","value","length","nextToken","stepForward","test","slice","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","indexOf","tag","getTokenAt","nextIndent","$getIndent","indent","getTabString","inherits","exports","Range","BaseFoldMode","FoldMode","optionalEndTags","call","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","_findEndTagInLine","getCommentFoldWidget","getState","tokens","getTokens","i","startColumn","getFoldWidgetRange","firstTag","getCommentFoldRange","tags","getMatchingTags","openTag","closeTag","prototype","lang","TextMode","XmlHighlightRules","XmlFoldMode","WorkerClient","Mode","HighlightRules","$behaviour","foldingRules","arrayToMap","blockComment","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","TextHighlightRules","normalize","tagRegex","$rules","regex","next","caseInsensitive","include","defaultToken","processing_instruction","doctype","push","int_subset","cdata","comment","reference","attr_reference","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","normalizeRules","embedTagRules","prefix","unshift","onMatch","currentState","stack","splice","embedRules"],"sourceRoot":""}