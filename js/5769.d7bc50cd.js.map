{"version":3,"file":"js/5769.d7bc50cd.js","mappings":"2GAEA,IAAIA,EAAMC,EAAQ,OACdC,EAAWD,EAAAA,OAAAA,KACXE,EAA2BF,EAAAA,OAAAA,EAE3BG,EAAO,WACPC,KAAKC,eAAiBH,EACtBE,KAAKE,aAAe,KACpBF,KAAKG,WAAaH,KAAKI,iBAC3B,EACAT,EAAIU,SAASN,EAAMF,GAEnB,WACIG,KAAKM,iBAAmB,IACxBN,KAAKO,aAAe,KACpBP,KAAKQ,IAAM,qBACd,EAAEC,KAAKV,EAAKW,WAEbC,EAAQZ,KAAOA,C,wBCjBf,IAAIJ,EAAMC,EAAQ,OACdgB,EAAqBhB,EAAAA,OAAAA,EAGrBE,EAA2B,WAC3BE,KAAKa,OAAS,CACVC,MAAO,CAAC,CACJC,MAAO,CAAC,OAAQ,WAChBC,MAAO,mBACR,CACCD,MAAO,CAAC,OAAQ,UAAW,OAAQ,SAAU,OAAQ,WACrDC,MAAO,oEACR,CACCD,MAAO,CAAC,OAAQ,UAAW,OAAQ,WAAY,OAAQ,SAAU,OAAQ,WACzEC,MAAO,mGACR,CACCC,aAAc,aAItBjB,KAAKkB,gBACT,EAEApB,EAAyBqB,SAAW,CAChCC,UAAW,CAAC,QACZC,cAAe,MACfC,KAAM,aACNC,UAAW,eAIf5B,EAAIU,SAASP,EAA0Bc,GAEvCD,EAAQ,EAA2Bb,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/cuttlefish.js","webpack://admin/./node_modules/ace-code/src/mode/cuttlefish_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar CuttlefishHighlightRules = require(\"./cuttlefish_highlight_rules\").CuttlefishHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = CuttlefishHighlightRules;\n    this.foldingRules = null;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/cuttlefish\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n\nvar CuttlefishHighlightRules = function () {\n    this.$rules = {\n        start: [{\n            token: ['text', 'comment'],\n            regex: /^([ \\t]*)(#.*)$/\n        }, {\n            token: ['text', 'keyword', 'text', 'string', 'text', 'comment'],\n            regex: /^([ \\t]*)(include)([ \\t]*)([A-Za-z0-9-\\_\\.\\*\\/]+)([ \\t]*)(#.*)?$/\n        }, {\n            token: ['text', 'keyword', 'text', 'operator', 'text', 'string', 'text', 'comment'],\n            regex: /^([ \\t]*)([A-Za-z0-9-_]+(?:\\.[A-Za-z0-9-_]+)*)([ \\t]*)(=)([ \\t]*)([^ \\t#][^#]*?)([ \\t]*)(#.*)?$/\n        }, {\n            defaultToken: 'invalid'\n        }]\n    };\n\n    this.normalizeRules();\n};\n\nCuttlefishHighlightRules.metaData = {\n    fileTypes: ['conf'],\n    keyEquivalent: '^~C',\n    name: 'Cuttlefish',\n    scopeName: 'source.conf'\n};\n\n\noop.inherits(CuttlefishHighlightRules, TextHighlightRules);\n\nexports.CuttlefishHighlightRules = CuttlefishHighlightRules;\n"],"names":["oop","require","TextMode","CuttlefishHighlightRules","Mode","this","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","blockComment","$id","call","prototype","exports","TextHighlightRules","$rules","start","token","regex","defaultToken","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName"],"sourceRoot":""}