{"version":3,"file":"js/1950.7f37dd32.js","mappings":"2GAEA,IAAIA,EAAMC,EAAQ,OACdC,EAAWD,EAAAA,OAAAA,KACXE,EAAqBF,EAAAA,OAAAA,EAErBG,EAAO,WACPC,KAAKC,eAAiBH,EACtBE,KAAKE,WAAaF,KAAKG,iBAC3B,EACAR,EAAIS,SAASL,EAAMF,GAEnB,WAEIG,KAAKK,iBAAmB,KAExBL,KAAKM,IAAM,eACd,EAAEC,KAAKR,EAAKS,WAEbC,EAAQV,KAAOA,C,wBCjBf,IAAIJ,EAAMC,EAAQ,OACdc,EAAqBd,EAAAA,OAAAA,EAErBE,EAAqB,WAIrB,IAAIa,EAAW,+iBAYXC,EAAc,4IAIdC,EAAmB,iBAEnBC,EAAmB,+DAGnBC,EACA,kBAIAC,EAAgBhB,KAAKiB,oBAAoB,CACzC,mBAAoBH,EACpB,QAAWH,EACX,oBAAqBI,EACrB,mBAAoBF,EACpB,eAAgBD,GACjB,cAAc,GAEjBZ,KAAKkB,OAAS,CACV,MAAU,CAAE,CACRC,MAAQ,UACRC,MAAQ,SACT,CACCD,MAAQ,SACRC,MAAQ,SACT,CACCD,MAAQ,SACRC,MAAQ,SACT,CACCD,MAAQ,mBACRC,MAAQ,mDACT,CACCD,MAAQ,UACRC,MAAQ,kCACT,CACCD,MAAQH,EACRI,MAAQ,+BACT,CACCD,MAAQ,mBACRC,MAAQ,0DACT,CACGD,MAAQ,uBACRC,MAAQ,uBACZ,CACED,MAAQ,eACRC,MAAQ,QACT,CACCD,MAAQ,eACRC,MAAQ,UACT,CACCD,MAAQ,OACRC,MAAQ,SAKpB,EAEAzB,EAAIS,SAASN,EAAoBY,GAEjCD,EAAQ,EAAqBX,C","sources":["webpack://admin/./node_modules/ace-code/src/mode/vhdl.js","webpack://admin/./node_modules/ace-code/src/mode/vhdl_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar VHDLHighlightRules = require(\"./vhdl_highlight_rules\").VHDLHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = VHDLHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n\n    this.$id = \"ace/mode/vhdl\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar VHDLHighlightRules = function() {\n\n\n    \n    var keywords = \"access|after|alias|all|architecture|assert|attribute|\"+\n                   \"begin|block|body|buffer|bus|case|component|configuration|\"+\n                   \"context|disconnect|downto|else|elsif|end|entity|exit|\"+\n                   \"file|for|force|function|generate|generic|group|guarded|\"+\n                   \"if|impure|in|inertial|inout|is|label|library|linkage|\"+\n                   \"literal|loop|map|new|next|of|on|or|open|others|out|\"+\n                   \"package|parameter|port|postponed|procedure|process|\"+\n                   \"protected|pure|range|record|register|reject|release|\"+\n                   \"report|return|select|severity|shared|signal|subtype|then|\"+\n                   \"to|transport|type|unaffected|units|until|use|variable|\"+\n                   \"wait|when|while|with\";\n    \n    var storageType = \"bit|bit_vector|boolean|character|integer|line|natural|\"+\n                      \"positive|real|register|signed|std_logic|\"+\n                      \"std_logic_vector|string||text|time|unsigned\";\n    \n    var storageModifiers = \"array|constant\";\n    \n    var keywordOperators = \"abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra\"+\n                           \"srl|xnor|xor\";\n    \n    var builtinConstants = (\n        \"true|false|null\"\n    );\n\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.operator\": keywordOperators,\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants,\n        \"storage.modifier\": storageModifiers,\n        \"storage.type\": storageType\n    }, \"identifier\", true);\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"--.*$\"\n        }, {\n            token : \"string\",           // \" string\n            regex : '\".*?\"'\n        }, {\n            token : \"string\",           // ' string\n            regex : \"'.*?'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : \"keyword\", // pre-compiler directives\n            regex : \"\\\\s*(?:library|package|use)\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>\" \n        }, {\n              token : \"punctuation.operator\",\n              regex : \"\\\\'|\\\\:|\\\\,|\\\\;|\\\\.\"\n        },{\n            token : \"paren.lparen\",\n            regex : \"[[(]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\])]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        } ]\n\n       \n    };\n};\n\noop.inherits(VHDLHighlightRules, TextHighlightRules);\n\nexports.VHDLHighlightRules = VHDLHighlightRules;\n"],"names":["oop","require","TextMode","VHDLHighlightRules","Mode","this","HighlightRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","$id","call","prototype","exports","TextHighlightRules","keywords","storageType","storageModifiers","keywordOperators","builtinConstants","keywordMapper","createKeywordMapper","$rules","token","regex"],"sourceRoot":""}