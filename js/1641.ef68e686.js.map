{"version":3,"file":"js/1641.ef68e686.js","mappings":"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","sources":["webpack://admin/./node_modules/ace-code/src/mode/twig.js","webpack://admin/./node_modules/ace-code/src/mode/twig_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar HtmlMode = require(\"./html\").Mode;\nvar TwigHighlightRules = require(\"./twig_highlight_rules\").TwigHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function() {\n    HtmlMode.call(this);\n    this.HighlightRules = TwigHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n};\noop.inherits(Mode, HtmlMode);\n\n(function() {\n    this.blockComment = {start: \"{#\", end: \"#}\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/twig\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar TwigHighlightRules = function() {\n    // inherit from html\n    HtmlHighlightRules.call(this);\n\n    var tags = \"autoescape|block|do|embed|extends|filter|flush|for|from|if|import|include|macro|sandbox|set|spaceless|use|verbatim\";\n    tags = tags + \"|end\" + tags.replace(/\\|/g, \"|end\");\n    var filters = \"abs|batch|capitalize|convert_encoding|date|date_modify|default|e|escape|first|format|join|json_encode|keys|last|length|lower|merge|nl2br|number_format|raw|replace|reverse|slice|sort|split|striptags|title|trim|upper|url_encode\";\n    var functions = \"attribute|constant|cycle|date|dump|parent|random|range|template_from_string\";\n    var tests = \"constant|divisibleby|sameas|defined|empty|even|iterable|odd\";\n    var constants = \"null|none|true|false\";\n    var operators = \"b-and|b-xor|b-or|in|is|and|or|not\";\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control.twig\": tags,\n        \"support.function.twig\": [filters, functions, tests].join(\"|\"),\n        \"keyword.operator.twig\":  operators,\n        \"constant.language.twig\": constants\n    }, \"identifier\");\n\n    // add twig start tags to the HTML start tags\n    for (var rule in this.$rules) {\n        this.$rules[rule].unshift({\n            token : \"variable.other.readwrite.local.twig\",\n            regex : \"\\\\{\\\\{-?\",\n            push : \"twig-start\"\n        }, {\n            token : \"meta.tag.twig\",\n            regex : \"\\\\{%-?\",\n            push : \"twig-start\"\n        }, {\n            token : \"comment.block.twig\",\n            regex : \"\\\\{#-?\",\n            push : \"twig-comment\"\n        });\n    }\n\n    // add twig closing comment to HTML comments\n    this.$rules[\"twig-comment\"] = [{\n        token : \"comment.block.twig\",\n        regex : \".*-?#\\\\}\",\n        next : \"pop\"\n    }];\n\n    this.$rules[\"twig-start\"] = [{\n        token : \"variable.other.readwrite.local.twig\",\n        regex : \"-?\\\\}\\\\}\",\n        next : \"pop\"\n    }, {\n        token : \"meta.tag.twig\",\n        regex : \"-?%\\\\}\",\n        next : \"pop\"\n    }, {\n        token : \"string\",\n        regex : \"'\",\n        next  : \"twig-qstring\"\n    }, {\n        token : \"string\",\n        regex : '\"',\n        next  : \"twig-qqstring\"\n    }, {\n        token : \"constant.numeric\", // hex\n        regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n    }, {\n        token : \"constant.numeric\", // float\n        regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n    }, {\n        token : \"constant.language.boolean\",\n        regex : \"(?:true|false)\\\\b\"\n    }, {\n        token : keywordMapper,\n        regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n    }, {\n        token : \"keyword.operator.assignment\",\n        regex : \"=|~\"\n    }, {\n        token : \"keyword.operator.comparison\",\n        regex : \"==|!=|<|>|>=|<=|===\"\n    }, {\n        token : \"keyword.operator.arithmetic\",\n        regex : \"\\\\+|-|/|%|//|\\\\*|\\\\*\\\\*\"\n    }, {\n        token : \"keyword.operator.other\",\n        regex : \"\\\\.\\\\.|\\\\|\"\n    }, {\n        token : \"punctuation.operator\",\n        regex : /\\?|:|,|;|\\./\n    }, {\n        token : \"paren.lparen\",\n        regex : /[\\[\\({]/\n    }, {\n        token : \"paren.rparen\",\n        regex : /[\\])}]/\n    }, {\n        token : \"text\",\n        regex : \"\\\\s+\"\n    } ];\n\n    this.$rules[\"twig-qqstring\"] = [{\n            token : \"constant.language.escape\",\n            regex : /\\\\[\\\\\"$#ntr]|#{[^\"}]*}/\n        }, {\n            token : \"string\",\n            regex : '\"',\n            next  : \"twig-start\"\n        }, {\n            defaultToken : \"string\"\n        }\n    ];\n\n    this.$rules[\"twig-qstring\"] = [{\n            token : \"constant.language.escape\",\n            regex : /\\\\[\\\\'ntr]}/\n        }, {\n            token : \"string\",\n            regex : \"'\",\n            next  : \"twig-start\"\n        }, {\n            defaultToken : \"string\"\n        }\n    ];\n\n    this.normalizeRules();\n};\n\noop.inherits(TwigHighlightRules, TextHighlightRules);\n\nexports.TwigHighlightRules = TwigHighlightRules;\n"],"names":["oop","require","HtmlMode","TwigHighlightRules","MatchingBraceOutdent","Mode","call","this","HighlightRules","$outdent","inherits","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","length","type","match","checkOutdent","input","autoOutdent","doc","row","$id","prototype","exports","HtmlHighlightRules","TextHighlightRules","tags","replace","filters","functions","tests","constants","operators","keywordMapper","createKeywordMapper","join","rule","$rules","unshift","token","regex","push","next","defaultToken","normalizeRules"],"sourceRoot":""}